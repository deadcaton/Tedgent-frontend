/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/css/app.css":
/*!*************************!*\
  !*** ./src/css/app.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/app.css?");

/***/ }),

/***/ "./src/css/dark-theme.css":
/*!********************************!*\
  !*** ./src/css/dark-theme.css ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/dark-theme.css?");

/***/ }),

/***/ "./src/css/profile.css":
/*!*****************************!*\
  !*** ./src/css/profile.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/profile.css?");

/***/ }),

/***/ "./src/css/raiting.css":
/*!*****************************!*\
  !*** ./src/css/raiting.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/raiting.css?");

/***/ }),

/***/ "./src/css/search.css":
/*!****************************!*\
  !*** ./src/css/search.css ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/search.css?");

/***/ }),

/***/ "./src/css/settings.css":
/*!******************************!*\
  !*** ./src/css/settings.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/settings.css?");

/***/ }),

/***/ "./src/css/test-create.css":
/*!*********************************!*\
  !*** ./src/css/test-create.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/test-create.css?");

/***/ }),

/***/ "./src/css/test-result.css":
/*!*********************************!*\
  !*** ./src/css/test-result.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/test-result.css?");

/***/ }),

/***/ "./src/css/test.css":
/*!**************************!*\
  !*** ./src/css/test.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/test.css?");

/***/ }),

/***/ "./src/img/pp.jpg":
/*!************************!*\
  !*** ./src/img/pp.jpg ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"img/pp.jpg\");\n\n//# sourceURL=webpack:///./src/img/pp.jpg?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_app_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/app.css */ \"./src/css/app.css\");\n/* harmony import */ var _css_app_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_app_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_raiting_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./css/raiting.css */ \"./src/css/raiting.css\");\n/* harmony import */ var _css_raiting_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_raiting_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _css_test_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css/test.css */ \"./src/css/test.css\");\n/* harmony import */ var _css_test_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_test_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _css_profile_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./css/profile.css */ \"./src/css/profile.css\");\n/* harmony import */ var _css_profile_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_css_profile_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _css_test_create_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./css/test-create.css */ \"./src/css/test-create.css\");\n/* harmony import */ var _css_test_create_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_css_test_create_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _css_test_result_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./css/test-result.css */ \"./src/css/test-result.css\");\n/* harmony import */ var _css_test_result_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_css_test_result_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _css_settings_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./css/settings.css */ \"./src/css/settings.css\");\n/* harmony import */ var _css_settings_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_css_settings_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _css_search_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./css/search.css */ \"./src/css/search.css\");\n/* harmony import */ var _css_search_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_css_search_css__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _css_dark_theme_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./css/dark-theme.css */ \"./src/css/dark-theme.css\");\n/* harmony import */ var _css_dark_theme_css__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_css_dark_theme_css__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _img_pp_jpg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./img/pp.jpg */ \"./src/img/pp.jpg\");\n/* harmony import */ var _js_app__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./js/app */ \"./src/js/app.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/js/account-settings/accountSettings.js":
/*!****************************************************!*\
  !*** ./src/js/account-settings/accountSettings.js ***!
  \****************************************************/
/*! exports provided: AccountSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccountSettings\", function() { return AccountSettings; });\n/* harmony import */ var _accountSettingsContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accountSettingsContent */ \"./src/js/account-settings/accountSettingsContent.js\");\n\n\nclass AccountSettings {\n    constructor(page) {\n        this.page = page;\n\n        this.contentCl = new _accountSettingsContent__WEBPACK_IMPORTED_MODULE_0__[\"AccountSettingsContent\"]();\n    }\n\n    /**\n     * Метод для валидации фамилии, имени и отчества.\n     * \n     * @param {object} inp проверяемое поле для ввода.\n     */\n    fullNameValidation(inp) {\n        let haveError = false,\n            inpWrapper = this.page.fieldCl.surfacingToInpWrapper(inp);\n\n        if (!this.page.fieldCl.checkOnEmpty(inp.value)) {\n            haveError = true;\n            this.page.fieldCl.showError(inpWrapper,\n                'Это поле не может быть пустым.');\n        }\n\n        if (!haveError) {\n            this.page.fieldCl.hideError(inpWrapper);\n        }\n    }\n\n    /**\n     * Метод для валидации имени пользователя.\n     * \n     * @param {object} inp проверяемое поле для ввода.\n     */\n    usernameValidation(inp) {\n        let haveError = false,\n            inpWrapper = this.page.fieldCl.surfacingToInpWrapper(inp);\n\n        if (inp.value.length !== 0) {\n            if (!this.page.fieldCl.checkOnUsername(inp.value)) {\n                haveError = true;\n                this.page.fieldCl.showError(inpWrapper,\n                    'Имя пользователя может быть написано только на латинице, содержать цифры и иметь длину от 5 до 20 символов.');\n            }\n        }\n\n        if (!haveError) {\n            this.page.fieldCl.hideError(inpWrapper);\n        }\n    }\n\n    /**\n     * Метод для валидации пароля.\n     * \n     * @param {object} inp поля для ввода пароля.\n     */\n    passwordValidation(inp) {\n        console.log(inp);\n\n        let haveError = false,\n            inpWrapper = this.page.fieldCl.surfacingToInpWrapper(inp);\n\n        if (inp.value.length !== 0) {\n            if (!this.page.fieldCl.checkOnPassword(inp.value)) {\n                haveError = true;\n                this.page.fieldCl.showError(inpWrapper,\n                    'Пароль должен быть на латинице, содержать минимум одну цифру, букву в верхнем и нижнем регистре и иметь длину не менее 8 символов.');\n            }\n        }\n\n        if (!haveError) {\n            this.page.fieldCl.hideError(inpWrapper);\n        }\n    }\n\n    /**\n     * Проверяет значение с полей для ввода нового пароля на идентичность.\n     * \n     * @param {object} newPassInp поля для ввода нового пароля.\n     * @param {object} newPassRetryInp поля для повторного ввода нового пароля.\n     */\n    validateNewPassword(newPassInp, newPassRetryInp) {\n        let haveError = false,\n            newPassRetryInpWrapper = this.page.fieldCl.surfacingToInpWrapper(newPassRetryInp);\n\n        if (newPassInp.value.length !== 0) {\n            if (newPassInp.value !== newPassRetryInp.value) {\n                this.page.fieldCl.showError(newPassRetryInpWrapper,\n                    'Пароли не совпадают.');\n                haveError = true;\n            }\n        }\n\n        if (!haveError) {\n            this.page.fieldCl.hideError(newPassRetryInpWrapper);\n        }\n    }\n\n    collectPublicData() {\n        const form = this.page.content.getElementsByClassName('js-account-settings-public-data-form')[0],\n            inps = form.getElementsByClassName('js-inp');\n\n        let data,\n            errorIsHave = false;\n        for (let inp of inps) {\n            switch (inp.name) {\n                case 'firstName':\n                    break;\n\n                case 'lastName':\n                    break;\n\n                case 'patronomyc':\n                    break;\n\n                case 'patronomyc':\n                    break;\n\n                case 'username':\n                    errorIsHave = this.page.fieildsCl.checkOnUserName(inp.value);\n                    this.page.fieildsCl.showError();\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Отвечает за загрузку страницы.\n     * \n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n     */\n    runPage(contentBd) {\n        // contentBd.innerHTML = this.contentCl.getPage();\n\n        this.setHandlers();\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n\n        // Вешает обработчики событий на поля для ввода\n        const inps = this.page.content.getElementsByClassName('js-inp');\n        for (let inp of inps) {\n\n            // Вешает обработчики событий на поля ФИО\n            if (inp.name === 'firstName' ||\n                inp.name === 'lastName' ||\n                inp.name === 'patronymic') {\n                inp.addEventListener('input', () => this.fullNameValidation(inp));\n            }\n\n            // Вешает обработчик события на поле имени пользователя\n            if (inp.name === 'username') {\n                inp.addEventListener('input', () => this.usernameValidation(inp));\n            }\n\n            // Вешает обработчик события на поля для ввода и смены пароля\n            if (inp.name === 'currentPassword' || inp.name === 'newPassword') {\n\n                inp.addEventListener('input', () => this.passwordValidation(inp));\n            }\n\n            // Вешает обработчики событий на поля для ввода нового пароля и его повтора \n            if (inp.name === 'newPasswordRetry' || inp.name === 'newPassword') {\n                let newPassword = this.page.content.getElementsByClassName('js-account-settings-new-password-inp')[0],\n                    newPasswordRetry = this.page.content.getElementsByClassName('js-account-settings-new-password-retry-inp')[0];\n                inp.addEventListener('input', () => this.validateNewPassword(newPassword, newPasswordRetry));\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/account-settings/accountSettings.js?");

/***/ }),

/***/ "./src/js/account-settings/accountSettingsContent.js":
/*!***********************************************************!*\
  !*** ./src/js/account-settings/accountSettingsContent.js ***!
  \***********************************************************/
/*! exports provided: AccountSettingsContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccountSettingsContent\", function() { return AccountSettingsContent; });\nclass AccountSettingsContent {\n\n  getPage() {\n    return `<div class=\"cnt_bd-settings\">\n        <div class=\"settings_hd\">\n          <div class=\"settings_hd-menu pivot-menu\">\n            <button class=\"settings_hd-menu--btn btn pivot-menu--btn pivot-menu--btn-active js-link-btn\"\n              data-link=\"/acconut/settings\" data-link-page-num=\"6\" data-action=\"goToPage\" data-run-in-frame=\"true\">Аккаунт</button>\n            <button class=\"settings_hd-menu--btn btn pivot-menu--btn js-link-btn\" data-link=\"/acconut/settings\"\n              data-link-page-num=\"7\" data-action=\"goToPage\" data-run-in-frame=\"true\">Сервис</button>\n          </div>\n        </div>\n        <div class=\"settings_bd\">\n          <div class=\"cnt-block\">\n            <div class=\"cnt-block_hd\">\n              <div class=\"cnt-block_hd-title\">Публичные данные</div>\n            </div>\n            <div class=\"settings-acc-info-block_bd cnt-block_bd\">\n              <label class=\"settings-acc-info-label\">\n                <span class=\"label-txt\">Фамилия</span>\n                <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\n                  data-auto-hang-handler=\"true\">\n                  <input class=\"inp js-inp\" name=\"firstName\" data-characters-max-limit-value=\"50\" type=\"text\">\n                  <span class=\"inp-limit--value js-inp-limit-value\">50</span>\n                </div>\n              </label>\n              <label class=\"settings-acc-info-label\">\n                <span class=\"label-txt\">Имя</span>\n                <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\n                  data-auto-hang-handler=\"true\">\n                  <input class=\"inp js-inp\" name=\"lastName\" data-characters-max-limit-value=\"50\" type=\"text\">\n                  <span class=\"inp-limit--value js-inp-limit-value\">50</span>\n                </div>\n              </label>\n              <label class=\"settings-acc-info-label\">\n                <span class=\"label-txt\">Отчество</span>\n                <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\n                  data-auto-hang-handler=\"true\">\n                  <input class=\"inp js-inp\" name=\"patronymic\" data-characters-max-limit-value=\"50\" type=\"text\">\n                  <span class=\"inp-limit--value js-inp-limit-value\">50</span>\n                </div>\n              </label>\n              <label class=\"settings-acc-info-label\">\n                <span class=\"label-txt\">Дата рождения</span>\n                <div class=\"date-inp_wr\">\n                  <span class=\"date-inp--icon inp--icon i-calendar\"></span>\n                  <input class=\"inp date--inp js-date-inp\" type=\"text\" placeholder=\"03.07.2020\">\n                </div>\n              </label>\n              <label class=\"settings-acc-info-label\">\n                <span class=\"label-txt\">Имя пользователя</span>\n                <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\n                  data-auto-hang-handler=\"true\">\n                  <input class=\"inp js-inp\" name=\"userName\" data-characters-max-limit-value=\"30\" type=\"text\">\n                  <span class=\"inp-limit--value js-inp-limit-value\">30</span>\n                </div>\n                <span class=\"label-dsc\">Имя пользователя позволяет найти Ваш профиль не зная Вашего личного\n                  идентификатора.</span>\n                <span class=\"label-dsc\">Можно использовать латиницу (a-z), цифры (0-9) и тире. Минимальная длина — 5\n                  символов.</span>\n                <span class=\"label-dsc\">Ваш профиль будет доступен по ссылке <a\n                    class=\"link js-settings-account-info-username-link\"\n                    href=\"https://tedgent.org/ir-yasaviev\">https://tedgent.org/ir-yasaviev</a></span>\n              </label>\n            </div>\n            <div class=\"settings-acc-info-block_ft cnt-block_ft\">\n              <button class=\"btn btn-1 settings-save--btn\">Сохранить</button>\n            </div>\n          </div>\n          <div class=\"cnt-block\">\n            <div class=\"cnt-block_hd\">\n              <div class=\"cnt-block_hd-title\">Безопасность</div>\n            </div>\n            <div class=\"settings-acc-security-block_bd cnt-block_bd\">\n              <label class=\"settings-acc-security-label\">\n                <span class=\"label-txt\">Старый пароль</span>\n                <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"true\">\n                  <input class=\"inp js-inp\" name=\"oldPassword\" data-characters-max-limit-value=\"30\" type=\"password\">\n                </div>\n              </label>\n              <label class=\"settings-acc-security-label\">\n                <span class=\"label-txt\">Новый пароль</span>\n                <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"true\">\n                  <input class=\"inp js-inp\" name=\"newPassword\" data-characters-max-limit-value=\"30\" type=\"password\">\n                </div>\n                <span class=\"label-dsc\">Пароль должен быть на латинице (a-z), содержать цифры (0-9), один знак в верхнем\n                  регистре (A) и один в нижнем (a).</span>\n              </label>\n              <label class=\"settings-acc-security-label\">\n                <span class=\"label-txt\">Повторите новый пароль</span>\n                <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"true\">\n                  <input class=\"inp js-inp\" name=\"newPassword\" data-characters-max-limit-value=\"30\" type=\"password\">\n                </div>\n              </label>\n            </div>\n            <div class=\"settings-acc-security-block_ft cnt-block_ft\">\n              <button class=\"btn btn-1 settings-save--btn\">Сохранить</button>\n            </div>\n          </div>\n        </div>\n      </div>`;\n  }\n}\n\n//# sourceURL=webpack:///./src/js/account-settings/accountSettingsContent.js?");

/***/ }),

/***/ "./src/js/answer/answer.js":
/*!*********************************!*\
  !*** ./src/js/answer/answer.js ***!
  \*********************************/
/*! exports provided: Answer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Answer\", function() { return Answer; });\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controls */ \"./src/js/controls.js\");\n/* harmony import */ var _answerContent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./answerContent */ \"./src/js/answer/answerContent.js\");\n\n\n\n\n/**\n * Класс содержащий методы для работы с ответами. \n */\nclass Answer {\n    constructor(question) {\n        this.controlsCl = new _controls__WEBPACK_IMPORTED_MODULE_0__[\"Controls\"]();\n        this.contentCl = new _answerContent__WEBPACK_IMPORTED_MODULE_1__[\"AnswerContent\"]();\n        this.questionCl = question;\n    }\n\n    /**\n     * Меняет тип варианта ответа.\n     * \n     * @param {object} question блок вопроса.\n     */\n    changeAnswerType(question) {\n        const select = question.getElementsByClassName('js-test-create-answer-type-select')[0],\n            answersWrapper = question.getElementsByClassName('js-test-question-answers')[0],\n            selectOptionData = select.getElementsByClassName('js-select-value')[0].dataset.selectOptionValue,\n            currentAnswerType = question.dataset.answersType;\n\n        question.dataset.answersType = selectOptionData;\n\n        if (selectOptionData === '1' || selectOptionData === '2') {\n\n            // Если текущий выбранный вариант ответа явлется текстовым или числовым.\n            if (currentAnswerType === '3' || currentAnswerType === '4') {\n\n                // Заменяет вариант ответа с текстового или числового на множестевнный или единичный.\n                answersWrapper.innerHTML = '';\n                this.addAnswer(question);\n\n                // Включает возможность взаимодействия с кнопкой добавления варианта ответа.\n                this.controlsCl.enableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\n            }\n            else {\n                let answers = answersWrapper.getElementsByClassName('js-test-question-answer'),\n                    answerNum = 1;\n\n                for (let answer of answers) {\n                    let answerChoiceBtn = answer.getElementsByClassName('js-test-question-answer-choice-btn')[0];\n\n                    answerChoiceBtn.remove();\n                    answer.insertAdjacentHTML(\n                        'afterbegin',\n                        this.contentCl.getAnswerChoiceBtn(\n                            selectOptionData,\n                            Number(question.dataset.questionNum),\n                            Number(answerNum)\n                        ));\n\n                    answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].onchange = () => this.chooseAnAnswer(answer, question);\n\n                    answerNum++;\n                }\n\n                this.deselect(question);\n            }\n\n            return;\n        }\n\n        if (selectOptionData === '3' || selectOptionData === '4') {\n            this.addAnswer(question);\n\n            this.controlsCl.disableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\n            return;\n        }\n    }\n\n    /**\n     * Добавляет новый вариант ответа.\n     * \n     * @param {object} question вопрос в котором добавляется вариант ответа.\n     * @param {number} maxLimit максимальное ограничение на количество вариантов ответов в вопросе.\n     */\n    addAnswer(target, maxLimit = 1) {\n        const question = this.questionCl.surfacingToQuestion(target),\n            questionNum = question.dataset.questionNum,\n            type = question.dataset.answersType,\n            answersWrapper = question.getElementsByClassName('js-test-question-answers')[0],\n            answerAddBtn = question.getElementsByClassName('js-test-create-answer-add-btn')[0];\n\n        let answers = answersWrapper.getElementsByClassName('js-test-question-answer');\n        switch (type) {\n            case '1':\n                if (this.checkQuantityOfAnswers(question)) {\n                    answersWrapper.insertAdjacentHTML('beforeEnd', this.getAnswerItem(type, questionNum, answers.length));\n\n                    if (!this.checkQuantityOfAnswers(question)) {\n                        this.controlsCl.disableButton(answerAddBtn);\n                    }\n                }\n                break;\n\n            case '2':\n                if (this.checkQuantityOfAnswers(question)) {\n                    answersWrapper.insertAdjacentHTML('beforeEnd', this.getAnswerItem(type, questionNum, answers.length));\n\n                    if (!this.checkQuantityOfAnswers(question)) {\n                        this.controlsCl.disableButton(answerAddBtn);\n                    }\n                }\n                break;\n\n            case '3':\n                answersWrapper.innerHTML = this.getAnswerItem(type, questionNum);\n                break;\n\n            case '4':\n                answersWrapper.innerHTML = this.getAnswerItem(type, questionNum);\n                break;\n        }\n\n        if (type === '1' || type === '2') {\n            const newAnswer = answers[answers.length - 1];\n\n            // Вешает обработчик события метода выделения выбранного варианта ответа.\n            newAnswer.getElementsByClassName('js-test-question-answer-choice-inp')[0].onchange = () => this.chooseAnAnswer(newAnswer, question);\n        }\n    }\n\n    /**\n     * Возвращает DOMString варианта ответа.\n     * \n     * @param {string} answerType тип возвращаемого варианта.\n     * @param {string} questionNum номер вопроса.\n     * @param {number} answerNum номер варианта ответа.\n     */\n    getAnswerItem(answerType, questionNum, answerNum = 1) {\n        return this.contentCl.getAnswer(answerType, questionNum, answerNum + 1);\n    }\n\n    /**\n     * Удаляет вариант ответа.\n     * \n     * @param {object} event событие.\n     */\n    deleteAnswer(target) {\n        let question = this.questionCl.surfacingToQuestion(target),\n            answerForDelete = this.surfacingToAnswer(target),\n            answers = question.getElementsByClassName('js-test-question-answer');\n\n        if (answerForDelete !== undefined) {\n\n            // Удаляет вариант ответа\n            answerForDelete.remove();\n\n            // Переисывает значения атрибутов у оставшихся вариантов\n            let newAnswerNum = 1;\n            for (let answer of answers) {\n                answer.dataset.answerNum = newAnswerNum;\n\n                answer.getElementsByClassName('js-test-question-answer-inp')[0].placeholder = `Ответ №${newAnswerNum}`;\n                answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].id = `answer${question.dataset.questionNum}${newAnswerNum}`;\n                answer.getElementsByClassName('js-test-question-answer-choice-label')[0].setAttribute('for', `answer${question.dataset.questionNum}${newAnswerNum}`);\n\n                newAnswerNum++;\n            }\n\n            if (this.checkQuantityOfAnswers(question)) {\n                this.controlsCl.enableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\n            }\n            else {\n                this.controlsCl.disableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\n            }\n        }\n    }\n\n    /**\n     * Проверяет количество вопросов.\n     * Возвращает false если количество вопросов равно или превышает заданный лимит и true, если нет.\n     * \n     * @param {object} question - блок вопроса. \n     * @param {number} maxLimit - максимальный заданный лимит количества вопросов. По умолчанию равен 6.\n     */\n    checkQuantityOfAnswers(question, maxLimit = 6) {\n        const answers = question.getElementsByClassName('js-test-question-answer');\n\n        if (answers.length >= maxLimit) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n\n    /**\n     * Выделяет выбранный ответ.\n     * \n     * @param {object} answer вариант ответа.\n     */\n    chooseAnAnswer(answer, question) {\n        const choiceBtnInp = answer.getElementsByClassName('js-test-question-answer-choice-inp')[0];\n\n        // Если тип кнопок radio => удаляет все ранее выделенные варианты.\n        if (choiceBtnInp.getAttribute('type') === 'radio') {\n            for (let item of question.getElementsByClassName('js-test-question-answer')) {\n                if (item.classList.contains('test-question-answer-active')) {\n                    item.classList.remove('test-question-answer-active');\n                }\n            }\n        }\n\n        if (choiceBtnInp.checked) {\n            if (!answer.classList.contains('test-question-answer-active')) {\n                answer.classList.add('test-question-answer-active');\n            }\n        }\n        else {\n            if (answer.classList.contains('test-question-answer-active')) {\n                answer.classList.remove('test-question-answer-active');\n            }\n        }\n    }\n\n    /**\n     * Удаляет выделения выбранных ответов.\n     * \n     * @param {object} question вопрос, с выбранных вариантов которого нужно снять выделение.\n     */\n    deselect(question) {\n        for (let answer of question.getElementsByClassName('js-test-question-answer')) {\n            if (answer.classList.contains('test-question-answer-active')) {\n                answer.classList.remove('test-question-answer-active');\n            }\n        }\n    }\n\n    /**\n    * Всплытие с element до ответа.\n    * \n    * @param {object} element \n    */\n    surfacingToAnswer(element) {\n        while (element !== document) {\n            if (element !== null) {\n                if (element.classList.contains('js-test-question-answer')) {\n                    return element;\n                }\n                element = element.parentNode;\n            }\n            else {\n                return undefined;\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/answer/answer.js?");

/***/ }),

/***/ "./src/js/answer/answerContent.js":
/*!****************************************!*\
  !*** ./src/js/answer/answerContent.js ***!
  \****************************************/
/*! exports provided: AnswerContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnswerContent\", function() { return AnswerContent; });\nclass AnswerContent {\n\n    /**\n     * Возвращает DOMString сфорированного варианта ответа.\n     * \n     * @param {string} answerType тип варианта ответа.\n     * @param {number} questionNum номер вопроса\n     * @param {number} answerNum номер варианта ответа.\n     */\n    getAnswer(answerType, questionNum, answerNum) {\n        switch (answerType) {\n            case '1':\n                return `<div class=\"test_create_bd-question-answer js-test-question-answer\" data-answer-num=\"${answerNum}\">\n                <div class=\"test-question-answer-checkbox js-test-question-answer-choice-btn\">\n                <input class=\"test-question-answer-checkbox--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerCheck${questionNum}\" type=\"checkbox\">\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\n                </div>\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"text\" placeholder=\"Ответ №${answerNum}\">\n                <button class=\"test_create_bd-question-answer--btn btn i-cross js-test-create-question-answer-delete-btn\" data-answer-action=\"deleteAnswer\"></button></div>`;\n\n            case '2':\n                return `<div class=\"test_create_bd-question-answer js-test-question-answer\" data-answer-num=\"${answerNum}\">\n                <div class=\"test-question-answer-radio js-test-question-answer-choice-btn\">\n                <input class=\"test-question-answer-radio--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerRadio${questionNum}\" type=\"radio\">\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\n                </div>\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"text\" placeholder=\"Ответ №${answerNum}\">\n                <button class=\"test_create_bd-question-answer--btn btn i-cross js-test-create-question-answer-delete-btn\" data-answer-action=\"deleteAnswer\"></button></div>`;\n\n            case '3':\n                return `<div class=\"test_create_bd-question-answer test-question-answer-active js-test-question-answer\" data-answer-num=\"1\">\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"text\" placeholder=\"Ответ...\"></div>`;\n\n            case '4':\n                return `<div class=\"test_create_bd-question-answer test-question-answer-active js-test-question-answer\" data-answer-num=\"1\">\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"number\" step=\"any\" placeholder=\"1\"></div>`;\n        }\n    }\n\n    /**\n     * Возвращает DOMString блока с кнопкой выбора варианта ответа.\n     * \n     * @param {string} type тип варианта ответа который нужно вернуть.\n     * @param {number} questionNum номер вопроса.\n     * @param {number} answerNum номер ответа.\n     */\n    getAnswerChoiceBtn(answerType, questionNum, answerNum) {\n        switch (answerType) {\n            case '1':\n                return `<div class=\"test-question-answer-checkbox js-test-question-answer-choice-btn\">\n                <input class=\"test-question-answer-checkbox--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerCheck${questionNum}\" type=\"checkbox\">\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\n                </div>`;\n\n            case '2':\n                return `<div class=\"test-question-answer-radio js-test-question-answer-choice-btn\">\n                <input class=\"test-question-answer-radio--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerRadio${questionNum}\" type=\"radio\">\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\n                </div>`;\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/answer/answerContent.js?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! exports provided: App */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"App\", function() { return App; });\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page */ \"./src/js/page.js\");\n\n\nclass App {\n    constructor() { }\n\n    load() {\n        new _page__WEBPACK_IMPORTED_MODULE_0__[\"Page\"]().runPageContent();\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    let app = new App().load();\n});\n\n//# sourceURL=webpack:///./src/js/app.js?");

/***/ }),

/***/ "./src/js/controls.js":
/*!****************************!*\
  !*** ./src/js/controls.js ***!
  \****************************/
/*! exports provided: Controls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Controls\", function() { return Controls; });\n/**\n * Класс с методами для работы с элементами управления.\n */\nclass Controls {\n    constructor(page) {\n        this.page = page;\n    }\n\n    /**\n     * Отключает возможность взайимодествия с кнопкой.\n     * \n     * @param {object} btn кнопка, которую нужно отключить.\n     */\n    disableButton(btn) {\n        if (!btn.classList.contains('btn-disable')) {\n            btn.classList.add('btn-disable');\n        }\n\n        if (!btn.hasAttribute('disabled')) {\n            btn.setAttribute('disabled', '');\n        }\n    }\n\n    /**\n     * Включает возможность взайимодествия с кнопкой.\n     * \n     * @param {object} btn кнопка, которую нужно включить.\n     */\n    enableButton(btn) {\n        if (btn.classList.contains('btn-disable')) {\n            btn.classList.remove('btn-disable');\n        }\n\n        if (btn.hasAttribute('disabled')) {\n            btn.removeAttribute('disabled');\n        }\n    }\n\n    /**\n     * Изменяет состояние тумблера.\n     * \n     * @param {object} toggle элемент.\n     */\n    switchToggle(toggle) {\n        toggle.classList.toggle('toggle-active');\n\n        let toggleBtn = toggle.getElementsByClassName('js-toggle-btn')[0];\n        if (toggle.classList.contains('toggle-active')) {\n            toggleBtn.dataset.toggleValue = 'true';\n        }\n        else {\n            toggleBtn.dataset.toggleValue = 'false';\n        }\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n\n        // Устанавливает обработчики события на тумблеры\n        let toggles = this.page.body.getElementsByClassName('js-toggle');\n        for (let toggle of toggles) {\n            let toggleBtn = toggle.getElementsByClassName('js-toggle-btn')[0];\n            toggleBtn.onclick = () => this.switchToggle(toggle);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/controls.js?");

/***/ }),

/***/ "./src/js/delegation.js":
/*!******************************!*\
  !*** ./src/js/delegation.js ***!
  \******************************/
/*! exports provided: Delegation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Delegation\", function() { return Delegation; });\nclass Delegation {\n    constructor(page) {\n        this.page = page;\n    }\n\n    /**\n     * Возвращает ближайший target от клика с data-action атрибутом.\n     * \n     * @param {object} event объект события.\n     */\n    getDesiredTarget(event) {\n        let target = event.target,\n            click = target;\n\n        // Поиск элемента с data-атрибутами\n        while (target !== event.currentTarget) {\n\n            // Если target == null, значит был удалён элемент из DOM дерева.\n            if (target !== null) {\n                if (target.hasAttribute('data-action')) {\n                    return target;\n                }\n                target = target.parentNode;\n            }\n            else {\n                break;\n            }\n        }\n    }\n\n    /**\n     * Вызывает метод указанный в data-action атрибуте из текущего класса страницы.\n     * \n     * @param {object} event объект события.\n     */\n    callAction(event) {\n        const target = this.getDesiredTarget(event);\n\n        if (target) {\n\n            const action = target.dataset.action;\n            if (!action)\n                return;\n\n            if (target.hasAttribute('data-run-in-frame')) {\n\n                switch (target.dataset.runInFrame) {\n                    case 'sidebar':\n                        this.page.sidebarCl[action]();\n                        break;\n\n                    case 'dialogWindow':\n                        this.page.dialogWindowCl[action]();\n                        break;\n\n                    case 'photoFrame':\n                        this.page.photoFrameCl[action](target);\n                        break;\n\n                    // Если метод должен быть вызван из класса Page\n                    case 'true':\n                        this.page[action](target);\n                        break;\n                }\n            }\n            else {\n                this.page.currentPageCl[action](target, event);\n            }\n        }\n\n        this.page.closeWindows(event);\n    }\n}\n\n//# sourceURL=webpack:///./src/js/delegation.js?");

/***/ }),

/***/ "./src/js/dialogWindow.js":
/*!********************************!*\
  !*** ./src/js/dialogWindow.js ***!
  \********************************/
/*! exports provided: DialogWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DialogWindow\", function() { return DialogWindow; });\nclass DialogWindow {\n    constructor(page) {\n        this.page = page;\n    }\n\n    /**\n     * Показывает диалоговое окно.\n     * \n     * @param {object} continueFunc функция, которая сработает после нажатия на кнопку \"Выполнить\".\n     * @param {string} text текст, которой необходимо вывести.\n     * @param {object} continueFuncParams параметры, необходимые для выполняющей функции.\n     */\n    show(continueFunc, text, continueFuncParams) {\n        if (!this.page.body.classList.contains('dialog-window-active')) {\n            this.page.body.classList.add('dialog-window-active');\n        }\n\n        this.page.dialogWindow.getElementsByClassName('js-dialog-window-text')[0].innerText = text;\n\n        let executeBtn = this.page.dialogWindow.getElementsByClassName('js-dialog-window-execute-btn')[0];\n        executeBtn.onclick = () => continueFunc(continueFuncParams);\n\n        this.close();\n    }\n\n    /**\n     * Закрывает диалоговое окно.\n     */\n    close() {\n        if (this.page.body.classList.contains('dialog-window-active')) {\n            this.page.body.classList.remove('dialog-window-active');\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/dialogWindow.js?");

/***/ }),

/***/ "./src/js/fields.js":
/*!**************************!*\
  !*** ./src/js/fields.js ***!
  \**************************/
/*! exports provided: Fields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Fields\", function() { return Fields; });\n/* harmony import */ var _validationErrorMessages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validationErrorMessages */ \"./src/js/validationErrorMessages.js\");\n\n\nclass Fields {\n    constructor(page) {\n        this.page = page;\n\n        this.validationErrorMessagesCl = new _validationErrorMessages__WEBPACK_IMPORTED_MODULE_0__[\"ValidationErrorMessages\"]();\n    }\n\n    /**\n     * Проверяет количество введенных символов в поле и предпринимает соотвествующие меры при нарушении ограничений.\n     * \n     * @param {*} event событие.\n     * @param {*} inpWrapper обёрточный блок родитель у поля для ввода и блока количества введенных символов.\n     */\n    checkValueLengthAndTakeAction(event, inpWrapper) {\n        let maxLimit = 200, minLimit = 0;\n\n        if (inpWrapper.dataset.charactersLimit !== 'true')\n            return;\n\n        let inp = event.target;\n\n        if (inp.dataset.charactersMaxLimitValue !== undefined) {\n            maxLimit = Number(inp.dataset.charactersMaxLimitValue);\n        }\n\n        if (inp.dataset.charactersMinLimitValue !== undefined) {\n            minLimit = Number(inp.dataset.charactersMinLimitValue);\n        }\n\n        if (!this.checkCharactersLimit(inp.value, maxLimit, minLimit)) {\n            this.overwriteValue(inp, maxLimit);\n        }\n\n        this.changeCharactersLimitValue(inpWrapper, inp, maxLimit);\n    }\n\n    /**\n     * Перезаписывает введенное в поле значение в пределах лимита.\n     * \n     * @param {*} inp поле для ввода.\n     * @param {number} maxLimit максимально допустимое количество символов.\n     */\n    overwriteValue(inp, maxLimit) {\n        let newValue = '',\n            charNum = 1;\n\n        for (let char of inp.value) {\n\n            if (newValue == undefined || newValue == '') {\n                newValue = char\n            }\n            else {\n                newValue += char;\n            }\n\n            if (charNum >= maxLimit) {\n                break;\n            }\n\n            charNum++;\n        }\n\n        inp.value = newValue;\n    }\n\n    /**\n     * Меняет значение количества введеных символов в соответсвующем блоке.\n     * \n     * @param {*} inpWrapper обёрточный блок родитель у поля для ввода и блока количества введенных символов.\n     * @param {*} inp поле для ввода.\n     * @param {number} maxLimit максимально допустимое количество символов из которого вычитается количество введенных.\n     * \n     */\n    changeCharactersLimitValue(inpWrapper, inp, maxLimit) {\n        let valueTag = inpWrapper.getElementsByClassName('js-inp-limit-value')[0];\n\n        if (valueTag !== undefined) {\n            valueTag.innerText = maxLimit - inp.value.length;\n        }\n    }\n\n    /**\n     * Проверяет количество введенных символов с поставленным ограничением.\n     * \n     * @param {string} value введенное значение.\n     * @param {number} maxLimit максимально допустимое количество символов.\n     * @param {number} minLimit  минимально допустимое количество символов. По умолчанию = 0.\n     */\n    checkCharactersLimit(value, maxLimit = 200, minLimit = 0) {\n        if (value.length <= minLimit) {\n            return false;\n        }\n\n        if (value.length >= maxLimit) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Проверяет введенные значения и приводит их к соотвествующему виду в поле для ввода даты.\n     * \n     * @param {object} event объект события.\n     */\n    checkValueForDateInput(event) {\n        let inp = event.target,\n            value = inp.value,\n            newValue = '',\n            charNum = 0;\n\n        for (let char of value) {\n\n            // Проверка на пробел\n            if (char === ' ') {\n                break;\n            }\n\n            // Проверка на числовой тип и точку\n            if (isNaN(char) && char !== '.') {\n                break;\n            }\n\n            // Если кол-во символов превышает или равно 10\n            if (charNum >= 10) {\n                break;\n            }\n\n            // Ставится точка после 2 числовых символов (день)\n            if (charNum === 2) {\n                if (char !== '.') {\n                    newValue += '.';\n                }\n            }\n\n            // Ставится точка после 5 символов (месяц)\n            if (charNum === 5) {\n                if (char !== '.') {\n                    newValue += '.';\n                }\n            }\n\n            newValue += char;\n\n            charNum++;\n        }\n\n        inp.value = newValue;\n    }\n\n    showError(inpWrapper, errorText) {\n        inpWrapper.getElementsByClassName('js-inp-error-txt')[0].innerText = errorText;\n\n        if (!inpWrapper.classList.contains('inp-error')) {\n            inpWrapper.classList.add('inp-error');\n        }\n    }\n\n    hideError(inpWrapper) {\n        inpWrapper.getElementsByClassName('js-inp-error-txt')[0].innerText = '';\n\n        if (inpWrapper.classList.contains('inp-error')) {\n            inpWrapper.classList.remove('inp-error');\n        }\n    }\n\n    // Проверка на числовой тип\n    checkOnNum(value) {\n        return isNaN(value);\n    }\n\n    // Email\n    checkOnEmail(value) {\n        const regexp = /^[-\\w.]+@([A-z0-9][-A-z0-9]+\\.)+[A-z]{2,4}$/;\n        return regexp.test(value);\n    }\n\n    // Пароль (Строчные и прописные латинские буквы, цифры, спецсимволы. Минимум 8 символов)\n    checkOnPassword(value) {\n        const regexp = /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/;\n        return regexp.test(value);\n    }\n\n    // Имя пользователя (с ограничением 4-20 символов, которыми могут быть буквы и цифры, первый символ обязательно буква)\n    checkOnUsername(value) {\n        const regexp = /^[a-z0-9_-]{5,20}$/;\n        return regexp.test(value);\n    }\n\n    // Набор из букв (латиница + кириллица)\n    checkOnLetters(value) {\n        const regexp = /^[а-яА-ЯёЁa-zA-Z]+$/;\n        return regexp.test(value);\n    }\n\n    // Набор из букв и цифр (латиница + кириллица)\n    checkOnLettersAndNums(inp) {\n        const regexp = /^[а-яА-ЯёЁa-zA-Z0-9]+$/;\n        return regexp.test(value);\n    }\n\n    /**\n     * Проверка поля на пустоту.\n     * \n     * @param {object} event объект события.\n     */\n    checkOnEmpty(value) {\n        if (value.length <= 0) {\n            return false;\n        }\n        else {\n            for (let char of value) {\n                if (char !== ' ') {\n                    return true;\n                }\n            }\n        }\n    }\n\n    highlightErrorInput(inp, text) {\n        if (!inp.classList.contains('inp-error')) {\n            inp.classList.add('inp-error');\n        }\n\n        // ToDo: вывести текст\n    }\n\n\n    removeErrorSelection(inp) {\n        if (inp.classList.contains('inp-error')) {\n            inp.classList.remove('inp-error');\n        }\n\n        // ToDo: удалить текст\n    }\n\n    /**\n     * Вслытие с target до оберточного блока поля для ввода.\n     * \n     * @param {object} target элемент с которого производится всплытие.\n     */\n    surfacingToInpWrapper(target) {\n        while (target !== document) {\n            if (target !== null) {\n                if (target.classList.contains('inp_wr')) {\n                    return target;\n                }\n                target = target.parentNode;\n            }\n            else {\n                return undefined;\n            }\n        }\n    }\n\n    /**\n     * Автоматический увеличивает высоту textarea по мере его заполнения.\n     * \n     * @param {object} event объект события.\n     * @param {number} paddingTop верхний padding поля.\n     * @param {number} paddingBottom нижний padding поля.\n     * @param {string} defaultHeight размер поля по умолчанию (прим. 36px).\n     */\n    autoHeightChange(event, paddingTop, paddingBottom, defaultHeight = 'inherit') {\n        let inp = event.target,\n            computed = window.getComputedStyle(inp);\n\n        inp.style.height = defaultHeight;\n\n        let height = parseInt(computed.getPropertyValue('border-top-width'), 10)\n            + parseInt(computed.getPropertyValue('padding-top'), 10)\n            + inp.scrollHeight - (paddingTop + paddingBottom)\n            + parseInt(computed.getPropertyValue('padding-bottom'), 10)\n            + parseInt(computed.getPropertyValue('border-bottom-width'), 10);\n\n        if (inp.value === '') {\n            inp.removeAttribute('style');\n        }\n        else {\n            inp.style.height = height + 'px';\n        }\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n        let inpWrappers = this.page.body.getElementsByClassName('js-inp-wrapper');\n        for (let inpWrapper of inpWrappers) {\n            if (inpWrapper.dataset.autoHangHandler === 'true') {\n                inpWrapper.getElementsByClassName('js-inp')[0].oninput = (event) => this.checkValueLengthAndTakeAction(event, inpWrapper);\n                // inpWrapper.getElementsByClassName('js-inp')[0].oninput = (event) => this.checkValue(event, inpWrapper);\n            }\n        }\n\n        let dateInps = this.page.body.getElementsByClassName('js-date-inp');\n        for (let dateInp of dateInps) {\n            dateInp.oninput = (event) => this.checkValueForDateInput(event);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/fields.js?");

/***/ }),

/***/ "./src/js/fileLoad.js":
/*!****************************!*\
  !*** ./src/js/fileLoad.js ***!
  \****************************/
/*! exports provided: FileLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileLoad\", function() { return FileLoad; });\n/**\n * Класс отвечающий за зазгрузку файлов.\n */\nclass FileLoad {\n    constructor() {\n        this.bufferImagePath;\n    }\n\n    /**\n     * Считывает и возвращает загруженный файл.\n     * \n     * @param {*} event события.\n     */\n    readFile(event) {\n        // https://web.dev/read-files/\n        return event.target.files;\n    }\n\n    /**\n     * Загружает и выводит изображание.\n     * \n     * @param {*} file загруженный файл.\n     * @param {*} loadFunc функция, которая вызываеся после загрузки изображения.\n     * @param {*} loadFuncParams параметры вызываемой после загрузки функции.\n     */\n    readImage(file, loadFunc, loadFuncParams) {\n        if (file.type && file.type.indexOf('image') === -1) {\n            // ToDo: реализовать вывод ошибки.\n            console.log('File is not an image.', file.type, file);\n            return;\n        }\n\n        let reader = new FileReader();\n\n        reader.onload = (event) => {\n            loadFunc(event.target.result, loadFuncParams);\n        }\n        reader.readAsDataURL(file);\n    }\n\n    /**\n     * Конвертирует байты в килобайты.\n     * \n     * @param {number} bytes значение для конвертации.\n     */\n    convertBytesToKilobytes(bytes) {\n        return Number(bytes) / 1000;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/fileLoad.js?");

/***/ }),

/***/ "./src/js/message.js":
/*!***************************!*\
  !*** ./src/js/message.js ***!
  \***************************/
/*! exports provided: Message */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Message\", function() { return Message; });\nclass Message {\n    constructor(page) {\n        this.page = page;\n    }\n\n    /**\n     * Показывает сообщение.\n     * \n     * @param {string} text текст сообщения.\n     */\n    show(text) {\n        let messText = this.page.message.getElementsByClassName('js-message-text')[0];\n\n        messText.innerText = text;\n\n        if (!this.page.body.classList.contains('message-active')) {\n            this.page.body.classList.add('message-active');\n        }\n\n        setTimeout(this.hide, 4000, this.page.body);\n    }\n\n    /**\n     * Скрывает сообщение.\n     * \n     * @param {object} body тело страницы.\n     */\n    hide(body) {\n        if (body.classList.contains('message-active')) {\n            body.classList.remove('message-active');\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/message.js?");

/***/ }),

/***/ "./src/js/moreMenu.js":
/*!****************************!*\
  !*** ./src/js/moreMenu.js ***!
  \****************************/
/*! exports provided: MoreMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MoreMenu\", function() { return MoreMenu; });\nclass MoreMenu {\n    constructor() {\n        this.items = document.getElementsByClassName('js-more-menu');\n    }\n\n    openOrClose(wrapper) {\n        wrapper.classList.toggle('active');\n    }\n\n    setHandlers() {\n        for (let item of this.items) {\n            item.getElementsByClassName('js-more-menu-btn')[0].onclick = () => this.openOrClose(item);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/moreMenu.js?");

/***/ }),

/***/ "./src/js/page.js":
/*!************************!*\
  !*** ./src/js/page.js ***!
  \************************/
/*! exports provided: Page */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Page\", function() { return Page; });\n/* harmony import */ var _sidebar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sidebar */ \"./src/js/sidebar.js\");\n/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select */ \"./src/js/select.js\");\n/* harmony import */ var _photoFrame__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./photoFrame */ \"./src/js/photoFrame.js\");\n/* harmony import */ var _moreMenu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./moreMenu */ \"./src/js/moreMenu.js\");\n/* harmony import */ var _message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./message */ \"./src/js/message.js\");\n/* harmony import */ var _dialogWindow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dialogWindow */ \"./src/js/dialogWindow.js\");\n/* harmony import */ var _preloader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./preloader */ \"./src/js/preloader.js\");\n/* harmony import */ var _delegation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./delegation */ \"./src/js/delegation.js\");\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./controls */ \"./src/js/controls.js\");\n/* harmony import */ var _fields__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fields */ \"./src/js/fields.js\");\n/* harmony import */ var _profile_profile__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./profile/profile */ \"./src/js/profile/profile.js\");\n/* harmony import */ var _test_reate_testCreate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./test-сreate/testCreate */ \"./src/js/test-сreate/testCreate.js\");\n/* harmony import */ var _test_test__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./test/test */ \"./src/js/test/test.js\");\n/* harmony import */ var _test_result_for_creator_testResultForCreator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./test-result-for-creator/testResultForCreator */ \"./src/js/test-result-for-creator/testResultForCreator.js\");\n/* harmony import */ var _test_result_for_user_testResultForUser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./test-result-for-user/testResultForUser */ \"./src/js/test-result-for-user/testResultForUser.js\");\n/* harmony import */ var _account_settings_accountSettings__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./account-settings/accountSettings */ \"./src/js/account-settings/accountSettings.js\");\n/* harmony import */ var _service_settings_serviceSettings__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./service-settings/serviceSettings */ \"./src/js/service-settings/serviceSettings.js\");\n/* harmony import */ var _search_search__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./search/search */ \"./src/js/search/search.js\");\n/* harmony import */ var _pageTitles__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pageTitles */ \"./src/js/pageTitles.js\");\n// Основные области\n\n\n\n\n\n\n\n\n// Элементы управления (кнопки, поля для ввода)\n\n\n\n\n// Страницы\n\n\n\n\n\n\n\n\n\n// Для страниц\n\n\n/**\n * Класс для работы со страницами.\n */\nclass Page {\n    constructor() {\n\n        // Области\n        this.body = document.getElementById('body');\n        this.backgroundImg = this.body.getElementsByClassName('js-background-img')[0];\n        this.content = document.getElementById('bodyContent');\n        this.menu = this.body.getElementsByClassName('js-menu')[0];\n        this.menuPageTitle = this.menu.getElementsByClassName('js-menu-page-title')[0];\n        this.photoFrame = this.body.getElementsByClassName('js-photo-frame')[0];\n        this.message = this.body.getElementsByClassName('js-message')[0];\n        this.dialogWindow = this.body.getElementsByClassName('js-dialog-window')[0];\n        this.preloader = this.body.getElementsByClassName('js-preloader')[0];\n\n        // Для работы с областями\n        this.selectCl = new _select__WEBPACK_IMPORTED_MODULE_1__[\"Select\"]();\n        this.messageCl = new _message__WEBPACK_IMPORTED_MODULE_4__[\"Message\"](this);\n        this.dialogWindowCl = new _dialogWindow__WEBPACK_IMPORTED_MODULE_5__[\"DialogWindow\"](this);\n        this.photoFrameCl = new _photoFrame__WEBPACK_IMPORTED_MODULE_2__[\"PhotoFrame\"](this);\n        this.preloaderCl = new _preloader__WEBPACK_IMPORTED_MODULE_6__[\"Preloader\"](this);\n        this.sidebarCl = new _sidebar__WEBPACK_IMPORTED_MODULE_0__[\"Sidebar\"]();\n\n        // Для работы с элементами управления\n        this.delegationCl = new _delegation__WEBPACK_IMPORTED_MODULE_7__[\"Delegation\"](this);\n        this.controlsCl = new _controls__WEBPACK_IMPORTED_MODULE_8__[\"Controls\"](this);\n        this.fieldCl = new _fields__WEBPACK_IMPORTED_MODULE_9__[\"Fields\"](this);\n\n        // Номер текущей страницы\n        this.num = this.body.dataset.pageNum;\n        this.currentPageCl;\n    }\n\n    /**\n     * Закрывает все активные всплывающие окна, селекты и подобные элементы по клику на body.\n     * \n     * @param {object} event объект события.\n     */\n    closeWindows(event) {\n        const items = this.body.getElementsByClassName('active'),\n            itemsCount = items.length;\n\n        for (let i = 0; itemsCount > i; i++) {\n            if (!items[0].contains(event.target)) {\n                items[0].classList.remove('active');\n            }\n        }\n    }\n\n    /**\n     * Изменяет заголовок страницы в меню.\n     * \n     * @param {string} pageNum номер страницы. \n     */\n    changePageTitle(pageNum = this.num) {\n        this.menuPageTitle.innerText = new _pageTitles__WEBPACK_IMPORTED_MODULE_18__[\"PageTitles\"]().getTitle(pageNum);\n    }\n\n    /**\n     * Отвечает за переход на страницу.\n     * \n     * @param {object} linkBtn кнопка-ссылка на которой произошел click.\n     */\n    goToPage(linkBtn) {\n        let link = linkBtn.dataset.link,\n            linkPageNum = linkBtn.dataset.linkPageNum;\n\n        this.preloaderCl.show('Загрузка страницы...');\n        this.runPageContent(linkPageNum);\n        this.preloaderCl.close();\n    }\n\n    /**\n     * Загружает содержимое страницы.\n     * \n     * @param {string} pageNum номер страницы.\n     */\n    runPageContent(pageNum = this.num) {\n        let contentBd = this.content.getElementsByClassName('js-content-bd')[0];\n\n        // Изменяет номер страницы\n        this.body.dataset.pageNum = pageNum;\n        this.num = this.body.dataset.pageNum;\n\n        // Определяет необходимый метод для активации по номеру страницу \n        switch (this.num) {\n\n            case '0':\n                break;\n\n            // Profile page\n            case '1':\n                this.currentPageCl = new _profile_profile__WEBPACK_IMPORTED_MODULE_10__[\"Profile\"](this);\n                this.currentPageCl.runPage(contentBd);\n                break;\n\n            // Test create page\n            case '2':\n                this.currentPageCl = new _test_reate_testCreate__WEBPACK_IMPORTED_MODULE_11__[\"TestCreate\"](this);\n                this.currentPageCl.runPage(contentBd);\n                break;\n\n            // Test page\n            case '3':\n                new _test_test__WEBPACK_IMPORTED_MODULE_12__[\"Test\"](this).runPage(contentBd);\n                break;\n\n            // Test result for creator page\n            case '4':\n                new _test_result_for_creator_testResultForCreator__WEBPACK_IMPORTED_MODULE_13__[\"TestResultForCreator\"](this).runPage(contentBd);\n                break;\n\n            // Test result for user\n            case '5':\n                new _test_result_for_user_testResultForUser__WEBPACK_IMPORTED_MODULE_14__[\"TestResultForUser\"](this).runPage(contentBd);\n                break;\n\n            // Account settings page\n            case '6':\n                this.currentPageCl = new _account_settings_accountSettings__WEBPACK_IMPORTED_MODULE_15__[\"AccountSettings\"](this);\n                this.currentPageCl.runPage(contentBd);\n                break;\n\n            // Service settings page\n            case '7':\n                this.currentPageCl = new _service_settings_serviceSettings__WEBPACK_IMPORTED_MODULE_16__[\"ServiceSettings\"](this);\n                this.currentPageCl.runPage(contentBd);\n                break;\n\n            // Search page\n            case '8':\n                this.currentPageCl = new _search_search__WEBPACK_IMPORTED_MODULE_17__[\"Search\"](this);\n                this.currentPageCl.runPage(contentBd);\n                break;\n        }\n\n        this.changePageTitle();\n        this.setHandlers();\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n        this.selectCl.setHandlers();\n        new _moreMenu__WEBPACK_IMPORTED_MODULE_3__[\"MoreMenu\"]().setHandlers();\n        this.controlsCl.setHandlers();\n        this.fieldCl.setHandlers();\n\n        this.body.onclick = (event) => this.delegationCl.callAction(event);\n    }\n}\n\n//# sourceURL=webpack:///./src/js/page.js?");

/***/ }),

/***/ "./src/js/pageTitles.js":
/*!******************************!*\
  !*** ./src/js/pageTitles.js ***!
  \******************************/
/*! exports provided: PageTitles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageTitles\", function() { return PageTitles; });\nclass PageTitles {\n\n    /**\n     * Возвращает заголовок страницы.\n     * \n     * @param {string} pageNum номер страницы.\n     */\n    getTitle(pageNum) {\n\n        switch (pageNum) {\n            case '1':\n                return 'Профиль';\n\n            case '2':\n                return 'Тесты';\n\n            case '3':\n                return 'Создание теста';\n\n            case '4':\n                return 'Тест';\n\n            case '5':\n                return 'Результат теста';\n\n            case '6':\n                return 'Настройки аккаунта';\n\n            case '7':\n                return 'Настройки сервиса';\n\n            case '8':\n                return 'Поиск';\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/pageTitles.js?");

/***/ }),

/***/ "./src/js/photoFrame.js":
/*!******************************!*\
  !*** ./src/js/photoFrame.js ***!
  \******************************/
/*! exports provided: PhotoFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PhotoFrame\", function() { return PhotoFrame; });\nclass PhotoFrame {\n    constructor(page) {\n        this.page = page;\n\n        this.wrapper = page.body.getElementsByClassName('js-photo-frame')[0];\n        this.img = this.wrapper.getElementsByClassName('js-photo-frame-img')[0];\n    }\n\n    /**\n     * Показывает выбранное изображение.\n     * \n     * @param {object} img изображение, на котором произошло нажатие.\n     */\n    show(img) {\n        const imgPath = img.src;\n\n        if (!this.page.body.classList.contains('photo-frame-active')) {\n            this.page.body.classList.add('photo-frame-active');\n        }\n\n        this.img.src = imgPath;\n    }\n\n    /**\n     * Закрывает показанное изображение.\n     */\n    close() {\n        if (this.page.body.classList.contains('photo-frame-active')) {\n            this.page.body.classList.remove('photo-frame-active');\n        }\n\n        this.img.src = '';\n    }\n}\n\n//# sourceURL=webpack:///./src/js/photoFrame.js?");

/***/ }),

/***/ "./src/js/preloader.js":
/*!*****************************!*\
  !*** ./src/js/preloader.js ***!
  \*****************************/
/*! exports provided: Preloader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Preloader\", function() { return Preloader; });\nclass Preloader {\n    constructor(page) {\n        this.page = page;\n    }\n\n    /**\n     * Показывает preloader.\n     * \n     * @param {string} text текст.\n     */\n    show(text = '') {\n        if (!this.page.body.classList.contains('preloader-active')) {\n            this.page.body.classList.add('preloader-active');\n        }\n\n        this.changeText(text);\n    }\n\n    /**\n     * Меняет текст у preloader'а.\n     * \n     * @param {string} text текст.\n     */\n    changeText(text) {\n        this.page.preloader.getElementsByClassName('js-preloader-text')[0].innerText = text;\n    }\n\n    /**\n     * Закрывает preloader.\n     */\n    close() {\n        if (this.page.body.classList.contains('preloader-active')) {\n            this.page.body.classList.remove('preloader-active');\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/preloader.js?");

/***/ }),

/***/ "./src/js/profile/profile.js":
/*!***********************************!*\
  !*** ./src/js/profile/profile.js ***!
  \***********************************/
/*! exports provided: Profile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Profile\", function() { return Profile; });\n/* harmony import */ var _profileContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./profileContent */ \"./src/js/profile/profileContent.js\");\n\n\nclass Profile {\n    constructor(page) {\n        this.page = page;\n\n        this.contentCl = new _profileContent__WEBPACK_IMPORTED_MODULE_0__[\"ProfileContent\"]();\n    }\n\n    /**\n     * Отвечает за загрузку страницы.\n     * \n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n     */\n    runPage(contentBd) {\n        contentBd.innerHTML = this.contentCl.getPage();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/profile/profile.js?");

/***/ }),

/***/ "./src/js/profile/profileContent.js":
/*!******************************************!*\
  !*** ./src/js/profile/profileContent.js ***!
  \******************************************/
/*! exports provided: ProfileContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProfileContent\", function() { return ProfileContent; });\nclass ProfileContent {\n    getPage() {\n        return `<div class=\"cnt_bd-profile\">\n        <div class=\"profile_hd\">\n          <img class=\"profile_hd--img\" src=\"./img/pp.jpg\">\n          <div class=\"profile_hd-info\">\n            <div class=\"profile_hd-info--names\">\n              <span>Иванов Иван Иванович</span>\n            </div>\n            <div class=\"profile_hd-info--email\">\n              <span><a class=\"link\" href=\"mailto:ir.yasaviev@yandex.ru\">ir.yasaviev@yandex.ru</a></span>\n            </div>\n            <div class=\"profile_hd-info--nickname\">\n              <span>@ir_yasaviev</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"profile_bd\">\n          <div class=\"profile-tests cnt-block\">\n            <div class=\"cnt-block_hd\">\n              <div class=\"profile-tests-title cnt-block_hd-title\">\n                <span>Тесты</span>\n                <span class=\"profile-tests-title--counter\">0</span>\n              </div>\n              <div class=\"profile-tests-menu\">\n                <input class=\"inp profile-tests-menu--search\" type=\"text\" placeholder=\"Поиск\">\n                <button class=\"btn profile-tests-menu-alphabet-sort\">\n                  <span class=\"btn--icon i-sort-alphabet\"></span>\n                  <span class=\"profile-tests-menu-alphabet-sort--txt\">По алфавиту</span>\n                </button>\n                <button class=\"btn profile-tests-menu-raiting-sort\">\n                  <span class=\"btn--icon i-star\"></span>\n                  <span class=\"profile-tests-menu-raiting-sort--txt\">По рейтингу</span>\n                </button>\n                <div class=\"profile-tests-menu-date date-inp_wr\">\n                  <span class=\"date-inp--icon inp--icon i-calendar\"></span>\n                  <input class=\"profile-tests-menu-date--inp inp date--inp js-date-inp\" type=\"text\"\n                    placeholder=\"03.07.2020\" title=\"Сортировка по дате создания теста\">\n                </div>\n              </div>\n            </div>\n            <div class=\"profile-tests_bd cnt-block_bd\">\n              <span class=\"cnt-block_bd--mess\">Пользователь не создал ещё ни одного теста.</span>\n            </div>\n          </div>\n        </div>\n      </div>`;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/profile/profileContent.js?");

/***/ }),

/***/ "./src/js/question/deleagtionQuestion.js":
/*!***********************************************!*\
  !*** ./src/js/question/deleagtionQuestion.js ***!
  \***********************************************/
/*! exports provided: DelegationQuestion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DelegationQuestion\", function() { return DelegationQuestion; });\nclass DelegationQuestion {\n    constructor(questionCl, answerCl) {\n        this.questionCl = questionCl;\n        this.answerCl = answerCl;\n    }\n\n    /**\n     * Возвращает ближайший target от клика с data-question-action атрибутом.\n     * \n     * @param {object} event объект события.\n     */\n    getDesiredTarget(event) {\n        let target = event.target;\n\n        // Поиск элемента с data-атрибутами\n        while (target !== event.currentTarget) {\n\n            // Если target == null, значит был удалён элемент из DOM дерева.\n            if (target !== null) {\n                if (target.hasAttribute('data-question-action') || target.hasAttribute('data-answer-action')) {\n                    return target;\n                }\n                target = target.parentNode;\n            }\n            else {\n                break;\n            }\n        }\n    }\n\n    /**\n     * Вызывает метод указанный в data-question-action атрибуте из класса question.\n     * \n     * @param {object} event объект события.\n     */\n    callAction(event) {\n        const target = this.getDesiredTarget(event);\n\n        if (target) {\n            const questionAction = target.dataset.questionAction,\n                answerAction = target.dataset.answerAction;\n\n            if (questionAction) {\n                this.questionCl[questionAction](target, event);\n                return;\n            }\n\n            if (answerAction) {\n                this.answerCl[answerAction](target, event);\n                return;\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/question/deleagtionQuestion.js?");

/***/ }),

/***/ "./src/js/question/question.js":
/*!*************************************!*\
  !*** ./src/js/question/question.js ***!
  \*************************************/
/*! exports provided: Question */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Question\", function() { return Question; });\n/* harmony import */ var _fileLoad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fileLoad */ \"./src/js/fileLoad.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../timer */ \"./src/js/timer.js\");\n/* harmony import */ var _answer_answer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../answer/answer */ \"./src/js/answer/answer.js\");\n/* harmony import */ var _questionContent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./questionContent */ \"./src/js/question/questionContent.js\");\n/* harmony import */ var _deleagtionQuestion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./deleagtionQuestion */ \"./src/js/question/deleagtionQuestion.js\");\n\n\n\n\n\n\n\n/**\n * Class with methods for work with question.\n * Класс с методами для работы с вопросом.\n */\nclass Question {\n    constructor(page) {\n        this.answerCl = new _answer_answer__WEBPACK_IMPORTED_MODULE_2__[\"Answer\"](this);\n        this.contentCl = new _questionContent__WEBPACK_IMPORTED_MODULE_3__[\"QuestionContent\"]();\n        this.delegationQuestionCl = new _deleagtionQuestion__WEBPACK_IMPORTED_MODULE_4__[\"DelegationQuestion\"](this, this.answerCl);\n\n        this.page = page;\n        this.questions = this.page.content.getElementsByClassName('js-test-question');\n    }\n\n    /**\n     * Отвечает за загрузку изображения вопроса.\n     * \n     * @param {object} event событие.\n     */\n    loadImage(event) {\n        const question = this.surfacingToQuestion(event.target);\n\n        new _fileLoad__WEBPACK_IMPORTED_MODULE_0__[\"FileLoad\"]().readImage(event.target.files[0], this.showImage, {\n            showFunc: this.showImage,\n            questionTag: question,\n            photoFrameCl: this.page.photoFrameCl\n        });\n    }\n\n    /**\n     * Выводит изображение вопроса.\n     * \n     * @param {string} path - Blob путь загруженного изображения.\n     * @param {object} params - Необходимые параметры.\n     */\n    showImage(path, params) {\n        const question = params.questionTag;\n\n        if (question === undefined) {\n            this.messageCl.show('Что-то пошло не так. Поажлуйста, перезагрузите страницу.');\n            return;\n        }\n\n        const imgTag = question.getElementsByClassName('js-test-question-img')[0];\n\n        imgTag.setAttribute('src', path);\n\n        if (!question.classList.contains('test_create_bd-question-image-active')) {\n            question.classList.add('test_create_bd-question-image-active');\n        }\n    }\n\n    /**\n     * Удаляет прикрепленное изображение вопроса.\n     * \n     * @param {object} target элемент, на котором сработалоа событие.\n     */\n    deleteImage(target) {\n        const question = this.surfacingToQuestion(target),\n            img = question.getElementsByClassName('js-test-question-img')[0];\n\n        img.src = '';\n\n        if (question.classList.contains('test_create_bd-question-image-active')) {\n            question.classList.remove('test_create_bd-question-image-active');\n        }\n    }\n\n    /**\n     * Добавляет новый вопрос.\n     */\n    addQuestion() {\n        const questionAddMenu = this.page.content.getElementsByClassName('js-test-create-question-add')[0],\n            questionAddMenuMore = questionAddMenu.getElementsByClassName('js-test-question-add-btn-params')[0],\n            questionsQuantity = questionAddMenuMore.getElementsByClassName('js-test-question-add-btn-params-questions')[0].value,\n            answersQuantity = questionAddMenuMore.getElementsByClassName('js-test-question-add-btn-params-answers')[0].value,\n            answerType = questionAddMenuMore.getElementsByClassName('js-test-question-add-btn-params-type')[0].value;\n\n        let newQuestions = [];\n        for (let newQuestionNum = 1; Number(questionsQuantity) >= newQuestionNum; newQuestionNum++) {\n\n            // Если количество имеющихся и новых вопросов превышает 30, то добавлние прекращается\n            if (30 <= this.questions.length + newQuestions.length) {\n                break;\n            }\n\n            let newQuestion = this.getQuestionItem(answerType, this.questions.length + newQuestionNum, answersQuantity);\n            newQuestions[newQuestions.length] = newQuestion;\n        }\n\n        // Вставка новых вопросов в body\n        if (newQuestions.length > 0) {\n            let questionsDom;\n\n            for (let question of newQuestions) {\n                if (questionsDom === undefined) {\n                    questionsDom = question;\n                }\n                else {\n                    questionsDom = questionsDom + question;\n                }\n            }\n\n            this.page.content.getElementsByClassName('js-test-questions')[0].insertAdjacentHTML('beforeend', questionsDom);\n\n            // Вешает обработчики событий\n            this.setHandlers();\n\n            // Вешает все необходимые обработчики на select\n            this.page.selectCl.setHandlers();\n        }\n    }\n\n    /**\n     * Возвращает сформированный DOMString вопроса.\n     * \n     * @param {*} answerType тип ответа.\n     * @param {*} questionNum номер формируемого вопроса.\n     * @param {*} answersQuantity количество вариантов ответа в добавляемом вопросе.\n     * @param {*} answersQuantityMaxLimit ограничение на максимальное количество вариантов ответа в добавляемом вопросе.\n     */\n    getQuestionItem(answerType, questionNum, answersQuantity, answersQuantityMaxLimit = 6) {\n        let answers = this.getAnswersForAddingQuestion(answersQuantity, answerType, questionNum),\n            answersString,\n            answerAddBtn;\n\n        for (let answer of answers) {\n            if (answersString === undefined) {\n                answersString = answer;\n            }\n            else {\n                answersString += answer;\n            }\n        }\n\n        if (answers.length >= answersQuantityMaxLimit ||\n            answerType === '3' || answerType === '4') {\n            answerAddBtn = this.contentCl.getAnswerAddBtn(true);\n        }\n        else {\n            answerAddBtn = this.contentCl.getAnswerAddBtn(false);\n        }\n\n        return this.contentCl.getQuestion(questionNum, answerType, answerAddBtn, answersString, this.contentCl.getAnswerTypeSelect(answerType));\n    }\n\n    /**\n     * Возвращает массив с DOMString вариантами ответов у нового вопроса.\n     * \n     * @param {number} answersQuantity количество вариантов ответа в новом вопросе.\n     * @param {string} answerType тип вариантов ответа в добавляемом вопросе.\n     * @param {string} questionNum порядковый номер добавляемого вопроса.\n     */\n    getAnswersForAddingQuestion(answersQuantity = 1, answerType = '1', questionNum) {\n        let answers = [];\n\n        if (answerType === '1' || answerType === '2') {\n            for (let answerNum = 0; answerNum < Number(answersQuantity); answerNum++) {\n                if (answerNum >= 6) {\n                    break;\n                }\n                answers[answers.length] = this.answerCl.getAnswerItem(answerType, questionNum, answerNum);\n            }\n        }\n        else {\n            if (answerType === '3' || answerType === '4') {\n                answers[0] = this.answerCl.getAnswerItem(answerType, questionNum);\n            }\n        }\n\n        return answers;\n    }\n\n    /**\n     * Показывает окно с дополнительными параметрами при добавлении вопроса.\n     */\n    showOrCloseQuestionAddParams() {\n        const addBtnWrapper = this.page.content.getElementsByClassName('js-test-question-add-btn-wrapper')[0];\n        addBtnWrapper.classList.toggle('test_create_bd-question-add-btn--more-active');\n    }\n\n    /**\n     * Удаляет вопрос, заменяя его на сообщение с возможностью восстановления.\n     * \n     * @param {object} question вопрос.\n     */\n    deleteQuestion(target) {\n        let question = this.surfacingToQuestion(target);\n\n        if (!question.classList.contains('test_create_bd-question-deleted')) {\n            question.classList.add('test_create_bd-question-deleted');\n        }\n\n        question.insertAdjacentHTML('beforeEnd', this.contentCl.getQuestionDeleteMessage());\n\n        this.updateQuestionDeleteTime(question, 7);\n    }\n\n    /**\n     * Стирает блок вопроса с DOM и перезаписывает системные атрибуты у оставшихся элементов.\n     * \n     * @param {*} question вопрос.\n     */\n    removeQuestion(question) {\n        question.remove();\n\n        let questionNum = 1;\n        for (let question of this.questions) {\n\n            question.dataset.questionNum = questionNum;\n            question.getElementsByClassName('js-test-create-question-title')[0].placeholder = `Вопрос №${questionNum}`;\n\n            let answerNum = 1;\n            for (let answer of question.getElementsByClassName('js-test-question-answer')) {\n\n                if (question.dataset.answersType === '1' || question.dataset.answersType === '2') {\n                    answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].id = `answer${questionNum}${answerNum}`;\n                    answer.getElementsByClassName('js-test-question-answer-choice-label')[0].setAttribute('for', `answer${questionNum}${answerNum}`);\n\n                    if (question.dataset.answersType === '1') {\n                        answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].name = `answerCheck${questionNum}`;\n                    }\n                    if (question.dataset.answersType === '2') {\n                        answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].name = `answerRadio${questionNum}`;\n                    }\n                }\n\n                answerNum++;\n            }\n\n            questionNum++;\n        }\n    }\n\n    /**\n     * Обновляет значение таймера в блоке удаления вопроса.\n     * Когда результат будет равен 0, вопрос удаляется.\n     * \n     * @param {*} question вопрос.\n     * @param {number} time оставшееся время на восстановление вопроса.\n     */\n    updateQuestionDeleteTime(question, time) {\n        let timer = new _timer__WEBPACK_IMPORTED_MODULE_1__[\"Timer\"](),\n            result = question.getElementsByClassName('js-test-create-question-deleted-message-time')[0];\n\n        if (question.classList.contains('test_create_bd-question-deleted')) {\n            time = timer.countDown(time, 0);\n            result.innerText = time;\n\n            setTimeout(() => this.updateQuestionDeleteTime(question, time), 1000);\n\n            if (time === 0) {\n                this.removeQuestion(question);\n            }\n        }\n    }\n\n    /**\n     * Восстанавливает удалённый вопрос.\n     * \n     * @param {object} target элемент на котором произошло событие.\n     */\n    restoreQuestion(target) {\n        let question = this.surfacingToQuestion(target);\n\n        question.getElementsByClassName('js-test-create-question-deleted-message')[0].remove()\n\n        if (question.classList.contains('test_create_bd-question-deleted')) {\n            question.classList.remove('test_create_bd-question-deleted');\n        }\n    }\n\n    /**\n     * Отвечает за обработку введенного значения в поле.\n     * \n     * @param {object} event событие.\n     */\n    inputToQuestion(event) {\n        this.page.fieldCl.autoHeightChange(event, 10, 10, '36px');\n\n        let inp = event.target,\n            inpWrapper = inp.parentElement;\n\n        this.page.fieldCl.checkValueLengthAndTakeAction(event, inpWrapper);\n    }\n\n    /**\n     * Вслытие с element до вопроса.\n     * \n     * @param {object} element элемент с которого произвоидтся всплытие.\n     */\n    surfacingToQuestion(element) {\n        while (element !== document) {\n            if (element !== null) {\n                if (element.classList.contains('js-test-question')) {\n                    return element;\n                }\n                element = element.parentNode;\n            }\n            else {\n                return undefined;\n            }\n        }\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n        for (let question of this.questions) {\n\n            // Вешает обработчик события на поле для вопроса, для обработки ввода\n            const questionInp = question.getElementsByClassName('js-test-create-question-title')[0];\n            questionInp.oninput = (event) => this.inputToQuestion(event);\n\n            // Вешает обработчик события input на соответствующий тег у селекта\n            let answerTypeSelectValueInp = question.getElementsByClassName('select_hd-value--inp')[0];\n            answerTypeSelectValueInp.oninput = () => this.answerCl.changeAnswerType(question);\n\n            // Вешает обработчик кнопки выбора правильного варианта ответа\n            let answerChooseInp = question.getElementsByClassName('js-test-question-answer-choice-inp')[0];\n            if (answerChooseInp !== undefined) {\n                answerChooseInp.onchange = () => this.answerCl.chooseAnAnswer(question.getElementsByClassName('js-test-question-answer')[0], question);\n            }\n\n            // Вешает обработчик события метода загрзуки изображения вопроса\n            question.getElementsByClassName('js-test-create-question-image-inp')[0].onchange = (event) => this.loadImage(event);\n\n            // Вешает обработчик события click на вопрос для делегирования\n            question.onclick = (event) => this.delegationQuestionCl.callAction(event);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/question/question.js?");

/***/ }),

/***/ "./src/js/question/questionContent.js":
/*!********************************************!*\
  !*** ./src/js/question/questionContent.js ***!
  \********************************************/
/*! exports provided: QuestionContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QuestionContent\", function() { return QuestionContent; });\nclass QuestionContent {\n\n    /**\n     * Возвращает DOMString сформированного вопроса.\n     * \n     * @param {number} questionNum номер вопроса.\n     * @param {string} answerType тип варианта ответа.\n     * @param {string} answerAddBtn кнопка добавления ответа. \n     * @param {string} answersString строка с добавлямыми вместе с вопросом вариантами ответов.\n     * @param {string} answerTypeSelect кнопка для выбора варианта ответа (select) у вопроса.\n     */\n    getQuestion(questionNum, answerType, answerAddBtn, answersString, answerTypeSelect) {\n        return `<div class=\"test_create_bd-question js-test-question\" data-question-num=\"${questionNum}\" data-answers-type=\"${answerType}\">\n        <div class=\"test_create_bd-question_bd js-test-question-body\">\n            <div class=\"test_create_bd-question-col1\">\n                <div class=\"test_create_bd-question-col1-row\">\n                    <button class=\"test_create_bd-question-col1-row--btn btn i-cross js-test-create-question-del-btn\" data-question-action=\"deleteQuestion\"></button>\n                    <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"false\">\n                        <textarea class=\"test_create_bd-question-title--inp inp js-inp js-test-create-question-title\" name=\"question\" type=\"text\" data-characters-max-limit-value=\"250\" placeholder=\"Вопрос №${questionNum}\"></textarea>\n                    </div>\n                </div>\n                <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-image\">\n                    <div class=\"test_create_bd-question-col1-image\">\n                        <button class=\"test_create_bd-question-img--del-btn i-cross btn js-test-question-img-del-btn\" data-question-action=\"deleteImage\"></button>\n                        <img class=\"test_create_bd-question--img js-test-question-img\" data-action=\"show\" data-run-in-frame=\"photoFrame\">\n                    </div>\n                </div>\n                <div class=\"test_create_bd-question-col1-row test_create_bd-question-answers js-test-question-answers\">${answersString}</div>\n                <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-add-answer\">${answerAddBtn}</div>\n            </div>\n            <div class=\"test_create_bd-question-col2\">\n                <label class=\"test_create_bd-question-col2--btn btn i-image\">\n                    <input class=\"test_create_bd-question-col2--inp js-test-create-question-image-inp\" type=\"file\" accept=\"image/*\">\n                </label>\n                ${answerTypeSelect}\n            </div>\n        </div>\n    </div>`;\n    }\n\n    /**\n     * Возвращает DOMString кнопки выбора (select) варианта ответа.\n     * \n     * @param {string} answerType тип варианта ответа.\n     */\n    getAnswerTypeSelect(answerType) {\n        let selectValue;\n\n        switch (answerType) {\n            case '1':\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\n                <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\n                </div>\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\n                break;\n\n            case '2':\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\n                <div class=\"test_create_bd-question--select-option--icon i-radiobox\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Одиночный выбор</div>\n                </div>\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\n                break;\n\n            case '3':\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\n                <div class=\"test_create_bd-question--select-option--icon i-text\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Текстовый ответ</div>\n                </div>\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\n                break;\n\n            case '4':\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\n                <div class=\"test_create_bd-question--select-option--icon i-number\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Числовой ответ</div>\n                </div>\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\n                break;\n        }\n\n        let select =\n            `<div class=\"test_create_bd-question--select select js-select js-test-create-answer-type-select\">\n            <button class=\"test_create_bd-question--select_hd select_hd js-select-head\">\n                ${selectValue}\n                <div class=\"select_hd--icon i-down-arrow\"></div>\n            </button>\n            <div class=\"select_bd\">\n            <button class=\"select_bd-option\" data-select-option=\"1\">\n                <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\n            </button>\n            <button class=\"select_bd-option\" data-select-option=\"2\">\n                <div class=\"test_create_bd-question--select-option--icon i-radiobox\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Одиночный выбор</div>\n            </button>\n            <button class=\"select_bd-option\" data-select-option=\"3\">\n                <div class=\"test_create_bd-question--select-option--icon i-text\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Текстовый ответ</div>\n            </button>\n            <button class=\"select_bd-option\" data-select-option=\"4\">\n                <div class=\"test_create_bd-question--select-option--icon i-number\"></div>\n                <div class=\"test_create_bd-question--select-option--txt\">Числовой ответ</div>\n            </button>\n            </div>\n            </div>`;\n\n        return select;\n    }\n\n    /**\n     * Возвращает DOMString сообщения об удалении вопроса.\n     */\n    getQuestionDeleteMessage() {\n        return `<div class=\"test_create_bd-question-deleted-mess js-test-create-question-deleted-message\">\n        <p>Вопрос будет удалён через <span class=\"test_create_bd-question-deleted-mess--time js-test-create-question-deleted-message-time\">7</span>.</p>\n        <button class=\"test_create_bd-question-deleted-mess--btn btn-icon js-test-create-question-restore-btn\" data-question-action=\"restoreQuestion\">Восстановить</button>\n        </div>`;\n    }\n\n    /**\n     * Возвращает DOMString кнпоки добавления варианта ответа. \n     * \n     * @param {boolean} isDisabled опредеяет является ли кнопки кликабельной. true - отключена, false - включена.\n     */\n    getAnswerAddBtn(isDisabled) {\n        if (isDisabled) {\n            return `<button class=\"test_create_bd-question-answer-add--btn btn btn-2 btn-disable js-test-create-answer-add-btn\" disabled>\n            <span class=\"i-plus\"></span>\n            <span class=\"txt\">Вариант</span>\n            </button>`;\n        }\n        else {\n            return `<button class=\"test_create_bd-question-answer-add--btn btn btn-2 js-test-create-answer-add-btn\" data-answer-action=\"addAnswer\">\n            <span class=\"i-plus\"></span>\n            <span class=\"txt\">Вариант</span>\n            </button>`;\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/question/questionContent.js?");

/***/ }),

/***/ "./src/js/search/search.js":
/*!*********************************!*\
  !*** ./src/js/search/search.js ***!
  \*********************************/
/*! exports provided: Search */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Search\", function() { return Search; });\n/* harmony import */ var _searchContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./searchContent */ \"./src/js/search/searchContent.js\");\n\n\nclass Search {\n    constructor(page) {\n        this.page = page;\n\n        this.contentCl = new _searchContent__WEBPACK_IMPORTED_MODULE_0__[\"SearchContent\"]();\n    }\n\n    /**\n     * Сбрасывает заполненные фильтры.\n     */\n    discardFilter() {\n        let subject = this.page.content.getElementsByClassName('js-search-filter-subject')[0],\n            date = this.page.content.getElementsByClassName('js-search-filter-date')[0];\n\n        subject.getElementsByClassName('js-select-value')[0].innerHTML = '';\n        subject.getElementsByClassName('js-select-value')[0].dataset.selectOptionValue = 0;\n\n        date.value = '';\n    }\n\n    /**\n     * Отвечает за загрузку страницы.\n     * \n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n     */\n    runPage(contentBd) {\n        contentBd.innerHTML = this.contentCl.getPage();\n\n        this.setHandlers();\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n        let discardBtn = this.page.content.getElementsByClassName('js-search-filter-discard')[0];\n        discardBtn.onclick = () => this.discardFilter();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/search/search.js?");

/***/ }),

/***/ "./src/js/search/searchContent.js":
/*!****************************************!*\
  !*** ./src/js/search/searchContent.js ***!
  \****************************************/
/*! exports provided: SearchContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SearchContent\", function() { return SearchContent; });\nclass SearchContent {\n    getPage() {\n        return `<div class=\"cnt_bd-search\">\n        <div class=\"search_hd\">\n          <div class=\"search_hd-inp_wr inp_wr js-inp-wrapper\" data-characters-limit=\"true\"\n            data-auto-hang-handler=\"true\">\n            <input class=\"search_hd--inp inp js-inp\" name=\"search\" data-characters-max-limit-value=\"100\" type=\"text\"\n              placeholder=\"Поиск\">\n            <button class=\"search_hd-inp--btn btn btn-1\">\n              <span class=\"i-search\"></span>\n            </button>\n            <span class=\"inp-limit--value js-inp-limit-value\">100</span>\n          </div>\n          <div class=\"search_hd-filter\">\n            <button class=\"search_hd-filter--discard btn btn-2 js-search-filter-discard\">Сбросить</button>\n            <div class=\"search_hd-filter-subject select js-select js-search-filter-subject\" title=\"Предмет теста\">\n              <button class=\"test-create_bd-select_hd js-select-head select_hd\">\n                <div class=\"select_hd-value js-select-value\" data-select-option-value=\"0\"></div>\n                <div class=\"select_hd--icon i-down-arrow\"></div>\n              </button>\n              <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"0\">\n              <div class=\"select_bd\">\n                <button class=\"select_bd-option\" data-select-option=\"1\">\n                  <div class=\"select-subject-option--square subject-bcg-1\"></div>\n                  <div>Математика</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"2\">\n                  <div class=\"select-subject-option--square subject-bcg-1-1\"></div>\n                  <div>Алгебра</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"3\">\n                  <div class=\"select-subject-option--square subject-bcg-1-2\"></div>\n                  <div>Геометрия</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"4\">\n                  <div class=\"select-subject-option--square subject-bcg-1-3\"></div>\n                  <div>Информатика</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"5\">\n                  <div class=\"select-subject-option--square subject-bcg-2\"></div>\n                  <div>Родной язык</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"6\">\n                  <div class=\"select-subject-option--square subject-bcg-2-1\"></div>\n                  <div>Чтение / Литература</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"7\">\n                  <div class=\"select-subject-option--square subject-bcg-2-2\"></div>\n                  <div>Иностранный язык</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"8\">\n                  <div class=\"select-subject-option--square subject-bcg-3\"></div>\n                  <div>География</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"9\">\n                  <div class=\"select-subject-option--square subject-bcg-3-1\"></div>\n                  <div>Биология</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"10\">\n                  <div class=\"select-subject-option--square subject-bcg-3-2\"></div>\n                  <div>Физика</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"11\">\n                  <div class=\"select-subject-option--square subject-bcg-3-3\"></div>\n                  <div>Химия</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"12\">\n                  <div class=\"select-subject-option--square subject-bcg-3-4\"></div>\n                  <div>Астрономия</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"13\">\n                  <div class=\"select-subject-option--square subject-bcg-4\"></div>\n                  <div>История</div>\n                </button>\n                <button class=\"select_bd-option\" data-select-option=\"14\">\n                  <div class=\"select-subject-option--square subject-bcg-4-1\"></div>\n                  <div>Обществознание</div>\n                </button>\n                <button class=\"select_bd-option select_bd-option-last\" data-select-option=\"0\">\n                  <div class=\"select-subject-option--square subject-bcg-0\"></div>\n                  <div>Другой</div>\n                </button>\n              </div>\n            </div>\n            <div class=\"search_hd-filter-date date-inp_wr\">\n              <span class=\"date-inp--icon inp--icon i-calendar\"></span>\n              <input class=\"inp date--inp js-date-inp js-search-filter-date\" type=\"text\" placeholder=\"03.07.2020\"\n                title=\"Дата создания теста\">\n            </div>\n          </div>\n        </div>\n        <div class=\"search_bd\">\n          <div class=\"cnt-block\">\n            <div class=\"cnt-block_hd\">\n              <div class=\"cnt-block_hd-title\">Результаты поиска</div>\n            </div>\n            <div class=\"cnt-block_bd search-result_bd\">\n              <span class=\"cnt-block_bd--mess\">Ничего не найдено.</span>\n              <div class=\"search-result-users\"></div>\n              <div class=\"search-result-tests\"></div>\n            </div>\n          </div>\n        </div>\n      </div>`;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/search/searchContent.js?");

/***/ }),

/***/ "./src/js/select.js":
/*!**************************!*\
  !*** ./src/js/select.js ***!
  \**************************/
/*! exports provided: Select */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Select\", function() { return Select; });\nclass Select {\n    constructor() {\n        this.items = document.getElementsByClassName('js-select');\n    }\n\n    openOrClose(currentSelect) {\n        currentSelect.classList.toggle('active');\n    }\n\n    selectItem(currentSelect, currentOption, isLoading = true) {\n        let optionValue = currentOption.innerHTML;\n        currentSelect.getElementsByClassName('select_hd-value')[0].innerHTML = optionValue;\n        currentSelect.getElementsByClassName('select_hd-value')[0].dataset.selectOptionValue = currentOption.dataset.selectOption;\n\n        let valueInp = currentSelect.getElementsByClassName('js-select-value-inp')[0],\n            event = new Event('input');\n\n        valueInp.value = currentOption.dataset.selectOption;\n        valueInp.dispatchEvent(event);\n\n        if (!isLoading) {\n            this.openOrClose(currentSelect);\n        }\n    }\n\n    setHandlers() {\n        for (let item of this.items) {\n            item.getElementsByClassName('js-select-head')[0].onclick = () => this.openOrClose(item);\n\n            for (let option of item.getElementsByClassName('select_bd-option')) {\n                option.addEventListener('click', () => this.selectItem(item, option, false));\n\n                if (option.classList.contains('option-choice')) {\n                    this.selectItem(item, option, true);\n                }\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/select.js?");

/***/ }),

/***/ "./src/js/service-settings/delegationServiceSettings.js":
/*!**************************************************************!*\
  !*** ./src/js/service-settings/delegationServiceSettings.js ***!
  \**************************************************************/
/*! exports provided: DelegationServiceSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DelegationServiceSettings\", function() { return DelegationServiceSettings; });\nclass DelegationServiceSettings {\n    constructor (serviceSettingsCl) {\n        this.serviceSettingsCl = serviceSettingsCl;\n    }\n\n    /**\n     * Возвращает ближайший target от клика с data-settings-service-action атрибутом.\n     * \n     * @param {object} event объект события.\n     */\n    getDesiredTarget(event) {\n        let target = event.target;\n\n        // Поиск элемента с data-атрибутами\n        while (target !== event.currentTarget) {\n\n            // Если target == null, значит был удалён элемент из DOM дерева.\n            if (target !== null) {\n                if (target.hasAttribute('data-settings-service-action')) {\n                    return target;\n                }\n                target = target.parentNode;\n            }\n            else {\n                break;\n            }\n        }\n    }\n\n    /**\n     * Вызывает метод указанный в data-settings-service-action-action атрибуте из класса settingsService.\n     * \n     * @param {object} event объект события.\n     */\n    callAction(event) {\n        const target = this.getDesiredTarget(event);\n\n        if (target) {\n            const settingsServiceAction = target.dataset.settingsServiceAction;\n\n            if (settingsServiceAction) {\n                this.serviceSettingsCl[settingsServiceAction](target, event);\n                return;\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/service-settings/delegationServiceSettings.js?");

/***/ }),

/***/ "./src/js/service-settings/serviceSettings.js":
/*!****************************************************!*\
  !*** ./src/js/service-settings/serviceSettings.js ***!
  \****************************************************/
/*! exports provided: ServiceSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceSettings\", function() { return ServiceSettings; });\n/* harmony import */ var _serviceSettingsContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serviceSettingsContent */ \"./src/js/service-settings/serviceSettingsContent.js\");\n/* harmony import */ var _delegationServiceSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delegationServiceSettings */ \"./src/js/service-settings/delegationServiceSettings.js\");\n\n\n\n\nclass ServiceSettings {\n    constructor(page) {\n        this.page = page;\n\n        this.contentCl = new _serviceSettingsContent__WEBPACK_IMPORTED_MODULE_0__[\"ServiceSettingsContent\"]();\n        this.delegationServiceSettingsCl = new _delegationServiceSettings__WEBPACK_IMPORTED_MODULE_1__[\"DelegationServiceSettings\"](this);\n    }\n\n    /**\n     * Изменяет состояние тумблеров, в зависимости от примененных ранее настроек.\n     */\n    setSwitchStates() {\n        let bcgSolidColorToggle = this.page.content.getElementsByClassName('js-settings-service-appearance-img-solid-color-toggle')[0];\n        if (!this.page.backgroundImg.classList.contains('bd_bcg-active')) {\n            this.page.controlsCl.switchToggle(bcgSolidColorToggle);\n        }\n\n        let bcgBlurToggle = this.page.content.getElementsByClassName('js-settings-service-appearance-img-blur-toggle')[0];\n        if (this.page.backgroundImg.classList.contains('bd_bcg-blur')) {\n            this.page.controlsCl.switchToggle(bcgBlurToggle);\n        }\n    }\n\n    /**\n     * Изменяет фоновое изображение.\n     * \n     * @param {object} target элемент на котором сработало событие (родительский блок выбранного изображения).\n     */\n    changeBackgroundImage(target) {\n        const imgNum = target.dataset.backgroundImgNum;\n\n        let bcgSelector = `bd_bcg-${imgNum}`;\n\n        for (let num = 1; 6 >= num; num++) {\n            if (this.page.backgroundImg.classList.contains(`bd_bcg-${num}`)) {\n                this.page.backgroundImg.classList.remove(`bd_bcg-${num}`);\n            }\n        }\n\n        this.page.backgroundImg.classList.add(bcgSelector);\n\n        if (!this.page.backgroundImg.classList.contains('bd_bcg-active')) {\n            this.page.backgroundImg.classList.add('bd_bcg-active');\n\n            let solidColorToggle = this.page.content.getElementsByClassName('js-settings-service-appearance-img-solid-color-toggle')[0];\n            if (solidColorToggle.classList.contains('toggle-active')) {\n                this.page.controlsCl.switchToggle(solidColorToggle);\n            }\n        }\n\n        // ToDo: Реализовать отправку изменений на сервер.\n    }\n\n    /**\n     * Выбирает размыто ли фоновое изображение.\n     * \n     * @param {object} target элемент на котором сработало событие (тумблер).\n     */\n    toggleBackgroundBlur(target) {\n        let toggleValue = target.getElementsByClassName('js-toggle-btn')[0].dataset.toggleValue;\n\n        if (toggleValue === 'true') {\n            if (!this.page.backgroundImg.classList.contains('bd_bcg-blur')) {\n                this.page.backgroundImg.classList.add('bd_bcg-blur');\n            }\n        }\n        else {\n            if (this.page.backgroundImg.classList.contains('bd_bcg-blur')) {\n                this.page.backgroundImg.classList.remove('bd_bcg-blur');\n            }\n        }\n\n        // ToDo: Реализовать отправку изменений на сервер.\n    }\n\n    /**\n     * Выбирает является ли сплошной цвет фоном.\n     * \n     * @param {object} target элемент на котором сработало событие (тумблер).\n     */\n    toggleBackgroundSolidColor(target) {\n        let toggleValue = target.getElementsByClassName('js-toggle-btn')[0].dataset.toggleValue;\n\n        if (toggleValue === 'true') {\n            if (this.page.backgroundImg.classList.contains('bd_bcg-active')) {\n                this.page.backgroundImg.classList.remove('bd_bcg-active');\n            }\n        }\n        else {\n            if (!this.page.backgroundImg.classList.contains('bd_bcg-active')) {\n                this.page.backgroundImg.classList.add('bd_bcg-active');\n            }\n        }\n\n        // ToDo: Реализовать отправку изменений на сервер.\n    }\n\n    /**\n    * Отвечает за загрузку страницы.\n    * \n    * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n    */\n    runPage(contentBd) {\n        contentBd.innerHTML = this.contentCl.getPage();\n\n        this.setHandlers();\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n\n        // Вешает обработчик события click на оберточный элемент страницы\n        this.page.content.getElementsByClassName('js-settings-bd')[0].onclick = (event) => this.delegationServiceSettingsCl.callAction(event);\n\n        // Изменяет состояние тумблеров, в зависимости от примененных ранее настроек\n        this.setSwitchStates();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/service-settings/serviceSettings.js?");

/***/ }),

/***/ "./src/js/service-settings/serviceSettingsContent.js":
/*!***********************************************************!*\
  !*** ./src/js/service-settings/serviceSettingsContent.js ***!
  \***********************************************************/
/*! exports provided: ServiceSettingsContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceSettingsContent\", function() { return ServiceSettingsContent; });\nclass ServiceSettingsContent {\n\n\tgetPage() {\n\t\treturn `<div class=\"cnt_bd-settings js-settings-bd\">\n    <div class=\"settings_hd\">\n      <div class=\"settings_hd-menu pivot-menu\">\n        <button class=\"settings_hd-menu--btn btn pivot-menu--btn js-link-btn\" data-link=\"/acconut/settings\"\n          data-link-page-num=\"6\" data-action=\"goToPage\" data-run-in-frame=\"true\">Аккаунт</button>\n        <button class=\"settings_hd-menu--btn btn pivot-menu--btn js-link-btn pivot-menu--btn-active\"\n          data-link=\"/acconut/settings\" data-link-page-num=\"7\" data-action=\"goToPage\"\n          data-run-in-frame=\"true\">Сервис</button>\n      </div>\n    </div>\n    <div class=\"settings_bd\">\n      <div class=\"cnt-block\">\n        <div class=\"cnt-block_hd\">\n          <div class=\"cnt-block_hd-title\">Внешний вид</div>\n        </div>\n        <div class=\"settings-service-appearance-block_bd cnt-block_bd\">\n          <div class=\"settings-service-appearance-label\">\n            <span class=\"label-txt\">Фон</span>\n            <div class=\"settings-service-appearance-bcgds\">\n              <div class=\"settings-service-appearance-bcg\"\n                data-background-img-num=\"1\" data-settings-service-action=\"changeBackgroundImage\">\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\n                  src=\"./img/background1.jpg\">\n              </div>\n              <div class=\"settings-service-appearance-bcg\"\n                data-background-img-num=\"2\" data-settings-service-action=\"changeBackgroundImage\">\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\n                  src=\"./img/background2.jpg\">\n              </div>\n              <div class=\"settings-service-appearance-bcg\"\n                data-background-img-num=\"3\" data-settings-service-action=\"changeBackgroundImage\">\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\n                  src=\"./img/background3.jpg\">\n              </div>\n              <div class=\"settings-service-appearance-bcg\"\n                data-background-img-num=\"4\" data-settings-service-action=\"changeBackgroundImage\">\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\n                  src=\"./img/background4.jpg\">\n              </div>\n              <div class=\"settings-service-appearance-bcg\"\n                data-background-img-num=\"5\" data-settings-service-action=\"changeBackgroundImage\">\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\n                  src=\"./img/background5.jpg\">\n              </div>\n              <div class=\"settings-service-appearance-bcg\"\n                data-background-img-num=\"6\" data-settings-service-action=\"changeBackgroundImage\">\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\n                  src=\"./img/background6.jpg\">\n              </div>\n            </div>\n            <label\n              class=\"settings-service-appearance-bcg-toggle toggle js-toggle js-settings-service-appearance-img-solid-color-toggle\"\n              data-settings-service-action=\"toggleBackgroundSolidColor\">\n              <button class=\"toggle--btn js-toggle-btn\" data-toggle-value=\"false\">\n                <div class=\"toggle--lever js-toggle-lever\"></div>\n              </button>\n              <span class=\"toggle--txt js-toggle-txt\">Сплошной цвет</span>\n            </label>\n            <label\n              class=\"settings-service-appearance-bcg-toggle toggle js-toggle js-settings-service-appearance-img-blur-toggle\"\n              data-settings-service-action=\"toggleBackgroundBlur\">\n              <button class=\"toggle--btn js-toggle-btn\" data-toggle-value=\"true\">\n                <div class=\"toggle--lever js-toggle-lever\"></div>\n              </button>\n              <span class=\"toggle--txt js-toggle-txt\">Размытие</span>\n            </label>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>`;\n\t}\n}\n\n//# sourceURL=webpack:///./src/js/service-settings/serviceSettingsContent.js?");

/***/ }),

/***/ "./src/js/sidebar.js":
/*!***************************!*\
  !*** ./src/js/sidebar.js ***!
  \***************************/
/*! exports provided: Sidebar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sidebar\", function() { return Sidebar; });\nclass Sidebar {\n    constructor() {\n        this.body = document.getElementById('body');\n        this.menu = this.body.getElementsByClassName('sidebar')[0];\n    }\n\n    openOrClose() {\n        this.body.classList.toggle('sidebar-active');\n\n        let btn = this.menu.getElementsByClassName('sidebar_hd--btn')[0];\n        btn.classList.toggle('i-arrow-right');\n        btn.classList.toggle('i-arrow-left');\n    }\n\n    darkThemeToggle() {\n        this.body.classList.toggle('dark-theme');\n    }\n}\n\n//# sourceURL=webpack:///./src/js/sidebar.js?");

/***/ }),

/***/ "./src/js/subject.js":
/*!***************************!*\
  !*** ./src/js/subject.js ***!
  \***************************/
/*! exports provided: Subject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Subject\", function() { return Subject; });\nclass Subject {\n    constructor() {\n        this.list = [\n            {\n                num: '0',\n                name: 'Другой',\n                color: 'subject-bcg-0'\n            },\n            {\n                num: '1',\n                name: 'Математика',\n                color: 'subject-bcg-1'\n            },\n            {\n                num: '2',\n                name: 'Алгебра',\n                color: 'subject-bcg-1-1'\n            },\n            {\n                num: '3',\n                name: 'Геометрия',\n                color: 'subject-bcg-1-2'\n            },\n            {\n                num: '4',\n                name: 'Информатика',\n                color: 'subject-bcg-1-3'\n            },\n            {\n                num: '5',\n                name: 'Родной язык',\n                color: 'subject-bcg-2'\n            },\n            {\n                num: '6',\n                name: 'Чтение / Литература',\n                color: 'subject-bcg-2-1'\n            },\n            {\n                num: '7',\n                name: 'Иностранный язык',\n                color: 'subject-bcg-2-2'\n            },\n            {\n                num: '8',\n                name: 'География',\n                color: 'subject-bcg-3'\n            },\n            {\n                num: '9',\n                name: 'Биология',\n                color: 'subject-bcg-3-1'\n            },\n            {\n                num: '10',\n                name: 'Физика',\n                color: 'subject-bcg-3-2'\n            },\n            {\n                num: '11',\n                name: 'Химия',\n                color: 'subject-bcg-3-3'\n            },\n            {\n                num: '12',\n                name: 'Астрономия',\n                color: 'subject-bcg-3-4'\n            },\n            {\n                num: '13',\n                name: 'История',\n                color: 'subject-bcg-4'\n            },\n            {\n                num: '14',\n                name: 'Обществознание',\n                color: 'subject-bcg-4-1'\n            }\n        ];\n    }\n\n    getShortName(subjectNum) {\n        let result = '';\n\n        if (subjectNum !== '0') {\n            for (let subject of this.list) {\n                if (subject.num === subjectNum) {\n                    let subjectNameWords = subject.name.split(' ');\n\n                    result = subjectNameWords[0].split('')[0];\n\n                    if (subjectNameWords.length > 1) {\n                        result += subjectNameWords[1].split('')[0];\n                    }\n\n                    return result;\n                }\n            }\n        }\n\n        return result;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/subject.js?");

/***/ }),

/***/ "./src/js/test-result-for-creator/testResultForCreator.js":
/*!****************************************************************!*\
  !*** ./src/js/test-result-for-creator/testResultForCreator.js ***!
  \****************************************************************/
/*! exports provided: TestResultForCreator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForCreator\", function() { return TestResultForCreator; });\n/* harmony import */ var _testResultForCreatorContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./testResultForCreatorContent */ \"./src/js/test-result-for-creator/testResultForCreatorContent.js\");\n\n\nclass TestResultForCreator {\n    constructor(page) {\n        this.page = page;\n\n        this.contentCl = new _testResultForCreatorContent__WEBPACK_IMPORTED_MODULE_0__[\"TestResultForCreatorContent\"]();\n    }\n\n    /**\n     * Отвечает за загрузку страницы.\n     * \n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n     */\n    runPage(contentBd) {\n        contentBd.innerHTML = this.contentCl.getPage();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-creator/testResultForCreator.js?");

/***/ }),

/***/ "./src/js/test-result-for-creator/testResultForCreatorContent.js":
/*!***********************************************************************!*\
  !*** ./src/js/test-result-for-creator/testResultForCreatorContent.js ***!
  \***********************************************************************/
/*! exports provided: TestResultForCreatorContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForCreatorContent\", function() { return TestResultForCreatorContent; });\nclass TestResultForCreatorContent {\n    getPage() {\n        return ``;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-creator/testResultForCreatorContent.js?");

/***/ }),

/***/ "./src/js/test-result-for-user/testResultForUser.js":
/*!**********************************************************!*\
  !*** ./src/js/test-result-for-user/testResultForUser.js ***!
  \**********************************************************/
/*! exports provided: TestResultForUser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForUser\", function() { return TestResultForUser; });\n/* harmony import */ var _testResultForUserContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./testResultForUserContent */ \"./src/js/test-result-for-user/testResultForUserContent.js\");\n\n\nclass TestResultForUser {\n    constructor(page) {\n        this.page = page;\n\n        this.contentCl = new _testResultForUserContent__WEBPACK_IMPORTED_MODULE_0__[\"TestResultForUserContent\"]();\n    }\n\n    /**\n     * Отвечает за загрузку страницы.\n     * \n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n     */\n    runPage(contentBd) {\n        contentBd.innerHTML = this.contentCl.getPage();\n    }\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-user/testResultForUser.js?");

/***/ }),

/***/ "./src/js/test-result-for-user/testResultForUserContent.js":
/*!*****************************************************************!*\
  !*** ./src/js/test-result-for-user/testResultForUserContent.js ***!
  \*****************************************************************/
/*! exports provided: TestResultForUserContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForUserContent\", function() { return TestResultForUserContent; });\nclass TestResultForUserContent {\n    getPage() {\n        return `<div class=\"cnt_bd-test\">\n        <div class=\"test_hd js-test-head\">\n          <div class=\"test_hd-info\">\n            <div class=\"test-subject-logo_wr\">\n              <div class=\"test-subject-logo js-test-subject-logo\"></div>\n            </div>\n            <div class=\"test_hd-title\">\n              <h3 class=\"test_hd-title--heading\">\n                <a class=\"link js-test-title\" href=\"#\"></a>\n              </h3>\n              <p class=\"test_hd-title--description js-test-description\"></p>\n            </div>\n          </div>\n          <div class=\"test_hd-author\">\n            <a class=\"link js-test-author\" href=\"#\"></a>\n          </div>\n          <div class=\"test_hd-dsc\">\n            <div class=\"test_hd-dsc-subject-name js-test-subject\" data-test-subcject-num=\"1\"></div>\n            <div class=\"test_hd-dsc-time\">\n              <span class=\"test_hd-dsc-time--txt\">Время на прохождение:</span>\n              <span class=\"test_hd-dsc-time--value js-test-time\"></span>\n            </div>\n            <div class=\"raiting\">\n              <div class=\"raiting-stars\">\n                <div class=\"raiting-stars--scale\"></div>\n                <div class=\"raiting-star star-1\"><span class=\"i-star2\"></span></div>\n                <div class=\"raiting-star star-2\"><span class=\"i-star2\"></span></div>\n                <div class=\"raiting-star star-3\"><span class=\"i-star2\"></span></div>\n                <div class=\"raiting-star star-4\"><span class=\"i-star2\"></span></div>\n                <div class=\"raiting-star star-5\"><span class=\"i-star2\"></span></div>\n              </div>\n              <div class=\"raiting-star--voted js-test-raiting-voted\"></div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"test_bd test-result_bd\">\n          <div class=\"test-result-short\">\n            <div class=\"test-result-short_bd\">\n              <div class=\"test-result-short-row\">\n                <span>Количество вопросов:</span>\n                <span class=\"test-result-short-row--value\"></span>\n              </div>\n              <div class=\"test-result-short-row\">\n                <span>Верно отвеченных вопросов:</span>\n                <span class=\"test-result-short-row--value\"></span>\n              </div>\n              <div class=\"test-result-short-row\">\n                <span>Неверно отвеченных вопросов:</span>\n                <span class=\"test-result-short-row--value\"></span>\n              </div>\n              <div class=\"test-result-short-row\">\n                <span>Вопросы без ответа:</span>\n                <span class=\"test-result-short-row--value\"></span>\n              </div>\n              <div class=\"test-result-short-row\">\n                <span>Время прохождения:</span>\n                <span class=\"test-result-short-row--value\"></span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"test-attachments test-result-attachments js-test-attachments\">\n            <div class=\"test-attachments-file js-test-attachment\">\n              <img class=\"test-attachments-file--img js-test-attachment-img\"\n                src=\"https://reshenie.club/ulp/matematika/5klass/a_merzljak_i_dr/zadanie_287_efr.png\">\n              <div class=\"test-attachments-file-info\">\n                <a class=\"link js-test-attachment-name\" href=\"#\"\n                  title=\"image_2020-05-06_22-01-53.png\">image_2020-05-06_22-01-53.png</a>\n                <span class=\"size\">27.264 KB</span>\n              </div>\n            </div>\n            <div class=\"test-attachments-file js-test-attachment\">\n              <span class=\"i-file icon\"></span>\n              <div class=\"test-attachments-file-info\">\n                <a class=\"link js-test-attachment-name\" href=\"#\" title=\"HASP_LM_setup.zip\">HASP_LM_setup.zip</a>\n                <span class=\"size\">16725.998 KB</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"test-questions\">\n            <div class=\"test-question\" data-question-num=\"1\" data-answers-type=\"1\">\n              <div class=\"test-question_hd test-result-question_hd test-question-incorrect\">\n                <h4 class=\"test-question_hd--title\">Найти неизвестный множитель уравнения y · 4 = 12.</h4>\n              </div>\n              <img class=\"test-question--img js-test-question-img\"\n                src=\"https://reshenie.club/ulp/matematika/5klass/a_merzljak_i_dr/zadanie_287_efr.png\">\n              <div class=\"test-question-answers\">\n                <div class=\"test-question-answer test-result-answer-correct\" data-answer-num=\"1\"\n                  title=\"Правильный ответ\">\n                  <div class=\"test-question-answer-checkbox\">\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer11\" name=\"answerCheck1\" type=\"checkbox\"\n                      disabled checked>\n                    <label for=\"answer11\"></label>\n                  </div>\n                  <label class=\"test-question-answer--txt\" for=\"answer11\">3</label>\n                </div>\n                <div class=\"test-question-answer\" data-answer-num=\"2\">\n                  <div class=\"test-question-answer-checkbox\">\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer12\" name=\"answerCheck1\" type=\"checkbox\"\n                      disabled>\n                    <label for=\"answer12\"></label>\n                  </div>\n                  <label class=\"test-question-answer--txt\" for=\"answer12\">16</label>\n                </div>\n                <div class=\"test-question-answer\" data-answer-num=\"3\" title=\"Ваш ответ\">\n                  <div class=\"test-question-answer-checkbox\">\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer13\" name=\"answerCheck1\" type=\"checkbox\"\n                      disabled checked>\n                    <label for=\"answer13\"></label>\n                  </div>\n                  <label class=\"test-question-answer--txt\" for=\"answer13\">8</label>\n                </div>\n                <div class=\"test-question-answer\" data-answer-num=\"4\">\n                  <div class=\"test-question-answer-checkbox\">\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer14\" name=\"answerCheck1\" type=\"checkbox\"\n                      disabled>\n                    <label for=\"answer14\"></label>\n                  </div>\n                  <label class=\"test-question-answer--txt\" for=\"answer14\">10</label>\n                </div>\n              </div>\n            </div>\n            <div class=\"test-question\" data-question-num=\"2\" data-answers-type=\"2\">\n              <div class=\"test-question_hd test-result-question_hd test-question-correct\">\n                <h4 class=\"test-question_hd--title\">Чтобы умножить десятичную дробь на 10, 100, 1000 и т.д., надо ...\n                </h4>\n              </div>\n              <div class=\"test-question-answers\">\n                <div class=\"test-question-answer\" data-answer-num=\"1\">\n                  <div class=\"test-question-answer-radio\">\n                    <input class=\"test-question-answer-radio--inp\" id=\"answer21\" name=\"answerCheck2\" type=\"radio\"\n                      disabled>\n                    <label for=\"answer21\"></label>\n                  </div>\n                  <label class=\"test-question-answer--txt\" for=\"answer21\"> в этой дроби перенести запятую на столько\n                    цифр вправо, сколько чисел после запятой у первого множителя.</label>\n                </div>\n                <div class=\"test-question-answer test-result-answer-correct\" data-answer-num=\"2\"\n                  title=\"Вы ответили верно\">\n                  <div class=\"test-question-answer-radio\">\n                    <input class=\"test-question-answer-radio--inp\" id=\"answer22\" name=\"answerCheck2\" type=\"radio\"\n                      disabled checked>\n                    <label for=\"answer22\"></label>\n                  </div>\n                  <label class=\"test-question-answer--txt\" for=\"answer22\"> в этой дроби перенести запятую на столько\n                    цифр вправо, сколько нулей стоит в множителе после единицы</label>\n                </div>\n                <div class=\"test-question-answer\" data-answer-num=\"3\">\n                  <div class=\"test-question-answer-radio\">\n                    <input class=\"test-question-answer-radio--inp\" id=\"answer23\" name=\"answerCheck2\" type=\"radio\"\n                      disabled>\n                    <label for=\"answer23\"></label>\n                  </div>\n                  <label class=\"test-question-answer--txt\" for=\"answer23\">в этой дроби перенести запятую на столько цифр\n                    влево, сколько нулей стоит в множителе после единицы</label>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>`;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-user/testResultForUserContent.js?");

/***/ }),

/***/ "./src/js/test-сreate/testCreate.js":
/*!******************************************!*\
  !*** ./src/js/test-сreate/testCreate.js ***!
  \******************************************/
/*! exports provided: TestCreate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestCreate\", function() { return TestCreate; });\n/* harmony import */ var _subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../subject */ \"./src/js/subject.js\");\n/* harmony import */ var _fileLoad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fileLoad */ \"./src/js/fileLoad.js\");\n/* harmony import */ var _question_question__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../question/question */ \"./src/js/question/question.js\");\n/* harmony import */ var _testCreateContent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./testCreateContent */ \"./src/js/test-сreate/testCreateContent.js\");\n\n\n\n\n\n\n\n/**\n * Класс создания теста.\n */\nclass TestCreate {\n    constructor(page) {\n        this.page = page;\n\n        this.attachments = [];\n\n        this.contentCl = new _testCreateContent__WEBPACK_IMPORTED_MODULE_3__[\"TestCreateContent\"]();\n        this.questionCl = new _question_question__WEBPACK_IMPORTED_MODULE_2__[\"Question\"](page);\n    }\n\n    /**\n     * Отвечает за выбор основного предмета теста.\n     * \n     * @param {object} select кнопка выбора (select) предмета теста.\n     */\n    selectSubject(select) {\n        let selectOptionData = select.getElementsByClassName('select_hd-value')[0].dataset.selectOptionValue,\n            logo = this.page.content.getElementsByClassName('js-test-subject-logo')[0],\n            subjectCl = new _subject__WEBPACK_IMPORTED_MODULE_0__[\"Subject\"]();\n\n        for (let subject of subjectCl.list) {\n            if (subject.num === selectOptionData) {\n                if (!logo.classList.contains(subject.color)) {\n                    logo.classList.add(subject.color);\n                    logo.innerText = subjectCl.getShortName(subject.num);\n                }\n            }\n            else {\n                if (logo.classList.contains(subject.color)) {\n                    logo.classList.remove(subject.color);\n                }\n            }\n        }\n    }\n\n    /**\n     * Выделяет ключевое слово.\n     * Написанное слово выделяется после нажатия клавиш \"Tab\", \"Space\", \"Enter\".\n     * \n     * @param {object} event объект события.\n     * @param {object} input поле для ввода.\n     */\n    highlightKeyword(event, input) {\n\n        // Проверят наличие ключевых слов в поле\n        if (!this.checkKeywordsQuantity(input)) {\n            if (event.code !== 'Backspace' && event.code !== 'Delete') {\n                event.preventDefault();\n            }\n            return;\n        }\n\n        if (event.code === 'Space' ||\n            event.code === 'Tab' ||\n            event.code === 'Semicolon' ||\n            event.code === 'Enter') {\n\n            if (event.code === 'Space' || event.code === 'Enter' || event.code === 'Semicolon') {\n                event.preventDefault();\n            }\n\n            let inputWords = input.textContent.split(';');\n\n            input.innerHTML = '';\n\n            for (let wordWithSemicolon of inputWords) {\n                for (let word of wordWithSemicolon.split(';')) {\n                    word = word.replace(/\\s+/g, '');\n\n                    if (word !== \";\" && word !== \"\") {\n                        input.insertAdjacentHTML('beforeend', `<span class=\"keyword js-test-create-keyword\" data-test-keyword-value=\"${word}\">${word};</span>`);\n                    }\n                }\n            }\n\n            if (input.textContent.trim().length > 0) {\n                let range = new Range();\n                range.setStartAfter(input.lastElementChild);\n                range.collapse(true);\n\n                let selection = document.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n        }\n    }\n\n    /**\n     * Проверяет наличие ключевых слов в поле для ввода.\n     * Возвращает true - если количество слов меньше 5 и false, если больше или равно. \n     * \n     * @param {object} input поле для ввода.\n     */\n    checkKeywordsQuantity(input) {\n        if (input.getElementsByClassName('js-test-create-keyword').length >= 5) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Добавляет вложения.\n     * \n     * @param {object} event объект события.\n     */\n    uploadAttachment(event) {\n        let fileLoadCl = new _fileLoad__WEBPACK_IMPORTED_MODULE_1__[\"FileLoad\"](),\n            files = fileLoadCl.readFile(event),\n            wrapper = document.getElementsByClassName('js-test-create-attachments-files')[0];\n\n        for (let file of files) {\n            if (this.attachments.length >= 5) {\n                this.page.messageCl.show('Ошибка! Количество вложений не может быть больше 5.');\n                return;\n            }\n\n            this.attachments[this.attachments.length] = file;\n\n            // Если вложенный файл является изображеним, то выводится его превью,\n            // если нет, то иконка\n            let attachmentLogo;\n            if (file.type && file.type.indexOf('image') !== -1) {\n                attachmentLogo = `<img class=\"test-attachments-file--img js-test-create-attachment-img\" data-action=\"show\" data-run-in-frame=\"photoFrame\">`;\n            }\n            else {\n                attachmentLogo = `<span class=\"i-file icon\"></span>`;\n            }\n\n            wrapper.insertAdjacentHTML('afterbegin',\n                `<div class=\"test-attachments-file test-create-attachments-file js-test-create-attachment\">\n                    ${attachmentLogo}\n                    <div class=\"test-attachments-file-info\">\n                        <a class=\"link js-test-create-attachment-name\" title=\"${file.name}\">${file.name}</a>\n                        <span class=\"size\">${fileLoadCl.convertBytesToKilobytes(file.size)} KB</span>\n                    </div>\n                    <button class=\"i-cross btn delete js-test-create-attachment-delete-btn\" data-action=\"deleteAttachment\"></button>\n                </div>`);\n\n\n            let attachment = wrapper.getElementsByClassName('js-test-create-attachment')[0],\n                delBtn = attachment.getElementsByClassName('js-test-create-attachment-delete-btn')[0];\n\n            // Если прикрепленный файл является изображением, вешается обработчик события загрузки файла \n            if (file.type && file.type.indexOf('image') !== -1) {\n                fileLoadCl.readImage(file, this.showImage, {\n                    attachmentTag: attachment\n                });\n            }\n        }\n    }\n\n    /**\n     * Выводит превью изображения вложения и вешает обработчик.\n     * Срабатывает после загрузки файла.\n     * \n     * @param {string} path путь к загруженному изображению.\n     * @param {object} params передаваемые параметры.\n     */\n    showImage(path, params) {\n        const img = params.attachmentTag.getElementsByClassName('js-test-create-attachment-img')[0];\n\n        img.src = path;\n    }\n\n    /**\n     * Удаляет вложение.\n     * \n     * @param {object} attachment вложение, необходимое для удаления.\n     */\n    deleteAttachment(target) {\n\n        // Поиск вложения, необходимого для удаления\n        let attachment;\n        while ((target = target.parentElement) && target.classList.contains('js-test-create-attachment')) {\n            attachment = target;\n        }\n\n        let i = 0;\n        for (let file of this.attachments) {\n            let attachmentName = attachment.getElementsByClassName('js-test-create-attachment-name')[0].innerText;\n\n            if (file.name === attachmentName) {\n                attachment.remove();\n                this.attachments.splice(i, 1);\n                break;\n            }\n            i++;\n        }\n    }\n\n    addQuestion() {\n        this.questionCl.addQuestion();\n    }\n\n    /**\n     * Собирает варианты ответов вопроса.\n     * \n     * @param {object} question вопрос, в котором производится поиск.\n     */\n    collectAnswers(question) {\n        let answersData = [],\n            answers = question.getElementsByClassName('js-test-question-answer'),\n            answerNum = 1;\n\n        for (let answer of answers) {\n\n            // Проверка на то, выбран ли вариант ответа в качестве верного\n            let answerIsTrue = false;\n            if (question.dataset.answersType === '3' ||\n                question.dataset.answersType === '4') {\n                answerIsTrue = true;\n            }\n            else {\n                if (answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].checked) {\n                    answerIsTrue = true;\n                }\n            }\n\n            answersData[answersData.length] = {\n                num: answerNum,\n                text: answer.getElementsByClassName('js-test-question-answer-inp')[0].value,\n                isTrue: answerIsTrue\n            };\n\n            answerNum++;\n        }\n\n        return answersData;\n    }\n\n    /**\n     * Собирает вопрос и сопуствующие данные.\n     */\n    collectQuestions() {\n        const questions = this.page.content.getElementsByClassName('js-test-question');\n\n        let questionsData = [],\n            questionNum = 1;\n        for (let question of questions) {\n\n            let questionImg = question.getElementsByClassName('js-test-create-question-image-inp')[0].files[0];\n            if (questionImg === undefined) {\n                questionImg = null;\n            }\n\n            questionsData[questionsData.length] = {\n                num: questionNum,\n                title: question.getElementsByClassName('js-test-create-question-title')[0].value,\n                answersType: question.dataset.answersType,\n                image: questionImg,\n                answers: this.collectAnswers(question)\n            }\n\n            questionNum++;\n        }\n\n        return questionsData;\n    }\n\n    /**\n     * Собирает данные теста.\n     */\n    collectData() {\n        console.log(this.collectQuestions());\n\n        // let data = {\n        //     title: ,\n        //     description: ,\n        //     subject: ,\n        //     time: ,\n        //     keyWords: ,\n        //     attachments: ,\n        //     questions: this.collectQuestions()\n        // };\n    }\n\n    /**\n     * Отвечает за загрузку страницы.\n     * \n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n     */\n    runPage(contentBd) {\n        contentBd.innerHTML = this.contentCl.getPage();\n\n        this.setHandlers();\n    }\n\n    setHandlers() {\n        this.questionCl.setHandlers();\n\n        // Вешает обработчик на кнопку выбора предмета теста\n        const testCreateSubjectSelect = this.page.content.getElementsByClassName('js-test-create-subject-select')[0],\n            testCreateSubjectSelectInp = testCreateSubjectSelect.getElementsByClassName('js-select-value-inp')[0];\n        if (testCreateSubjectSelect !== undefined) {\n            testCreateSubjectSelectInp.oninput = () => this.selectSubject(testCreateSubjectSelect);\n        }\n\n        // Вешает обработчик на поле для ввода ключевых слов\n        const testCreateKeywordsInput = this.page.content.getElementsByClassName('js-test-create-kewords-inp')[0];\n        if (testCreateKeywordsInput !== undefined) {\n            testCreateKeywordsInput.onkeyup = (event) => this.highlightKeyword(event, testCreateKeywordsInput);\n            testCreateKeywordsInput.onkeydown = (event) => this.highlightKeyword(event, testCreateKeywordsInput);\n        }\n\n        // Вешает обработчик на кнопку прикрепления вложений\n        const testCreateAttchmentsInput = this.page.content.getElementsByClassName('js-test-create-attachments-inp')[0];\n        if (testCreateAttchmentsInput !== undefined) {\n            testCreateAttchmentsInput.onchange = (event) => this.uploadAttachment(event, testCreateAttchmentsInput);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/test-%D1%81reate/testCreate.js?");

/***/ }),

/***/ "./src/js/test-сreate/testCreateContent.js":
/*!*************************************************!*\
  !*** ./src/js/test-сreate/testCreateContent.js ***!
  \*************************************************/
/*! exports provided: TestCreateContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestCreateContent\", function() { return TestCreateContent; });\nclass TestCreateContent {\n  getPage() {\n    return `<div class=\"cnt_bd-test\">\n    <div class=\"test_hd test-create_hd\">\n      <div class=\"test_hd-info test-create_hd-info\">\n        <div class=\"test-subject-logo_wr\">\n          <div class=\"test-subject-logo subject-bcg-0 js-test-subject-logo\"></div>\n        </div>\n        <div class=\"test_hd-title\">\n          <label class=\"test-create_hd-title-label first\">\n            <span class=\"label-txt\">Название</span>\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\n              data-auto-hang-handler=\"true\">\n              <input class=\"inp js-inp\" name=\"testTitle\" data-characters-max-limit-value=\"100\" type=\"text\">\n              <span class=\"inp-limit--value js-inp-limit-value\">100</span>\n            </div>\n          </label>\n          <label class=\"test-create_hd-title-label\">\n            <span class=\"label-txt\">Описание</span>\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\n              data-auto-hang-handler=\"true\">\n              <input class=\"inp js-inp\" name=\"testDescription\" data-characters-max-limit-value=\"120\" type=\"text\">\n              <span class=\"inp-limit--value js-inp-limit-value\">120</span>\n            </div>\n          </label>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"test_bd test-create_bd\">\n      <div class=\"test_hd-row test-create_bd-subject\">\n        <label class=\"test-create_bd-label_select\">\n          <span class=\"label-txt\">Предмет</span>\n          <div class=\"test-create_bd-select select js-select js-test-create-subject-select\"\n            title=\"Основной предмет теста\">\n            <button class=\"test-create_bd-select_hd js-select-head select_hd\">\n              <div class=\"select_hd-value js-select-value\" data-select-option-value=\"0\"></div>\n              <div class=\"select_hd--icon i-down-arrow\"></div>\n            </button>\n            <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"0\">\n            <div class=\"select_bd\">\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"1\">\n                <div class=\"select-subject-option--square subject-bcg-1\"></div>\n                <div>Математика</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"2\">\n                <div class=\"select-subject-option--square subject-bcg-1-1\"></div>\n                <div>Алгебра</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"3\">\n                <div class=\"select-subject-option--square subject-bcg-1-2\"></div>\n                <div>Геометрия</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"4\">\n                <div class=\"select-subject-option--square subject-bcg-1-3\"></div>\n                <div>Информатика</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"5\">\n                <div class=\"select-subject-option--square subject-bcg-2\"></div>\n                <div>Родной язык</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"6\">\n                <div class=\"select-subject-option--square subject-bcg-2-1\"></div>\n                <div>Чтение / Литература</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"7\">\n                <div class=\"select-subject-option--square subject-bcg-2-2\"></div>\n                <div>Иностранный язык</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"8\">\n                <div class=\"select-subject-option--square subject-bcg-3\"></div>\n                <div>География</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"9\">\n                <div class=\"select-subject-option--square subject-bcg-3-1\"></div>\n                <div>Биология</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"10\">\n                <div class=\"select-subject-option--square subject-bcg-3-2\"></div>\n                <div>Физика</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"11\">\n                <div class=\"select-subject-option--square subject-bcg-3-3\"></div>\n                <div>Химия</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"12\">\n                <div class=\"select-subject-option--square subject-bcg-3-4\"></div>\n                <div>Астрономия</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"13\">\n                <div class=\"select-subject-option--square subject-bcg-4\"></div>\n                <div>История</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"14\">\n                <div class=\"select-subject-option--square subject-bcg-4-1\"></div>\n                <div>Обществознание</div>\n              </button>\n              <button\n                class=\"select_bd-option js-test-create-subject-select-option select_bd-option js-test-create-subject-select-option-last\"\n                data-select-option=\"0\">\n                <div class=\"select-subject-option--square subject-bcg-0\"></div>\n                <div>Другой</div>\n              </button>\n            </div>\n          </div>\n        </label>\n      </div>\n      <div class=\"test_hd-row test-create_bd-time\">\n        <label class=\"test-create_bd-label_select\">\n          <span class=\"label-txt\">Время на прохождение</span>\n          <div class=\"test-create_bd-select select js-select\">\n            <button class=\"test-create_bd-select_hd select_hd js-select-head\">\n              <div class=\"select_hd-value js-select-value\" data-select-option-value=\"0\">\n                <div>Нет</div>\n              </div>\n              <div class=\"select_hd--icon i-down-arrow\"></div>\n            </button>\n            <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"0\">\n            <div class=\"select_bd\">\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"1\">\n                <div>5 минут</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"2\">\n                <div>15 минут</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"3\">\n                <div>30 минут</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"4\">\n                <div>1 час</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"5\">\n                <div>2 часа</div>\n              </button>\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"6\">\n                <div>Нет</div>\n              </button>\n            </div>\n          </div>\n        </label>\n      </div>\n      <div class=\"test_hd-row test-create_bd-keywords\">\n        <label class=\"test-create_bd-keywords-label\">\n          <span class=\"label-txt\">Ключевые слова</span>\n          <div class=\"test-create_bd-keywords-label--inp inp js-test-create-kewords-inp\" contenteditable=\"true\">\n          </div>\n        </label>\n      </div>\n      <div class=\"test_hd-row test-attachments test-create_bd-attachments\">\n        <span class=\"label-txt\">Вложения</span>\n        <div class=\"test-create_bd-attachments-files js-test-create-attachments-files\">\n          <label class=\"test-create_bd-attachments-label btn\">\n            <span class=\"i-clip\"></span>\n            <span>Прикрепить</span>\n            <input class=\"test-create_bd-attachments-label--inp js-test-create-attachments-inp inp\" type=\"file\"\n              multiple>\n          </label>\n        </div>\n      </div>\n      <div class=\"test_create_bd-questions test-questions js-test-questions\">\n        <div class=\"test_create_bd-question js-test-question\" data-question-num=\"1\" data-answers-type=\"1\">\n          <div class=\"test_create_bd-question_bd js-test-question-body\">\n            <div class=\"test_create_bd-question-col1\">\n              <div class=\"test_create_bd-question-col1-row\">\n                <button class=\"test_create_bd-question-col1-row--btn btn i-cross js-test-create-question-del-btn\" data-question-action=\"deleteQuestion\"></button>\n                <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"false\">\n                  <textarea class=\"test_create_bd-question-title--inp inp js-inp js-test-create-question-title\"\n                    name=\"question\" type=\"text\" data-characters-max-limit-value=\"250\"\n                    placeholder=\"Вопрос №1\"></textarea>\n                </div>\n              </div>\n              <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-image\">\n                <div class=\"test_create_bd-question-col1-image\">\n                  <button\n                    class=\"test_create_bd-question-img--del-btn i-cross btn js-test-question-img-del-btn\" data-question-action=\"deleteImage\"></button>\n                  <img class=\"test_create_bd-question--img js-test-question-img\" data-action=\"show\" data-run-in-frame=\"photoFrame\">\n                </div>\n              </div>\n              <div\n                class=\"test_create_bd-question-col1-row test_create_bd-question-answers js-test-question-answers\">\n                <div class=\"test_create_bd-question-answer js-test-question-answer\" data-answer-num=\"1\">\n                  <div class=\"test-question-answer-checkbox js-test-question-answer-choice-btn\">\n                    <input class=\"test-question-answer-checkbox--inp js-test-question-answer-choice-inp\"\n                      id=\"answer11\" name=\"answerCheck1\" type=\"checkbox\">\n                    <label class=\"js-test-question-answer-choice-label\" for=\"answer11\"></label>\n                  </div>\n                  <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\"\n                    type=\"text\" placeholder=\"Ответ №1\">\n                  <button\n                    class=\"test_create_bd-question-answer--btn btn i-cross js-test-create-question-answer-delete-btn\" data-answer-action=\"deleteAnswer\"></button>\n                </div>\n              </div>\n              <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-add-answer\">\n                <button class=\"test_create_bd-question-answer-add--btn btn btn-2 js-test-create-answer-add-btn\" data-answer-action=\"addAnswer\">\n                  <span class=\"i-plus\"></span>\n                  <span class=\"txt\">Вариант</span>\n                </button>\n              </div>\n            </div>\n            <div class=\"test_create_bd-question-col2\">\n              <label class=\"test_create_bd-question-col2--btn btn i-image\">\n                <input class=\"test_create_bd-question-col2--inp js-test-create-question-image-inp\" type=\"file\"\n                  accept=\"image/*\">\n              </label>\n              <div class=\"test_create_bd-question--select select js-select js-test-create-answer-type-select\">\n                <button class=\"test_create_bd-question--select_hd select_hd js-select-head\">\n                  <div class=\"select_hd-value js-select-value\" data-select-option-value=\"1\">\n                    <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\n                    <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\n                  </div>\n                  <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"1\">\n                  <div class=\"select_hd--icon i-down-arrow\"></div>\n                </button>\n                <div class=\"select_bd\">\n                  <button class=\"select_bd-option\" data-select-option=\"1\">\n                    <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\n                    <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\n                  </button>\n                  <button class=\"select_bd-option\" data-select-option=\"2\">\n                    <div class=\"test_create_bd-question--select-option--icon i-radiobox\"></div>\n                    <div class=\"test_create_bd-question--select-option--txt\">Одиночный выбор</div>\n                  </button>\n                  <button class=\"select_bd-option\" data-select-option=\"3\">\n                    <div class=\"test_create_bd-question--select-option--icon i-text\"></div>\n                    <div class=\"test_create_bd-question--select-option--txt\">Текстовый ответ</div>\n                  </button>\n                  <button class=\"select_bd-option\" data-select-option=\"4\">\n                    <div class=\"test_create_bd-question--select-option--icon i-number\"></div>\n                    <div class=\"test_create_bd-question--select-option--txt\">Числовой ответ</div>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"test_create_bd-question-add js-test-create-question-add\">\n        <div class=\"test_create_bd-question-add\">\n          <div class=\"test_create_bd-question-add-button more-menu js-more-menu\">\n            <button class=\"test_create_bd-question-add--btn btn btn-2 js-test-question-add-btn\" data-action=\"addQuestion\">\n              <span class=\"txt\">Добавить вопрос</span>\n            </button>\n            <button class=\"test_create_bd-question-add--btn-more btn i-more js-more-menu-btn\"></button>\n            <div class=\"test_create_bd-question-add--btn-more-list more-menu-list js-test-question-add-btn-params\">\n              <div class=\"question-add--btn-more-list-item more-menu-list--btn first\">\n                <span>Вопросы:</span>\n                <input class=\"question-add-btn-more--inp inp js-test-question-add-btn-params-questions\"\n                  type=\"number\" value=\"1\" min=\"1\" max=\"30\">\n              </div>\n              <div class=\"question-add--btn-more-list-item more-menu-list--btn\">\n                <span>Ответы:</span>\n                <input class=\"question-add-btn-more--inp inp js-test-question-add-btn-params-answers\" type=\"number\"\n                  value=\"1\" min=\"1\" max=\"6\">\n              </div>\n              <div class=\"question-add--btn-more-list-item more-menu-list--btn last\">\n                <span>Тип ответа:</span>\n                <div class=\"question-add-btn-more--select select js-select\" title=\"Сортировка по предмету\">\n                  <button class=\"question-add-btn-more--select_hd js-select-head select_hd\">\n                    <div class=\"question-add-btn-more--select-value select_hd-value js-select-value\"\n                      data-select-option-value=\"1\">\n                      <div class=\"question-add-btn-more--select-option--icon i-checkbox\"></div>\n                    </div>\n                    <input class=\"select_hd-value--inp js-select-value-inp js-test-question-add-btn-params-type\"\n                      type=\"text\" value=\"1\">\n                  </button>\n                  <div class=\"select_bd\">\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"1\">\n                      <div class=\"question-add-btn-more--select-option--icon i-checkbox\"></div>\n                    </button>\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"2\">\n                      <div class=\"question-add-btn-more--select-option--icon i-radiobox\"></div>\n                    </button>\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"3\">\n                      <div class=\"question-add-btn-more--select-option--icon i-text\"></div>\n                    </button>\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"4\">\n                      <div class=\"question-add-btn-more--select-option--icon i-number\"></div>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"test_ft\">\n      <button class=\"test_ft--btn btn btn-1\" data-action=\"collectData\">Сохранить</button>\n    </div>\n  </div>`;\n  }\n}\n\n//# sourceURL=webpack:///./src/js/test-%D1%81reate/testCreateContent.js?");

/***/ }),

/***/ "./src/js/test/test.js":
/*!*****************************!*\
  !*** ./src/js/test/test.js ***!
  \*****************************/
/*! exports provided: Test */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Test\", function() { return Test; });\n/* harmony import */ var _testContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./testContent */ \"./src/js/test/testContent.js\");\n\n\nclass Test {\n    constructor(page) {\n        this.page = page;\n\n        this.contentCl = new _testContent__WEBPACK_IMPORTED_MODULE_0__[\"TestContent\"]();\n    }\n\n    /**\n     * Отвечает за загрузку страницы.\n     * \n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\n     */\n    runPage(contentBd) {\n        contentBd.innerHTML = this.contentCl.getPage();\n\n        this.setHandlers();\n    }\n\n    /**\n     * Устанавливает обработчики событий.\n     */\n    setHandlers() {\n\n        // Устанавливает обработчики событий на вложения, которые являются изображения, для возможности увеличенного просмотра\n        const attachments = this.page.content.getElementsByClassName('js-test-attachment');\n        for (let attachment of attachments) {\n            let img = attachment.getElementsByClassName('js-test-attachment-img')[0];\n            if (img !== undefined) {\n                img.onclick = () => this.page.photoFrameCl.showOrCloseFrame(img.src);\n            }\n        }\n\n        const questionImgs = this.page.content.getElementsByClassName('js-test-question-img');\n        for (let questionImg of questionImgs) {\n            questionImg.onclick = () => this.page.photoFrameCl.showOrCloseFrame(questionImg.src);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/test/test.js?");

/***/ }),

/***/ "./src/js/test/testContent.js":
/*!************************************!*\
  !*** ./src/js/test/testContent.js ***!
  \************************************/
/*! exports provided: TestContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestContent\", function() { return TestContent; });\nclass TestContent {\n    getPage() {\n        return `<div class=\"cnt_bd-test\">\n    <div class=\"test_hd test-result_hd subject-bcg-1-opacity\">\n      <div class=\"test_hd-info\">\n        <div class=\"test-subject-logo_wr\">\n          <div class=\"test-subject-logo subject-bcg-1 js-test-subject-logo\">М</div>\n        </div>\n        <div class=\"test_hd-title\">\n          <h3 class=\"test_hd-title--heading\">Умножение десятичных дробей №2</h3>\n          <p class=\"test_hd-title--description\">Самостоятельная работа для 5 класса на тему \"Умножение деятичных\n            дробей\"</p>\n        </div>\n      </div>\n      <div class=\"test_hd-dsc\">\n        <div class=\"test_hd-dsc-subject-name\" data-test-subcject-num=\"1\">Математика</div>\n        <div class=\"test_hd-dsc-time\">\n          <span class=\"test_hd-dsc-time--txt\">Время на прохождение:</span>\n          <span class=\"test_hd-dsc-time--value\">30:00</span>\n        </div>\n        <div class=\"raiting\">\n          <div class=\"raiting-stars\">\n            <div class=\"raiting-stars--scale\"></div>\n            <div class=\"raiting-star star-1\"><span class=\"i-star2\"></span></div>\n            <div class=\"raiting-star star-2\"><span class=\"i-star2\"></span></div>\n            <div class=\"raiting-star star-3\"><span class=\"i-star2\"></span></div>\n            <div class=\"raiting-star star-4\"><span class=\"i-star2\"></span></div>\n            <div class=\"raiting-star star-5\"><span class=\"i-star2\"></span></div>\n          </div>\n          <div class=\"raiting-star--voted\">626</div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"test_bd\">\n      <div class=\"test-attachments js-test-attachments\">\n        <div class=\"test-attachments-file js-test-attachment\">\n          <img class=\"test-attachments-file--img js-test-attachment-img\"\n            src=\"https://reshenie.club/ulp/matematika/5klass/a_merzljak_i_dr/zadanie_287_efr.png\">\n          <div class=\"test-attachments-file-info\">\n            <a class=\"link js-test-attachment-name\" href=\"#\"\n              title=\"image_2020-05-06_22-01-53.png\">image_2020-05-06_22-01-53.png</a>\n            <span class=\"size\">27.264 KB</span>\n          </div>\n        </div>\n        <div class=\"test-attachments-file js-test-attachment\">\n          <span class=\"i-file icon\"></span>\n          <div class=\"test-attachments-file-info\">\n            <a class=\"link js-test-attachment-name\" href=\"#\" title=\"HASP_LM_setup.zip\">HASP_LM_setup.zip</a>\n            <span class=\"size\">16725.998 KB</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"test-questions\"></div>\n    </div>\n\n    <div class=\"test_ft\">\n      <button class=\"test_ft--btn btn btn-1\">Начать</button>\n    </div>\n  </div>`;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/test/testContent.js?");

/***/ }),

/***/ "./src/js/timer.js":
/*!*************************!*\
  !*** ./src/js/timer.js ***!
  \*************************/
/*! exports provided: Timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Timer\", function() { return Timer; });\n/**\n * Класс содержащий методы для работы с таймерами.\n */\nclass Timer {\n    countDown(initialValue, finishValue = 0) {\n        if (initialValue === finishValue) {\n            return initialValue;\n        }\n\n        initialValue -= 1;\n\n        return initialValue;\n    }\n}\n\n//# sourceURL=webpack:///./src/js/timer.js?");

/***/ }),

/***/ "./src/js/validationErrorMessages.js":
/*!*******************************************!*\
  !*** ./src/js/validationErrorMessages.js ***!
  \*******************************************/
/*! exports provided: ValidationErrorMessages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ValidationErrorMessages\", function() { return ValidationErrorMessages; });\nclass ValidationErrorMessages {\n\n    /**\n     * Возвращает текст ошибки.\n     * \n     * @param {string} errorNum номер ошибки. \n     */\n    getText(errorNum) {\n        switch (errorNum) {\n\n            // Пустое поле\n            case '1':\n                return 'Это поле не может быть пустым.';\n\n            // Поле может содержать только цифры\n            case '2':\n                return 'Это поле может содержать только цифры.';\n\n            // Неверный формат электронной почты\n            case '3':\n                return 'Адрес электронной почты введён неверно. Пример: text@domani.com';\n\n            // Адрес электронной почты уже занят\n            case '4':\n                return 'Адрес электронной почты уже есть в базе.';\n\n            // Пароль\n            case '5':\n                return 'Пароль должен быть на латинице, содержать минимум одну цифру и иметь длину не менее 8 символов.';\n\n            // Неверно введенное имя пользователя\n            case '6':\n                return 'Имя пользователя может быть написано только на латинице, содержать цифры и иметь длину от 5 до 20 символов.';\n\n            // Имя пользователя занято\n            case '7':\n                return 'Имя пользователя занято.';\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/js/validationErrorMessages.js?");

/***/ })

/******/ });