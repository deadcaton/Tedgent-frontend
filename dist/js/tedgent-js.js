/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/css/app.css":
/*!*************************!*\
  !*** ./src/css/app.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/app.css?");

/***/ }),

/***/ "./src/css/dark-theme.css":
/*!********************************!*\
  !*** ./src/css/dark-theme.css ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/dark-theme.css?");

/***/ }),

/***/ "./src/css/profile.css":
/*!*****************************!*\
  !*** ./src/css/profile.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/profile.css?");

/***/ }),

/***/ "./src/css/raiting.css":
/*!*****************************!*\
  !*** ./src/css/raiting.css ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/raiting.css?");

/***/ }),

/***/ "./src/css/search.css":
/*!****************************!*\
  !*** ./src/css/search.css ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/search.css?");

/***/ }),

/***/ "./src/css/settings.css":
/*!******************************!*\
  !*** ./src/css/settings.css ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/settings.css?");

/***/ }),

/***/ "./src/css/test-create.css":
/*!*********************************!*\
  !*** ./src/css/test-create.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/test-create.css?");

/***/ }),

/***/ "./src/css/test-result.css":
/*!*********************************!*\
  !*** ./src/css/test-result.css ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/test-result.css?");

/***/ }),

/***/ "./src/css/test.css":
/*!**************************!*\
  !*** ./src/css/test.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./src/css/test.css?");

/***/ }),

/***/ "./src/img/pp.jpg":
/*!************************!*\
  !*** ./src/img/pp.jpg ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"img/pp.jpg\");\n\n//# sourceURL=webpack:///./src/img/pp.jpg?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _css_app_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/app.css */ \"./src/css/app.css\");\n/* harmony import */ var _css_app_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_app_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_raiting_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./css/raiting.css */ \"./src/css/raiting.css\");\n/* harmony import */ var _css_raiting_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_raiting_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _css_test_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css/test.css */ \"./src/css/test.css\");\n/* harmony import */ var _css_test_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_test_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _css_profile_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./css/profile.css */ \"./src/css/profile.css\");\n/* harmony import */ var _css_profile_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_css_profile_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _css_test_create_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./css/test-create.css */ \"./src/css/test-create.css\");\n/* harmony import */ var _css_test_create_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_css_test_create_css__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _css_test_result_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./css/test-result.css */ \"./src/css/test-result.css\");\n/* harmony import */ var _css_test_result_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_css_test_result_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _css_settings_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./css/settings.css */ \"./src/css/settings.css\");\n/* harmony import */ var _css_settings_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_css_settings_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _css_search_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./css/search.css */ \"./src/css/search.css\");\n/* harmony import */ var _css_search_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_css_search_css__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _css_dark_theme_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./css/dark-theme.css */ \"./src/css/dark-theme.css\");\n/* harmony import */ var _css_dark_theme_css__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_css_dark_theme_css__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _img_pp_jpg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./img/pp.jpg */ \"./src/img/pp.jpg\");\n/* harmony import */ var _js_app__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./js/app */ \"./src/js/app.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/js/account-settings/accountSettings.js":
/*!****************************************************!*\
  !*** ./src/js/account-settings/accountSettings.js ***!
  \****************************************************/
/*! exports provided: AccountSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccountSettings\", function() { return AccountSettings; });\n/* harmony import */ var _accountSettingsContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accountSettingsContent */ \"./src/js/account-settings/accountSettingsContent.js\");\n/* harmony import */ var _delegationAccountSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delegationAccountSettings */ \"./src/js/account-settings/delegationAccountSettings.js\");\n\r\n\r\n\r\nclass AccountSettings {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.contentCl = new _accountSettingsContent__WEBPACK_IMPORTED_MODULE_0__[\"AccountSettingsContent\"]();\r\n        this.delegationAccountSettingsCl = new _delegationAccountSettings__WEBPACK_IMPORTED_MODULE_1__[\"DelegationAccountSettings\"](this);\r\n    }\r\n\r\n    /**\r\n     * Метод для валидации фамилии, имени и отчества.\r\n     * \r\n     * @param {object} inp проверяемое поле для ввода.\r\n     */\r\n    fullNameValidation(inp) {\r\n        let haveError = false,\r\n            inpWrapper = this.page.fieldCl.surfacingToInpWrapper(inp);\r\n\r\n        if (!this.page.fieldCl.checkOnEmpty(inp.value)) {\r\n            haveError = true;\r\n            this.page.fieldCl.showError(inpWrapper,\r\n                'Это поле не может быть пустым.');\r\n        }\r\n\r\n        if (!haveError) {\r\n            this.page.fieldCl.hideError(inpWrapper);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Метод для валидации имени пользователя.\r\n     * \r\n     * @param {object} inp проверяемое поле для ввода.\r\n     */\r\n    usernameValidation(inp) {\r\n        let haveError = false,\r\n            inpWrapper = this.page.fieldCl.surfacingToInpWrapper(inp);\r\n\r\n        if (inp.value.length !== 0) {\r\n            if (!this.page.fieldCl.checkOnUsername(inp.value)) {\r\n                haveError = true;\r\n                this.page.fieldCl.showError(inpWrapper,\r\n                    'Имя пользователя может быть написано только на латинице, содержать цифры и иметь длину от 5 до 20 символов.');\r\n            }\r\n        }\r\n\r\n        if (!haveError) {\r\n            this.page.fieldCl.hideError(inpWrapper);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Показывает пример ссылки с вводимым именем пользователя.\r\n     * \r\n     * @param {object} inp поле для ввода имени пользователя.\r\n     */\r\n    showUsernameLinkExample(inp) {\r\n        let value = inp.value,\r\n            linkExample = this.page.content.getElementsByClassName('js-settings-account-info-username-link-example')[0];\r\n\r\n        linkExample.innerText = value;\r\n    }\r\n\r\n    /**\r\n     * Метод для валидации пароля.\r\n     * \r\n     * @param {object} inp поля для ввода пароля.\r\n     */\r\n    passwordValidation(inp) {\r\n        let haveError = false,\r\n            inpWrapper = this.page.fieldCl.surfacingToInpWrapper(inp);\r\n\r\n        if (inp.value.length !== 0) {\r\n            if (!this.page.fieldCl.checkOnPassword(inp.value)) {\r\n                haveError = true;\r\n                this.page.fieldCl.showError(inpWrapper,\r\n                    'Пароль должен быть на латинице, содержать минимум одну цифру, букву в верхнем и нижнем регистре и иметь длину не менее 8 символов.');\r\n            }\r\n        }\r\n\r\n        if (!haveError) {\r\n            this.page.fieldCl.hideError(inpWrapper);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Проверяет значение с полей для ввода нового пароля на идентичность.\r\n     * \r\n     * @param {object} newPassInp поля для ввода нового пароля.\r\n     * @param {object} newPassRetryInp поля для повторного ввода нового пароля.\r\n     */\r\n    validateNewPassword(newPassInp, newPassRetryInp) {\r\n        let haveError = false,\r\n            newPassRetryInpWrapper = this.page.fieldCl.surfacingToInpWrapper(newPassRetryInp);\r\n\r\n        if (newPassInp.value.length !== 0) {\r\n            if (newPassInp.value !== newPassRetryInp.value) {\r\n                this.page.fieldCl.showError(newPassRetryInpWrapper,\r\n                    'Пароли не совпадают.');\r\n                haveError = true;\r\n            }\r\n        }\r\n\r\n        if (!haveError) {\r\n            this.page.fieldCl.hideError(newPassRetryInpWrapper);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Собирает данные с полей для ввода формы Публичные данные.\r\n     */\r\n    collectDataFromPublic() {\r\n        const form = this.page.content.getElementsByClassName('js-account-settings-public-data-form')[0],\r\n            inps = form.getElementsByClassName('js-inp');\r\n\r\n        let data = {};\r\n        for (let inp of inps) {\r\n            switch (inp.name) {\r\n                case 'firstName':\r\n                    data.firstName = inp.value;\r\n                    break;\r\n\r\n                case 'lastName':\r\n                    data.lastName = inp.value;\r\n                    break;\r\n\r\n                case 'patronymic':\r\n                    data.patronymic = inp.value;\r\n                    break;\r\n\r\n                case 'dateOfBirth':\r\n                    data.dateOfBirth = inp.value;\r\n                    break;\r\n\r\n                case 'username':\r\n                    data.username = inp.value;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Собирает данные с полей для ввода формы Безопасность.\r\n     */\r\n    collectDataFromSecurity() {\r\n        const form = this.page.content.getElementsByClassName('js-account-settings-security-data-form')[0],\r\n            inps = form.getElementsByClassName('js-inp');\r\n\r\n        let data = {};\r\n        for (let inp of inps) {\r\n            switch (inp.name) {\r\n                case 'currentPassword':\r\n                    data.currentPassword = inp.value;\r\n                    break;\r\n\r\n                case 'newPassword':\r\n                    data.newPassword = inp.value;\r\n                    break;\r\n\r\n                case 'newPasswordRetry':\r\n                    data.newPasswordRetry = inp.value;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку страницы.\r\n     * \r\n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n     */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n\r\n        this.setHandlers();\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n\r\n        // Вешает обработчики событий на поля для ввода\r\n        const inps = this.page.content.getElementsByClassName('js-inp');\r\n        for (let inp of inps) {\r\n\r\n            // Вешает обработчики событий на поля ФИО\r\n            if (inp.name === 'firstName' || inp.name === 'lastName') {\r\n                inp.addEventListener('input', () => this.fullNameValidation(inp));\r\n            }\r\n\r\n            // Вешает обработчик события на поле имени пользователя\r\n            if (inp.name === 'username') {\r\n                inp.addEventListener('input', () => this.usernameValidation(inp));\r\n                inp.addEventListener('input', () => this.showUsernameLinkExample(inp));\r\n            }\r\n\r\n            // Вешает обработчик события на поля для ввода и смены пароля\r\n            if (inp.name === 'newPassword') {\r\n                inp.addEventListener('input', () => this.passwordValidation(inp));\r\n            }\r\n\r\n            // Вешает обработчики событий на поля для ввода нового пароля и его повтора \r\n            if (inp.name === 'newPasswordRetry' || inp.name === 'newPassword') {\r\n                let newPassword = this.page.content.getElementsByClassName('js-account-settings-new-password-inp')[0],\r\n                    newPasswordRetry = this.page.content.getElementsByClassName('js-account-settings-new-password-retry-inp')[0];\r\n                inp.addEventListener('input', () => this.validateNewPassword(newPassword, newPasswordRetry));\r\n            }\r\n        }\r\n\r\n        // Вешает обработчик события click на оберточный элемент страницы\r\n        this.page.content.getElementsByClassName('js-account-bd')[0].onclick = (event) => this.delegationAccountSettingsCl.callAction(event);\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/account-settings/accountSettings.js?");

/***/ }),

/***/ "./src/js/account-settings/accountSettingsContent.js":
/*!***********************************************************!*\
  !*** ./src/js/account-settings/accountSettingsContent.js ***!
  \***********************************************************/
/*! exports provided: AccountSettingsContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccountSettingsContent\", function() { return AccountSettingsContent; });\nclass AccountSettingsContent {\r\n\r\n  getPage() {\r\n    return `<div class=\"cnt_bd-settings js-account-bd\">\r\n    <div class=\"settings_hd\">\r\n      <div class=\"settings_hd-menu pivot-menu\">\r\n        <button class=\"settings_hd-menu--btn btn pivot-menu--btn pivot-menu--btn-active js-link-btn\"\r\n          data-link=\"/acconut/settings\" data-link-page-num=\"6\" data-action=\"goToPage\"\r\n          data-run-in-frame=\"true\">Аккаунт</button>\r\n        <button class=\"settings_hd-menu--btn btn pivot-menu--btn js-link-btn\" data-link=\"/acconut/settings\"\r\n          data-link-page-num=\"7\" data-action=\"goToPage\" data-run-in-frame=\"true\">Сервис</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"settings_bd\">\r\n      <div class=\"cnt-block\">\r\n        <div class=\"cnt-block_hd\">\r\n          <div class=\"cnt-block_hd-title\">Публичные данные</div>\r\n        </div>\r\n        <div class=\"settings-acc-info-block_bd cnt-block_bd js-account-settings-public-data-form\">\r\n          <label class=\"settings-acc-info-label\">\r\n            <span class=\"label-txt\">Фамилия</span>\r\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\r\n              data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp\" name=\"firstName\" data-characters-max-limit-value=\"50\" type=\"text\">\r\n              <span class=\"inp-limit--value js-inp-limit-value\">50</span>\r\n              <div class=\"inp-error-mess\">\r\n                <div class=\"inp-error-mess--txt js-inp-error-txt\"></div>\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <label class=\"settings-acc-info-label\">\r\n            <span class=\"label-txt\">Имя</span>\r\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\r\n              data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp\" name=\"lastName\" data-characters-max-limit-value=\"50\" type=\"text\">\r\n              <span class=\"inp-limit--value js-inp-limit-value\">50</span>\r\n              <div class=\"inp-error-mess\">\r\n                <div class=\"inp-error-mess--txt js-inp-error-txt\"></div>\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <label class=\"settings-acc-info-label\">\r\n            <span class=\"label-txt\">Отчество</span>\r\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\r\n              data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp\" name=\"patronymic\" data-characters-max-limit-value=\"50\" type=\"text\">\r\n              <span class=\"inp-limit--value js-inp-limit-value\">50</span>\r\n              <div class=\"inp-error-mess\">\r\n                <div class=\"inp-error-mess--txt js-inp-error-txt\"></div>\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <label class=\"settings-acc-info-label\">\r\n            <span class=\"label-txt\">Дата рождения</span>\r\n            <div class=\"date-inp_wr\">\r\n              <span class=\"date-inp--icon inp--icon i-calendar\"></span>\r\n              <input class=\"inp date--inp js-date-inp\" name=\"dateOfBirth\" type=\"text\" placeholder=\"03.07.2020\">\r\n            </div>\r\n          </label>\r\n          <label class=\"settings-acc-info-label\">\r\n            <span class=\"label-txt\">Имя пользователя</span>\r\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\r\n              data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp\" name=\"username\" data-characters-max-limit-value=\"20\" type=\"text\">\r\n              <span class=\"inp-limit--value js-inp-limit-value\">20</span>\r\n              <div class=\"inp-error-mess\">\r\n                <div class=\"inp-error-mess--txt js-inp-error-txt\"></div>\r\n              </div>\r\n            </div>\r\n            <span class=\"label-dsc\">Имя пользователя позволяет найти Ваш профиль не зная Вашего личного\r\n              идентификатора.</span>\r\n            <span class=\"label-dsc\">Можно использовать латиницу (a-z), цифры (0-9) и тире. Минимальная длина — 5\r\n              символов.</span>\r\n            <span class=\"label-dsc\">Ваш профиль будет доступен по ссылке\r\n              <span class=\"settings-acc-info-username-link-example\">\r\n                https://tedgent.org/<span class=\"js-settings-account-info-username-link-example\"></span>\r\n              </span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n        <div class=\"settings-acc-info-block_ft cnt-block_ft\">\r\n          <button class=\"btn btn-1 settings-save--btn\"\r\n            data-settings-account-action=\"collectDataFromPublic\">Сохранить</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"cnt-block\">\r\n        <div class=\"cnt-block_hd\">\r\n          <div class=\"cnt-block_hd-title\">Безопасность</div>\r\n        </div>\r\n        <div class=\"settings-acc-security-block_bd cnt-block_bd js-account-settings-security-data-form\">\r\n          <label class=\"settings-acc-security-label\">\r\n            <span class=\"label-txt\">Старый пароль</span>\r\n            <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"true\"\r\n              data-validation-nums=\"6\">\r\n              <input class=\"inp js-inp\" name=\"currentPassword\" data-characters-max-limit-value=\"30\" type=\"password\">\r\n              <div class=\"inp-error-mess\">\r\n                <div class=\"inp-error-mess--txt js-inp-error-txt\"></div>\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <label class=\"settings-acc-security-label\">\r\n            <span class=\"label-txt\">Новый пароль</span>\r\n            <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp js-account-settings-new-password-inp\" name=\"newPassword\"\r\n                data-characters-max-limit-value=\"30\" type=\"password\">\r\n              <div class=\"inp-error-mess\">\r\n                <div class=\"inp-error-mess--txt js-inp-error-txt\"></div>\r\n              </div>\r\n            </div>\r\n            <span class=\"label-dsc\">Пароль должен быть на латинице (a-z), содержать цифры (0-9), один знак в верхнем\r\n              регистре (A) и один в нижнем (a).</span>\r\n          </label>\r\n          <label class=\"settings-acc-security-label\">\r\n            <span class=\"label-txt\">Повторите новый пароль</span>\r\n            <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp js-account-settings-new-password-retry-inp\" name=\"newPasswordRetry\"\r\n                data-characters-max-limit-value=\"30\" type=\"password\">\r\n              <div class=\"inp-error-mess\">\r\n                <div class=\"inp-error-mess--txt js-inp-error-txt\"></div>\r\n              </div>\r\n            </div>\r\n          </label>\r\n        </div>\r\n        <div class=\"settings-acc-security-block_ft cnt-block_ft\">\r\n          <button class=\"btn btn-1 settings-save--btn\"\r\n            data-settings-account-action=\"collectDataFromSecurity\">Сохранить</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>`;\r\n  }\r\n}\n\n//# sourceURL=webpack:///./src/js/account-settings/accountSettingsContent.js?");

/***/ }),

/***/ "./src/js/account-settings/delegationAccountSettings.js":
/*!**************************************************************!*\
  !*** ./src/js/account-settings/delegationAccountSettings.js ***!
  \**************************************************************/
/*! exports provided: DelegationAccountSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DelegationAccountSettings\", function() { return DelegationAccountSettings; });\nclass DelegationAccountSettings {\r\n    constructor(accountSettingsCl) {\r\n        this.accountSettingsCl = accountSettingsCl;\r\n    }\r\n\r\n    /**\r\n    * Возвращает ближайший target от клика с data-settings-account-action атрибутом.\r\n    * \r\n    * @param {object} event объект события.\r\n    */\r\n    getDesiredTarget(event) {\r\n        let target = event.target;\r\n\r\n        // Поиск элемента с data-атрибутами\r\n        while (target !== event.currentTarget) {\r\n\r\n            // Если target == null, значит был удалён элемент из DOM дерева.\r\n            if (target !== null) {\r\n                if (target.hasAttribute('data-settings-account-action')) {\r\n                    return target;\r\n                }\r\n                target = target.parentNode;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Вызывает метод указанный в data-settings-account-action-action атрибуте из класса accountSettings.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    callAction(event) {\r\n        const target = this.getDesiredTarget(event);\r\n\r\n        if (target) {\r\n            const settingsAccountAction = target.dataset.settingsAccountAction;\r\n\r\n            if (settingsAccountAction) {\r\n                this.accountSettingsCl[settingsAccountAction](target, event);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/account-settings/delegationAccountSettings.js?");

/***/ }),

/***/ "./src/js/answer/answer.js":
/*!*********************************!*\
  !*** ./src/js/answer/answer.js ***!
  \*********************************/
/*! exports provided: Answer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Answer\", function() { return Answer; });\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controls */ \"./src/js/controls.js\");\n/* harmony import */ var _answerContent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./answerContent */ \"./src/js/answer/answerContent.js\");\n\r\n\r\n\r\n\r\n/**\r\n * Класс содержащий методы для работы с ответами. \r\n */\r\nclass Answer {\r\n    constructor(question) {\r\n        this.controlsCl = new _controls__WEBPACK_IMPORTED_MODULE_0__[\"Controls\"]();\r\n        this.contentCl = new _answerContent__WEBPACK_IMPORTED_MODULE_1__[\"AnswerContent\"]();\r\n        this.questionCl = question;\r\n    }\r\n\r\n    /**\r\n     * Меняет тип варианта ответа.\r\n     * \r\n     * @param {object} question блок вопроса.\r\n     */\r\n    changeAnswerType(question) {\r\n        const select = question.getElementsByClassName('js-test-create-answer-type-select')[0],\r\n            answersWrapper = question.getElementsByClassName('js-test-question-answers')[0],\r\n            selectOptionData = select.getElementsByClassName('js-select-value')[0].dataset.selectOptionValue,\r\n            currentAnswerType = question.dataset.answersType;\r\n\r\n        question.dataset.answersType = selectOptionData;\r\n\r\n        if (selectOptionData === '1' || selectOptionData === '2') {\r\n\r\n            // Если текущий выбранный вариант ответа явлется текстовым или числовым.\r\n            if (currentAnswerType === '3' || currentAnswerType === '4') {\r\n\r\n                // Заменяет вариант ответа с текстового или числового на множестевнный или единичный.\r\n                answersWrapper.innerHTML = '';\r\n                this.addAnswer(question);\r\n\r\n                // Включает возможность взаимодействия с кнопкой добавления варианта ответа.\r\n                this.controlsCl.enableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\r\n            }\r\n            else {\r\n                let answers = answersWrapper.getElementsByClassName('js-test-question-answer'),\r\n                    answerNum = 1;\r\n\r\n                for (let answer of answers) {\r\n                    let answerChoiceBtn = answer.getElementsByClassName('js-test-question-answer-choice-btn')[0];\r\n\r\n                    answerChoiceBtn.remove();\r\n                    answer.insertAdjacentHTML(\r\n                        'afterbegin',\r\n                        this.contentCl.getAnswerChoiceBtn(\r\n                            selectOptionData,\r\n                            Number(question.dataset.questionNum),\r\n                            Number(answerNum)\r\n                        ));\r\n\r\n                    answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].onchange = () => this.chooseAnAnswer(answer, question);\r\n\r\n                    answerNum++;\r\n                }\r\n\r\n                this.deselect(question);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (selectOptionData === '3' || selectOptionData === '4') {\r\n            this.addAnswer(question);\r\n\r\n            this.controlsCl.disableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Добавляет новый вариант ответа.\r\n     * \r\n     * @param {object} question вопрос в котором добавляется вариант ответа.\r\n     * @param {number} maxLimit максимальное ограничение на количество вариантов ответов в вопросе.\r\n     */\r\n    addAnswer(target, maxLimit = 1) {\r\n        const question = this.questionCl.surfacingToQuestion(target),\r\n            questionNum = question.dataset.questionNum,\r\n            type = question.dataset.answersType,\r\n            answersWrapper = question.getElementsByClassName('js-test-question-answers')[0],\r\n            answerAddBtn = question.getElementsByClassName('js-test-create-answer-add-btn')[0];\r\n\r\n        let answers = answersWrapper.getElementsByClassName('js-test-question-answer');\r\n        switch (type) {\r\n            case '1':\r\n                if (this.checkQuantityOfAnswers(question)) {\r\n                    answersWrapper.insertAdjacentHTML('beforeEnd', this.getAnswerItem(type, questionNum, answers.length));\r\n\r\n                    if (!this.checkQuantityOfAnswers(question)) {\r\n                        this.controlsCl.disableButton(answerAddBtn);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case '2':\r\n                if (this.checkQuantityOfAnswers(question)) {\r\n                    answersWrapper.insertAdjacentHTML('beforeEnd', this.getAnswerItem(type, questionNum, answers.length));\r\n\r\n                    if (!this.checkQuantityOfAnswers(question)) {\r\n                        this.controlsCl.disableButton(answerAddBtn);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case '3':\r\n                answersWrapper.innerHTML = this.getAnswerItem(type, questionNum);\r\n                break;\r\n\r\n            case '4':\r\n                answersWrapper.innerHTML = this.getAnswerItem(type, questionNum);\r\n                break;\r\n        }\r\n\r\n        if (type === '1' || type === '2') {\r\n            const newAnswer = answers[answers.length - 1];\r\n\r\n            // Вешает обработчик события метода выделения выбранного варианта ответа.\r\n            newAnswer.getElementsByClassName('js-test-question-answer-choice-inp')[0].onchange = () => this.chooseAnAnswer(newAnswer, question);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Возвращает DOMString варианта ответа.\r\n     * \r\n     * @param {string} answerType тип возвращаемого варианта.\r\n     * @param {string} questionNum номер вопроса.\r\n     * @param {number} answerNum номер варианта ответа.\r\n     */\r\n    getAnswerItem(answerType, questionNum, answerNum = 1) {\r\n        return this.contentCl.getAnswer(answerType, questionNum, answerNum + 1);\r\n    }\r\n\r\n    /**\r\n     * Удаляет вариант ответа.\r\n     * \r\n     * @param {object} event событие.\r\n     */\r\n    deleteAnswer(target) {\r\n        let question = this.questionCl.surfacingToQuestion(target),\r\n            answerForDelete = this.surfacingToAnswer(target),\r\n            answers = question.getElementsByClassName('js-test-question-answer');\r\n\r\n        if (answerForDelete !== undefined) {\r\n\r\n            // Удаляет вариант ответа\r\n            answerForDelete.remove();\r\n\r\n            // Переисывает значения атрибутов у оставшихся вариантов\r\n            let newAnswerNum = 1;\r\n            for (let answer of answers) {\r\n                answer.dataset.answerNum = newAnswerNum;\r\n\r\n                answer.getElementsByClassName('js-test-question-answer-inp')[0].placeholder = `Ответ №${newAnswerNum}`;\r\n                answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].id = `answer${question.dataset.questionNum}${newAnswerNum}`;\r\n                answer.getElementsByClassName('js-test-question-answer-choice-label')[0].setAttribute('for', `answer${question.dataset.questionNum}${newAnswerNum}`);\r\n\r\n                newAnswerNum++;\r\n            }\r\n\r\n            if (this.checkQuantityOfAnswers(question)) {\r\n                this.controlsCl.enableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\r\n            }\r\n            else {\r\n                this.controlsCl.disableButton(question.getElementsByClassName('js-test-create-answer-add-btn')[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Проверяет количество вопросов.\r\n     * Возвращает false если количество вопросов равно или превышает заданный лимит и true, если нет.\r\n     * \r\n     * @param {object} question - блок вопроса. \r\n     * @param {number} maxLimit - максимальный заданный лимит количества вопросов. По умолчанию равен 6.\r\n     */\r\n    checkQuantityOfAnswers(question, maxLimit = 6) {\r\n        const answers = question.getElementsByClassName('js-test-question-answer');\r\n\r\n        if (answers.length >= maxLimit) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Выделяет выбранный ответ.\r\n     * \r\n     * @param {object} answer вариант ответа.\r\n     */\r\n    chooseAnAnswer(answer, question) {\r\n        const choiceBtnInp = answer.getElementsByClassName('js-test-question-answer-choice-inp')[0];\r\n\r\n        // Если тип кнопок radio => удаляет все ранее выделенные варианты.\r\n        if (choiceBtnInp.getAttribute('type') === 'radio') {\r\n            for (let item of question.getElementsByClassName('js-test-question-answer')) {\r\n                if (item.classList.contains('test-question-answer-active')) {\r\n                    item.classList.remove('test-question-answer-active');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (choiceBtnInp.checked) {\r\n            if (!answer.classList.contains('test-question-answer-active')) {\r\n                answer.classList.add('test-question-answer-active');\r\n            }\r\n        }\r\n        else {\r\n            if (answer.classList.contains('test-question-answer-active')) {\r\n                answer.classList.remove('test-question-answer-active');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Удаляет выделения выбранных ответов.\r\n     * \r\n     * @param {object} question вопрос, с выбранных вариантов которого нужно снять выделение.\r\n     */\r\n    deselect(question) {\r\n        for (let answer of question.getElementsByClassName('js-test-question-answer')) {\r\n            if (answer.classList.contains('test-question-answer-active')) {\r\n                answer.classList.remove('test-question-answer-active');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n    * Всплытие с element до ответа.\r\n    * \r\n    * @param {object} element \r\n    */\r\n    surfacingToAnswer(element) {\r\n        while (element !== document) {\r\n            if (element !== null) {\r\n                if (element.classList.contains('js-test-question-answer')) {\r\n                    return element;\r\n                }\r\n                element = element.parentNode;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/answer/answer.js?");

/***/ }),

/***/ "./src/js/answer/answerContent.js":
/*!****************************************!*\
  !*** ./src/js/answer/answerContent.js ***!
  \****************************************/
/*! exports provided: AnswerContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AnswerContent\", function() { return AnswerContent; });\nclass AnswerContent {\r\n\r\n    /**\r\n     * Возвращает DOMString сфорированного варианта ответа.\r\n     * \r\n     * @param {string} answerType тип варианта ответа.\r\n     * @param {number} questionNum номер вопроса\r\n     * @param {number} answerNum номер варианта ответа.\r\n     */\r\n    getAnswer(answerType, questionNum, answerNum) {\r\n        switch (answerType) {\r\n            case '1':\r\n                return `<div class=\"test_create_bd-question-answer js-test-question-answer\" data-answer-num=\"${answerNum}\">\r\n                <div class=\"test-question-answer-checkbox js-test-question-answer-choice-btn\">\r\n                <input class=\"test-question-answer-checkbox--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerCheck${questionNum}\" type=\"checkbox\">\r\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\r\n                </div>\r\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"text\" placeholder=\"Ответ №${answerNum}\">\r\n                <button class=\"test_create_bd-question-answer--btn btn i-cross js-test-create-question-answer-delete-btn\" data-answer-action=\"deleteAnswer\"></button></div>`;\r\n\r\n            case '2':\r\n                return `<div class=\"test_create_bd-question-answer js-test-question-answer\" data-answer-num=\"${answerNum}\">\r\n                <div class=\"test-question-answer-radio js-test-question-answer-choice-btn\">\r\n                <input class=\"test-question-answer-radio--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerRadio${questionNum}\" type=\"radio\">\r\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\r\n                </div>\r\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"text\" placeholder=\"Ответ №${answerNum}\">\r\n                <button class=\"test_create_bd-question-answer--btn btn i-cross js-test-create-question-answer-delete-btn\" data-answer-action=\"deleteAnswer\"></button></div>`;\r\n\r\n            case '3':\r\n                return `<div class=\"test_create_bd-question-answer test-question-answer-active js-test-question-answer\" data-answer-num=\"1\">\r\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"text\" placeholder=\"Ответ...\"></div>`;\r\n\r\n            case '4':\r\n                return `<div class=\"test_create_bd-question-answer test-question-answer-active js-test-question-answer\" data-answer-num=\"1\">\r\n                <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\" type=\"number\" step=\"any\" placeholder=\"1\"></div>`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Возвращает DOMString блока с кнопкой выбора варианта ответа.\r\n     * \r\n     * @param {string} type тип варианта ответа который нужно вернуть.\r\n     * @param {number} questionNum номер вопроса.\r\n     * @param {number} answerNum номер ответа.\r\n     */\r\n    getAnswerChoiceBtn(answerType, questionNum, answerNum) {\r\n        switch (answerType) {\r\n            case '1':\r\n                return `<div class=\"test-question-answer-checkbox js-test-question-answer-choice-btn\">\r\n                <input class=\"test-question-answer-checkbox--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerCheck${questionNum}\" type=\"checkbox\">\r\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\r\n                </div>`;\r\n\r\n            case '2':\r\n                return `<div class=\"test-question-answer-radio js-test-question-answer-choice-btn\">\r\n                <input class=\"test-question-answer-radio--inp js-test-question-answer-choice-inp\" id=\"answer${questionNum}${answerNum}\" name=\"answerRadio${questionNum}\" type=\"radio\">\r\n                <label class=\"js-test-question-answer-choice-label\" for=\"answer${questionNum}${answerNum}\"></label>\r\n                </div>`;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/answer/answerContent.js?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! exports provided: App */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"App\", function() { return App; });\n/* harmony import */ var _page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page */ \"./src/js/page.js\");\n\r\n\r\nclass App {\r\n    constructor() { }\r\n\r\n    load() {\r\n        new _page__WEBPACK_IMPORTED_MODULE_0__[\"Page\"]().runPageContent();\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    let app = new App().load();\r\n});\n\n//# sourceURL=webpack:///./src/js/app.js?");

/***/ }),

/***/ "./src/js/controls.js":
/*!****************************!*\
  !*** ./src/js/controls.js ***!
  \****************************/
/*! exports provided: Controls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Controls\", function() { return Controls; });\n/**\r\n * Класс с методами для работы с элементами управления.\r\n */\r\nclass Controls {\r\n    constructor(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    /**\r\n     * Отключает возможность взайимодествия с кнопкой.\r\n     * \r\n     * @param {object} btn кнопка, которую нужно отключить.\r\n     */\r\n    disableButton(btn) {\r\n        if (!btn.classList.contains('btn-disable')) {\r\n            btn.classList.add('btn-disable');\r\n        }\r\n\r\n        if (!btn.hasAttribute('disabled')) {\r\n            btn.setAttribute('disabled', '');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Включает возможность взайимодествия с кнопкой.\r\n     * \r\n     * @param {object} btn кнопка, которую нужно включить.\r\n     */\r\n    enableButton(btn) {\r\n        if (btn.classList.contains('btn-disable')) {\r\n            btn.classList.remove('btn-disable');\r\n        }\r\n\r\n        if (btn.hasAttribute('disabled')) {\r\n            btn.removeAttribute('disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Изменяет состояние тумблера.\r\n     * \r\n     * @param {object} toggle элемент.\r\n     */\r\n    switchToggle(toggle) {\r\n        toggle.classList.toggle('toggle-active');\r\n\r\n        let toggleBtn = toggle.getElementsByClassName('js-toggle-btn')[0];\r\n        if (toggle.classList.contains('toggle-active')) {\r\n            toggleBtn.dataset.toggleValue = 'true';\r\n        }\r\n        else {\r\n            toggleBtn.dataset.toggleValue = 'false';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n\r\n        // Устанавливает обработчики события на тумблеры\r\n        let toggles = this.page.body.getElementsByClassName('js-toggle');\r\n        for (let toggle of toggles) {\r\n            let toggleBtn = toggle.getElementsByClassName('js-toggle-btn')[0];\r\n            toggleBtn.onclick = () => this.switchToggle(toggle);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/controls.js?");

/***/ }),

/***/ "./src/js/delegation.js":
/*!******************************!*\
  !*** ./src/js/delegation.js ***!
  \******************************/
/*! exports provided: Delegation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Delegation\", function() { return Delegation; });\nclass Delegation {\r\n    constructor(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    /**\r\n     * Возвращает ближайший target от клика с data-action атрибутом.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    getDesiredTarget(event) {\r\n        let target = event.target,\r\n            click = target;\r\n\r\n        // Поиск элемента с data-атрибутами\r\n        while (target !== event.currentTarget) {\r\n\r\n            // Если target == null, значит был удалён элемент из DOM дерева.\r\n            if (target !== null) {\r\n                if (target.hasAttribute('data-action')) {\r\n                    return target;\r\n                }\r\n                target = target.parentNode;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Вызывает метод указанный в data-action атрибуте из текущего класса страницы.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    callAction(event) {\r\n        const target = this.getDesiredTarget(event);\r\n\r\n        if (target) {\r\n\r\n            const action = target.dataset.action;\r\n            if (!action)\r\n                return;\r\n\r\n            if (target.hasAttribute('data-run-in-frame')) {\r\n\r\n                switch (target.dataset.runInFrame) {\r\n                    case 'sidebar':\r\n                        this.page.sidebarCl[action]();\r\n                        break;\r\n\r\n                    case 'dialogWindow':\r\n                        this.page.dialogWindowCl[action]();\r\n                        break;\r\n\r\n                    case 'photoFrame':\r\n                        this.page.photoFrameCl[action](target);\r\n                        break;\r\n\r\n                    // Если метод должен быть вызван из класса Page\r\n                    case 'true':\r\n                        this.page[action](target);\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.page.currentPageCl[action](target, event);\r\n            }\r\n        }\r\n\r\n        this.page.closeWindows(event);\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/delegation.js?");

/***/ }),

/***/ "./src/js/dialogWindow.js":
/*!********************************!*\
  !*** ./src/js/dialogWindow.js ***!
  \********************************/
/*! exports provided: DialogWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DialogWindow\", function() { return DialogWindow; });\nclass DialogWindow {\r\n    constructor(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    /**\r\n     * Показывает диалоговое окно.\r\n     * \r\n     * @param {object} continueFunc функция, которая сработает после нажатия на кнопку \"Выполнить\".\r\n     * @param {string} text текст, которой необходимо вывести.\r\n     * @param {object} continueFuncParams параметры, необходимые для выполняющей функции.\r\n     */\r\n    show(continueFunc, text, continueFuncParams) {\r\n        if (!this.page.body.classList.contains('dialog-window-active')) {\r\n            this.page.body.classList.add('dialog-window-active');\r\n        }\r\n\r\n        this.page.dialogWindow.getElementsByClassName('js-dialog-window-text')[0].innerText = text;\r\n\r\n        let executeBtn = this.page.dialogWindow.getElementsByClassName('js-dialog-window-execute-btn')[0];\r\n        executeBtn.onclick = () => continueFunc(continueFuncParams);\r\n\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * Закрывает диалоговое окно.\r\n     */\r\n    close() {\r\n        if (this.page.body.classList.contains('dialog-window-active')) {\r\n            this.page.body.classList.remove('dialog-window-active');\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/dialogWindow.js?");

/***/ }),

/***/ "./src/js/fields.js":
/*!**************************!*\
  !*** ./src/js/fields.js ***!
  \**************************/
/*! exports provided: Fields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Fields\", function() { return Fields; });\nclass Fields {\r\n    constructor(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    /**\r\n     * Проверяет количество введенных символов в поле и предпринимает соотвествующие меры при нарушении ограничений.\r\n     * \r\n     * @param {*} event событие.\r\n     * @param {*} inpWrapper обёрточный блок родитель у поля для ввода и блока количества введенных символов.\r\n     */\r\n    checkValueLengthAndTakeAction(event, inpWrapper) {\r\n        let maxLimit = 200, minLimit = 0;\r\n\r\n        if (inpWrapper.dataset.charactersLimit !== 'true')\r\n            return;\r\n\r\n        let inp = event.target;\r\n\r\n        if (inp.dataset.charactersMaxLimitValue !== undefined) {\r\n            maxLimit = Number(inp.dataset.charactersMaxLimitValue);\r\n        }\r\n\r\n        if (inp.dataset.charactersMinLimitValue !== undefined) {\r\n            minLimit = Number(inp.dataset.charactersMinLimitValue);\r\n        }\r\n\r\n        if (!this.checkCharactersLimit(inp.value, maxLimit, minLimit)) {\r\n            this.overwriteValue(inp, maxLimit);\r\n        }\r\n\r\n        this.changeCharactersLimitValue(inpWrapper, inp, maxLimit);\r\n    }\r\n\r\n    /**\r\n     * Перезаписывает введенное в поле значение в пределах лимита.\r\n     * \r\n     * @param {object} inp поле для ввода.\r\n     * @param {number} maxLimit максимально допустимое количество символов.\r\n     */\r\n    overwriteValue(inp, maxLimit) {\r\n        let newValue = '',\r\n            charNum = 1;\r\n\r\n        for (let char of inp.value) {\r\n\r\n            if (newValue == undefined || newValue == '') {\r\n                newValue = char\r\n            }\r\n            else {\r\n                newValue += char;\r\n            }\r\n\r\n            if (charNum >= maxLimit) {\r\n                break;\r\n            }\r\n\r\n            charNum++;\r\n        }\r\n\r\n        inp.value = newValue;\r\n\r\n        let event = new Event('input');\r\n        inp.dispatchEvent(event);\r\n    }\r\n\r\n    /**\r\n     * Меняет значение количества введеных символов в соответсвующем блоке.\r\n     * \r\n     * @param {*} inpWrapper обёрточный блок родитель у поля для ввода и блока количества введенных символов.\r\n     * @param {*} inp поле для ввода.\r\n     * @param {number} maxLimit максимально допустимое количество символов из которого вычитается количество введенных.\r\n     * \r\n     */\r\n    changeCharactersLimitValue(inpWrapper, inp, maxLimit) {\r\n        let valueTag = inpWrapper.getElementsByClassName('js-inp-limit-value')[0];\r\n\r\n        if (valueTag !== undefined) {\r\n            valueTag.innerText = maxLimit - inp.value.length;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Проверяет количество введенных символов с поставленным ограничением.\r\n     * \r\n     * @param {string} value введенное значение.\r\n     * @param {number} maxLimit максимально допустимое количество символов.\r\n     * @param {number} minLimit  минимально допустимое количество символов. По умолчанию = 0.\r\n     */\r\n    checkCharactersLimit(value, maxLimit = 200, minLimit = 0) {\r\n        if (value.length < minLimit) {\r\n            return false;\r\n        }\r\n\r\n        if (value.length > maxLimit) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Проверяет введенные значения и приводит их к соотвествующему виду в поле для ввода даты.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    checkValueForDateInput(event) {\r\n        let inp = event.target,\r\n            value = inp.value,\r\n            newValue = '',\r\n            charNum = 0;\r\n\r\n        for (let char of value) {\r\n\r\n            // Проверка на пробел\r\n            if (char === ' ') {\r\n                break;\r\n            }\r\n\r\n            // Проверка на числовой тип и точку\r\n            if (isNaN(char) && char !== '.') {\r\n                break;\r\n            }\r\n\r\n            // Если кол-во символов превышает или равно 10\r\n            if (charNum >= 10) {\r\n                break;\r\n            }\r\n\r\n            // Ставится точка после 2 числовых символов (день)\r\n            if (charNum === 2) {\r\n                if (char !== '.') {\r\n                    newValue += '.';\r\n                }\r\n            }\r\n\r\n            // Ставится точка после 5 символов (месяц)\r\n            if (charNum === 5) {\r\n                if (char !== '.') {\r\n                    newValue += '.';\r\n                }\r\n            }\r\n\r\n            newValue += char;\r\n\r\n            charNum++;\r\n        }\r\n\r\n        inp.value = newValue;\r\n    }\r\n\r\n    /**\r\n     * Показывает сообщение с ошибкой.\r\n     * \r\n     * @param {object} inpWrapper обёрточный блок поля для ввода.\r\n     * @param {string} errorText текст ошибки.\r\n     */\r\n    showError(inpWrapper, errorText) {\r\n        inpWrapper.getElementsByClassName('js-inp-error-txt')[0].innerText = errorText;\r\n\r\n        if (!inpWrapper.classList.contains('inp-error')) {\r\n            inpWrapper.classList.add('inp-error');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Скрывает сообщение ошибки.\r\n     * \r\n     * @param {object} inpWrapper обёрточный блок поля для ввода.\r\n     */\r\n    hideError(inpWrapper) {\r\n        inpWrapper.getElementsByClassName('js-inp-error-txt')[0].innerText = '';\r\n\r\n        if (inpWrapper.classList.contains('inp-error')) {\r\n            inpWrapper.classList.remove('inp-error');\r\n        }\r\n    }\r\n\r\n    // Проверка на числовой тип\r\n    checkOnNum(value) {\r\n        return isNaN(value);\r\n    }\r\n\r\n    // Email\r\n    checkOnEmail(value) {\r\n        const regexp = /^[-\\w.]+@([A-z0-9][-A-z0-9]+\\.)+[A-z]{2,4}$/;\r\n        return regexp.test(value);\r\n    }\r\n\r\n    // Пароль (Строчные и прописные латинские буквы, цифры, спецсимволы. Минимум 8 символов)\r\n    checkOnPassword(value) {\r\n        const regexp = /(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/;\r\n        return regexp.test(value);\r\n    }\r\n\r\n    // Имя пользователя (с ограничением 4-20 символов, которыми могут быть буквы и цифры, первый символ обязательно буква)\r\n    checkOnUsername(value) {\r\n        const regexp = /^[a-zA-z0-9_-]{5,20}$/;\r\n        return regexp.test(value);\r\n    }\r\n\r\n    // Набор из букв (латиница + кириллица)\r\n    checkOnLetters(value) {\r\n        const regexp = /^[а-яА-ЯёЁa-zA-Z]+$/;\r\n        return regexp.test(value);\r\n    }\r\n\r\n    // Набор из букв и цифр (латиница + кириллица)\r\n    checkOnLettersAndNums(inp) {\r\n        const regexp = /^[а-яА-ЯёЁa-zA-Z0-9]+$/;\r\n        return regexp.test(value);\r\n    }\r\n\r\n    /**\r\n     * Проверка поля на пустоту.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    checkOnEmpty(value) {\r\n        if (value.length <= 0) {\r\n            return false;\r\n        }\r\n        else {\r\n            for (let char of value) {\r\n                if (char !== ' ') {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Вслытие с target до оберточного блока поля для ввода.\r\n     * \r\n     * @param {object} target элемент с которого производится всплытие.\r\n     */\r\n    surfacingToInpWrapper(target) {\r\n        while (target !== document) {\r\n            if (target !== null) {\r\n                if (target.classList.contains('inp_wr')) {\r\n                    return target;\r\n                }\r\n                target = target.parentNode;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Автоматический увеличивает высоту textarea по мере его заполнения.\r\n     * \r\n     * @param {object} event объект события.\r\n     * @param {number} paddingTop верхний padding поля.\r\n     * @param {number} paddingBottom нижний padding поля.\r\n     * @param {string} defaultHeight размер поля по умолчанию (прим. 36px).\r\n     */\r\n    autoHeightChange(event, paddingTop, paddingBottom, defaultHeight = 'inherit') {\r\n        let inp = event.target,\r\n            computed = window.getComputedStyle(inp);\r\n\r\n        inp.style.height = defaultHeight;\r\n\r\n        let height = parseInt(computed.getPropertyValue('border-top-width'), 10)\r\n            + parseInt(computed.getPropertyValue('padding-top'), 10)\r\n            + inp.scrollHeight - (paddingTop + paddingBottom)\r\n            + parseInt(computed.getPropertyValue('padding-bottom'), 10)\r\n            + parseInt(computed.getPropertyValue('border-bottom-width'), 10);\r\n\r\n        if (inp.value === '') {\r\n            inp.removeAttribute('style');\r\n        }\r\n        else {\r\n            inp.style.height = height + 'px';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n        let inpWrappers = this.page.body.getElementsByClassName('js-inp-wrapper');\r\n        for (let inpWrapper of inpWrappers) {\r\n            if (inpWrapper.dataset.autoHangHandler === 'true') {\r\n                inpWrapper.getElementsByClassName('js-inp')[0].oninput = (event) => this.checkValueLengthAndTakeAction(event, inpWrapper);\r\n            }\r\n        }\r\n\r\n        let dateInps = this.page.body.getElementsByClassName('js-date-inp');\r\n        for (let dateInp of dateInps) {\r\n            dateInp.oninput = (event) => this.checkValueForDateInput(event);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/fields.js?");

/***/ }),

/***/ "./src/js/fileLoad.js":
/*!****************************!*\
  !*** ./src/js/fileLoad.js ***!
  \****************************/
/*! exports provided: FileLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileLoad\", function() { return FileLoad; });\n/**\r\n * Класс отвечающий за зазгрузку файлов.\r\n */\r\nclass FileLoad {\r\n    constructor() {\r\n        this.bufferImagePath;\r\n    }\r\n\r\n    /**\r\n     * Считывает и возвращает загруженный файл.\r\n     * \r\n     * @param {*} event события.\r\n     */\r\n    readFile(event) {\r\n        // https://web.dev/read-files/\r\n        return event.target.files;\r\n    }\r\n\r\n    /**\r\n     * Загружает и выводит изображание.\r\n     * \r\n     * @param {*} file загруженный файл.\r\n     * @param {*} loadFunc функция, которая вызываеся после загрузки изображения.\r\n     * @param {*} loadFuncParams параметры вызываемой после загрузки функции.\r\n     */\r\n    readImage(file, loadFunc, loadFuncParams) {\r\n        if (file.type && file.type.indexOf('image') === -1) {\r\n            // ToDo: реализовать вывод ошибки.\r\n            console.log('File is not an image.', file.type, file);\r\n            return;\r\n        }\r\n\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = (event) => {\r\n            loadFunc(event.target.result, loadFuncParams);\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    /**\r\n     * Конвертирует байты в килобайты.\r\n     * \r\n     * @param {number} bytes значение для конвертации.\r\n     */\r\n    convertBytesToKilobytes(bytes) {\r\n        return Number(bytes) / 1000;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/fileLoad.js?");

/***/ }),

/***/ "./src/js/message.js":
/*!***************************!*\
  !*** ./src/js/message.js ***!
  \***************************/
/*! exports provided: Message */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Message\", function() { return Message; });\nclass Message {\r\n    constructor(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    /**\r\n     * Показывает сообщение.\r\n     * \r\n     * @param {string} text текст сообщения.\r\n     */\r\n    show(text) {\r\n        let messText = this.page.message.getElementsByClassName('js-message-text')[0];\r\n\r\n        messText.innerText = text;\r\n\r\n        if (!this.page.body.classList.contains('message-active')) {\r\n            this.page.body.classList.add('message-active');\r\n        }\r\n\r\n        setTimeout(this.hide, 4000, this.page.body);\r\n    }\r\n\r\n    /**\r\n     * Скрывает сообщение.\r\n     * \r\n     * @param {object} body тело страницы.\r\n     */\r\n    hide(body) {\r\n        if (body.classList.contains('message-active')) {\r\n            body.classList.remove('message-active');\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/message.js?");

/***/ }),

/***/ "./src/js/moreMenu.js":
/*!****************************!*\
  !*** ./src/js/moreMenu.js ***!
  \****************************/
/*! exports provided: MoreMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MoreMenu\", function() { return MoreMenu; });\nclass MoreMenu {\r\n    constructor() {\r\n        this.items = document.getElementsByClassName('js-more-menu');\r\n    }\r\n\r\n    openOrClose(wrapper) {\r\n        wrapper.classList.toggle('active');\r\n    }\r\n\r\n    setHandlers() {\r\n        for (let item of this.items) {\r\n            item.getElementsByClassName('js-more-menu-btn')[0].onclick = () => this.openOrClose(item);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/moreMenu.js?");

/***/ }),

/***/ "./src/js/page.js":
/*!************************!*\
  !*** ./src/js/page.js ***!
  \************************/
/*! exports provided: Page */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Page\", function() { return Page; });\n/* harmony import */ var _sidebar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sidebar */ \"./src/js/sidebar.js\");\n/* harmony import */ var _select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select */ \"./src/js/select.js\");\n/* harmony import */ var _photoFrame__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./photoFrame */ \"./src/js/photoFrame.js\");\n/* harmony import */ var _moreMenu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./moreMenu */ \"./src/js/moreMenu.js\");\n/* harmony import */ var _message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./message */ \"./src/js/message.js\");\n/* harmony import */ var _dialogWindow__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dialogWindow */ \"./src/js/dialogWindow.js\");\n/* harmony import */ var _preloader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./preloader */ \"./src/js/preloader.js\");\n/* harmony import */ var _delegation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./delegation */ \"./src/js/delegation.js\");\n/* harmony import */ var _controls__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./controls */ \"./src/js/controls.js\");\n/* harmony import */ var _fields__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fields */ \"./src/js/fields.js\");\n/* harmony import */ var _profile_profile__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./profile/profile */ \"./src/js/profile/profile.js\");\n/* harmony import */ var _test_reate_testCreate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./test-сreate/testCreate */ \"./src/js/test-сreate/testCreate.js\");\n/* harmony import */ var _test_test__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./test/test */ \"./src/js/test/test.js\");\n/* harmony import */ var _test_result_for_creator_testResultForCreator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./test-result-for-creator/testResultForCreator */ \"./src/js/test-result-for-creator/testResultForCreator.js\");\n/* harmony import */ var _test_result_for_user_testResultForUser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./test-result-for-user/testResultForUser */ \"./src/js/test-result-for-user/testResultForUser.js\");\n/* harmony import */ var _account_settings_accountSettings__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./account-settings/accountSettings */ \"./src/js/account-settings/accountSettings.js\");\n/* harmony import */ var _service_settings_serviceSettings__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./service-settings/serviceSettings */ \"./src/js/service-settings/serviceSettings.js\");\n/* harmony import */ var _search_search__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./search/search */ \"./src/js/search/search.js\");\n/* harmony import */ var _pageTitles__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pageTitles */ \"./src/js/pageTitles.js\");\n// Основные области\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Элементы управления (кнопки, поля для ввода)\r\n\r\n\r\n\r\n\r\n// Страницы\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Для страниц\r\n\r\n\r\n/**\r\n * Класс для работы со страницами.\r\n */\r\nclass Page {\r\n    constructor() {\r\n\r\n        // Области\r\n        this.body = document.getElementById('body');\r\n        this.backgroundImg = this.body.getElementsByClassName('js-background-img')[0];\r\n        this.content = document.getElementById('bodyContent');\r\n        this.menu = this.body.getElementsByClassName('js-menu')[0];\r\n        this.menuPageTitle = this.menu.getElementsByClassName('js-menu-page-title')[0];\r\n        this.photoFrame = this.body.getElementsByClassName('js-photo-frame')[0];\r\n        this.message = this.body.getElementsByClassName('js-message')[0];\r\n        this.dialogWindow = this.body.getElementsByClassName('js-dialog-window')[0];\r\n        this.preloader = this.body.getElementsByClassName('js-preloader')[0];\r\n\r\n        // Для работы с областями\r\n        this.selectCl = new _select__WEBPACK_IMPORTED_MODULE_1__[\"Select\"]();\r\n        this.messageCl = new _message__WEBPACK_IMPORTED_MODULE_4__[\"Message\"](this);\r\n        this.dialogWindowCl = new _dialogWindow__WEBPACK_IMPORTED_MODULE_5__[\"DialogWindow\"](this);\r\n        this.photoFrameCl = new _photoFrame__WEBPACK_IMPORTED_MODULE_2__[\"PhotoFrame\"](this);\r\n        this.preloaderCl = new _preloader__WEBPACK_IMPORTED_MODULE_6__[\"Preloader\"](this);\r\n        this.sidebarCl = new _sidebar__WEBPACK_IMPORTED_MODULE_0__[\"Sidebar\"]();\r\n\r\n        // Для работы с элементами управления\r\n        this.delegationCl = new _delegation__WEBPACK_IMPORTED_MODULE_7__[\"Delegation\"](this);\r\n        this.controlsCl = new _controls__WEBPACK_IMPORTED_MODULE_8__[\"Controls\"](this);\r\n        this.fieldCl = new _fields__WEBPACK_IMPORTED_MODULE_9__[\"Fields\"](this);\r\n\r\n        // Номер текущей страницы\r\n        this.num = this.body.dataset.pageNum;\r\n        this.currentPageCl;\r\n    }\r\n\r\n    /**\r\n     * Закрывает все активные всплывающие окна, селекты и подобные элементы по клику на body.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    closeWindows(event) {\r\n        const items = this.body.getElementsByClassName('active'),\r\n            itemsCount = items.length;\r\n\r\n        for (let i = 0; itemsCount > i; i++) {\r\n            if (!items[0].contains(event.target)) {\r\n                items[0].classList.remove('active');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Изменяет заголовок страницы в меню.\r\n     * \r\n     * @param {string} pageNum номер страницы. \r\n     */\r\n    changePageTitle(pageNum = this.num) {\r\n        this.menuPageTitle.innerText = new _pageTitles__WEBPACK_IMPORTED_MODULE_18__[\"PageTitles\"]().getTitle(pageNum);\r\n    }\r\n\r\n    /**\r\n     * Отвечает за переход на страницу.\r\n     * \r\n     * @param {object} linkBtn кнопка-ссылка на которой произошел click.\r\n     */\r\n    goToPage(linkBtn) {\r\n        let link = linkBtn.dataset.link,\r\n            linkPageNum = linkBtn.dataset.linkPageNum;\r\n\r\n        this.preloaderCl.show('Загрузка страницы...');\r\n        this.runPageContent(linkPageNum);\r\n        this.preloaderCl.close();\r\n    }\r\n\r\n    /**\r\n     * Загружает содержимое страницы.\r\n     * \r\n     * @param {string} pageNum номер страницы.\r\n     */\r\n    runPageContent(pageNum = this.num) {\r\n        let contentBd = this.content.getElementsByClassName('js-content-bd')[0];\r\n\r\n        // Изменяет номер страницы\r\n        this.body.dataset.pageNum = pageNum;\r\n        this.num = this.body.dataset.pageNum;\r\n\r\n        // Определяет необходимый метод для активации по номеру страницу \r\n        switch (this.num) {\r\n\r\n            case '0':\r\n                break;\r\n\r\n            // Profile page\r\n            case '1':\r\n                this.currentPageCl = new _profile_profile__WEBPACK_IMPORTED_MODULE_10__[\"Profile\"](this);\r\n                this.currentPageCl.runPage(contentBd);\r\n                break;\r\n\r\n            // Test create page\r\n            case '2':\r\n                this.currentPageCl = new _test_reate_testCreate__WEBPACK_IMPORTED_MODULE_11__[\"TestCreate\"](this);\r\n                this.currentPageCl.runPage(contentBd);\r\n                break;\r\n\r\n            // Test page\r\n            case '3':\r\n                new _test_test__WEBPACK_IMPORTED_MODULE_12__[\"Test\"](this).runPage(contentBd);\r\n                break;\r\n\r\n            // Test result for creator page\r\n            case '4':\r\n                new _test_result_for_creator_testResultForCreator__WEBPACK_IMPORTED_MODULE_13__[\"TestResultForCreator\"](this).runPage(contentBd);\r\n                break;\r\n\r\n            // Test result for user\r\n            case '5':\r\n                new _test_result_for_user_testResultForUser__WEBPACK_IMPORTED_MODULE_14__[\"TestResultForUser\"](this).runPage(contentBd);\r\n                break;\r\n\r\n            // Account settings page\r\n            case '6':\r\n                this.currentPageCl = new _account_settings_accountSettings__WEBPACK_IMPORTED_MODULE_15__[\"AccountSettings\"](this);\r\n                this.currentPageCl.runPage(contentBd);\r\n                break;\r\n\r\n            // Service settings page\r\n            case '7':\r\n                this.currentPageCl = new _service_settings_serviceSettings__WEBPACK_IMPORTED_MODULE_16__[\"ServiceSettings\"](this);\r\n                this.currentPageCl.runPage(contentBd);\r\n                break;\r\n\r\n            // Search page\r\n            case '8':\r\n                this.currentPageCl = new _search_search__WEBPACK_IMPORTED_MODULE_17__[\"Search\"](this);\r\n                this.currentPageCl.runPage(contentBd);\r\n                break;\r\n        }\r\n\r\n        this.changePageTitle();\r\n        this.setHandlers();\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n        this.selectCl.setHandlers();\r\n        new _moreMenu__WEBPACK_IMPORTED_MODULE_3__[\"MoreMenu\"]().setHandlers();\r\n        this.controlsCl.setHandlers();\r\n        this.fieldCl.setHandlers();\r\n\r\n        this.body.onclick = (event) => this.delegationCl.callAction(event);\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/page.js?");

/***/ }),

/***/ "./src/js/pageTitles.js":
/*!******************************!*\
  !*** ./src/js/pageTitles.js ***!
  \******************************/
/*! exports provided: PageTitles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageTitles\", function() { return PageTitles; });\nclass PageTitles {\r\n\r\n    /**\r\n     * Возвращает заголовок страницы.\r\n     * \r\n     * @param {string} pageNum номер страницы.\r\n     */\r\n    getTitle(pageNum) {\r\n\r\n        switch (pageNum) {\r\n            case '1':\r\n                return 'Профиль';\r\n\r\n            case '2':\r\n                return 'Тесты';\r\n\r\n            case '3':\r\n                return 'Создание теста';\r\n\r\n            case '4':\r\n                return 'Тест';\r\n\r\n            case '5':\r\n                return 'Результат теста';\r\n\r\n            case '6':\r\n                return 'Настройки аккаунта';\r\n\r\n            case '7':\r\n                return 'Настройки сервиса';\r\n\r\n            case '8':\r\n                return 'Поиск';\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/pageTitles.js?");

/***/ }),

/***/ "./src/js/photoFrame.js":
/*!******************************!*\
  !*** ./src/js/photoFrame.js ***!
  \******************************/
/*! exports provided: PhotoFrame */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PhotoFrame\", function() { return PhotoFrame; });\nclass PhotoFrame {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.wrapper = page.body.getElementsByClassName('js-photo-frame')[0];\r\n        this.img = this.wrapper.getElementsByClassName('js-photo-frame-img')[0];\r\n    }\r\n\r\n    /**\r\n     * Показывает выбранное изображение.\r\n     * \r\n     * @param {object} img изображение, на котором произошло нажатие.\r\n     */\r\n    show(img) {\r\n        const imgPath = img.src;\r\n\r\n        if (!this.page.body.classList.contains('photo-frame-active')) {\r\n            this.page.body.classList.add('photo-frame-active');\r\n        }\r\n\r\n        this.img.src = imgPath;\r\n    }\r\n\r\n    /**\r\n     * Закрывает показанное изображение.\r\n     */\r\n    close() {\r\n        if (this.page.body.classList.contains('photo-frame-active')) {\r\n            this.page.body.classList.remove('photo-frame-active');\r\n        }\r\n\r\n        this.img.src = '';\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/photoFrame.js?");

/***/ }),

/***/ "./src/js/preloader.js":
/*!*****************************!*\
  !*** ./src/js/preloader.js ***!
  \*****************************/
/*! exports provided: Preloader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Preloader\", function() { return Preloader; });\nclass Preloader {\r\n    constructor(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    /**\r\n     * Показывает preloader.\r\n     * \r\n     * @param {string} text текст.\r\n     */\r\n    show(text = '') {\r\n        if (!this.page.body.classList.contains('preloader-active')) {\r\n            this.page.body.classList.add('preloader-active');\r\n        }\r\n\r\n        this.changeText(text);\r\n    }\r\n\r\n    /**\r\n     * Меняет текст у preloader'а.\r\n     * \r\n     * @param {string} text текст.\r\n     */\r\n    changeText(text) {\r\n        this.page.preloader.getElementsByClassName('js-preloader-text')[0].innerText = text;\r\n    }\r\n\r\n    /**\r\n     * Закрывает preloader.\r\n     */\r\n    close() {\r\n        if (this.page.body.classList.contains('preloader-active')) {\r\n            this.page.body.classList.remove('preloader-active');\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/preloader.js?");

/***/ }),

/***/ "./src/js/profile/profile.js":
/*!***********************************!*\
  !*** ./src/js/profile/profile.js ***!
  \***********************************/
/*! exports provided: Profile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Profile\", function() { return Profile; });\n/* harmony import */ var _profileContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./profileContent */ \"./src/js/profile/profileContent.js\");\n\r\n\r\nclass Profile {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.contentCl = new _profileContent__WEBPACK_IMPORTED_MODULE_0__[\"ProfileContent\"]();\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку страницы.\r\n     * \r\n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n     */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/profile/profile.js?");

/***/ }),

/***/ "./src/js/profile/profileContent.js":
/*!******************************************!*\
  !*** ./src/js/profile/profileContent.js ***!
  \******************************************/
/*! exports provided: ProfileContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProfileContent\", function() { return ProfileContent; });\nclass ProfileContent {\r\n    getPage() {\r\n        return `<div class=\"cnt_bd-profile\">\r\n        <div class=\"profile_hd\">\r\n          <img class=\"profile_hd--img\" src=\"./img/pp.jpg\">\r\n          <div class=\"profile_hd-info\">\r\n            <div class=\"profile_hd-info--names\">\r\n              <span>Иванов Иван Иванович</span>\r\n            </div>\r\n            <div class=\"profile_hd-info--email\">\r\n              <span><a class=\"link\" href=\"mailto:ir.yasaviev@yandex.ru\">ir.yasaviev@yandex.ru</a></span>\r\n            </div>\r\n            <div class=\"profile_hd-info--nickname\">\r\n              <span>@ir_yasaviev</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"profile_bd\">\r\n          <div class=\"profile-tests cnt-block\">\r\n            <div class=\"cnt-block_hd\">\r\n              <div class=\"profile-tests-title cnt-block_hd-title\">\r\n                <span>Тесты</span>\r\n                <span class=\"profile-tests-title--counter\">0</span>\r\n              </div>\r\n              <div class=\"profile-tests-menu\">\r\n                <input class=\"inp profile-tests-menu--search\" type=\"text\" placeholder=\"Поиск\">\r\n                <button class=\"btn profile-tests-menu-alphabet-sort\">\r\n                  <span class=\"btn--icon i-sort-alphabet\"></span>\r\n                  <span class=\"profile-tests-menu-alphabet-sort--txt\">По алфавиту</span>\r\n                </button>\r\n                <button class=\"btn profile-tests-menu-raiting-sort\">\r\n                  <span class=\"btn--icon i-star\"></span>\r\n                  <span class=\"profile-tests-menu-raiting-sort--txt\">По рейтингу</span>\r\n                </button>\r\n                <div class=\"profile-tests-menu-date date-inp_wr\">\r\n                  <span class=\"date-inp--icon inp--icon i-calendar\"></span>\r\n                  <input class=\"profile-tests-menu-date--inp inp date--inp js-date-inp\" type=\"text\"\r\n                    placeholder=\"03.07.2020\" title=\"Сортировка по дате создания теста\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"profile-tests_bd cnt-block_bd\">\r\n              <span class=\"cnt-block_bd--mess\">Пользователь не создал ещё ни одного теста.</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/profile/profileContent.js?");

/***/ }),

/***/ "./src/js/question/deleagtionQuestion.js":
/*!***********************************************!*\
  !*** ./src/js/question/deleagtionQuestion.js ***!
  \***********************************************/
/*! exports provided: DelegationQuestion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DelegationQuestion\", function() { return DelegationQuestion; });\nclass DelegationQuestion {\r\n    constructor(questionCl, answerCl) {\r\n        this.questionCl = questionCl;\r\n        this.answerCl = answerCl;\r\n    }\r\n\r\n    /**\r\n     * Возвращает ближайший target от клика с data-question-action атрибутом.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    getDesiredTarget(event) {\r\n        let target = event.target;\r\n\r\n        // Поиск элемента с data-атрибутами\r\n        while (target !== event.currentTarget) {\r\n\r\n            // Если target == null, значит был удалён элемент из DOM дерева.\r\n            if (target !== null) {\r\n                if (target.hasAttribute('data-question-action') || target.hasAttribute('data-answer-action')) {\r\n                    return target;\r\n                }\r\n                target = target.parentNode;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Вызывает метод указанный в data-question-action атрибуте из класса question.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    callAction(event) {\r\n        const target = this.getDesiredTarget(event);\r\n\r\n        if (target) {\r\n            const questionAction = target.dataset.questionAction,\r\n                answerAction = target.dataset.answerAction;\r\n\r\n            if (questionAction) {\r\n                this.questionCl[questionAction](target, event);\r\n                return;\r\n            }\r\n\r\n            if (answerAction) {\r\n                this.answerCl[answerAction](target, event);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/question/deleagtionQuestion.js?");

/***/ }),

/***/ "./src/js/question/question.js":
/*!*************************************!*\
  !*** ./src/js/question/question.js ***!
  \*************************************/
/*! exports provided: Question */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Question\", function() { return Question; });\n/* harmony import */ var _fileLoad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../fileLoad */ \"./src/js/fileLoad.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../timer */ \"./src/js/timer.js\");\n/* harmony import */ var _answer_answer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../answer/answer */ \"./src/js/answer/answer.js\");\n/* harmony import */ var _questionContent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./questionContent */ \"./src/js/question/questionContent.js\");\n/* harmony import */ var _deleagtionQuestion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./deleagtionQuestion */ \"./src/js/question/deleagtionQuestion.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class with methods for work with question.\r\n * Класс с методами для работы с вопросом.\r\n */\r\nclass Question {\r\n    constructor(page) {\r\n        this.answerCl = new _answer_answer__WEBPACK_IMPORTED_MODULE_2__[\"Answer\"](this);\r\n        this.contentCl = new _questionContent__WEBPACK_IMPORTED_MODULE_3__[\"QuestionContent\"]();\r\n        this.delegationQuestionCl = new _deleagtionQuestion__WEBPACK_IMPORTED_MODULE_4__[\"DelegationQuestion\"](this, this.answerCl);\r\n\r\n        this.page = page;\r\n        this.questions = this.page.content.getElementsByClassName('js-test-question');\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку изображения вопроса.\r\n     * \r\n     * @param {object} event событие.\r\n     */\r\n    loadImage(event) {\r\n        const question = this.surfacingToQuestion(event.target);\r\n\r\n        new _fileLoad__WEBPACK_IMPORTED_MODULE_0__[\"FileLoad\"]().readImage(event.target.files[0], this.showImage, {\r\n            showFunc: this.showImage,\r\n            questionTag: question,\r\n            photoFrameCl: this.page.photoFrameCl\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Выводит изображение вопроса.\r\n     * \r\n     * @param {string} path - Blob путь загруженного изображения.\r\n     * @param {object} params - Необходимые параметры.\r\n     */\r\n    showImage(path, params) {\r\n        const question = params.questionTag;\r\n\r\n        if (question === undefined) {\r\n            this.messageCl.show('Что-то пошло не так. Поажлуйста, перезагрузите страницу.');\r\n            return;\r\n        }\r\n\r\n        const imgTag = question.getElementsByClassName('js-test-question-img')[0];\r\n\r\n        imgTag.setAttribute('src', path);\r\n\r\n        if (!question.classList.contains('test_create_bd-question-image-active')) {\r\n            question.classList.add('test_create_bd-question-image-active');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Удаляет прикрепленное изображение вопроса.\r\n     * \r\n     * @param {object} target элемент, на котором сработалоа событие.\r\n     */\r\n    deleteImage(target) {\r\n        const question = this.surfacingToQuestion(target),\r\n            img = question.getElementsByClassName('js-test-question-img')[0];\r\n\r\n        img.src = '';\r\n\r\n        if (question.classList.contains('test_create_bd-question-image-active')) {\r\n            question.classList.remove('test_create_bd-question-image-active');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Добавляет новый вопрос.\r\n     */\r\n    addQuestion() {\r\n        const questionAddMenu = this.page.content.getElementsByClassName('js-test-create-question-add')[0],\r\n            questionAddMenuMore = questionAddMenu.getElementsByClassName('js-test-question-add-btn-params')[0],\r\n            questionsQuantity = questionAddMenuMore.getElementsByClassName('js-test-question-add-btn-params-questions')[0].value,\r\n            answersQuantity = questionAddMenuMore.getElementsByClassName('js-test-question-add-btn-params-answers')[0].value,\r\n            answerType = questionAddMenuMore.getElementsByClassName('js-test-question-add-btn-params-type')[0].value;\r\n\r\n        let newQuestions = [];\r\n        for (let newQuestionNum = 1; Number(questionsQuantity) >= newQuestionNum; newQuestionNum++) {\r\n\r\n            // Если количество имеющихся и новых вопросов превышает 30, то добавлние прекращается\r\n            if (30 <= this.questions.length + newQuestions.length) {\r\n                break;\r\n            }\r\n\r\n            let newQuestion = this.getQuestionItem(answerType, this.questions.length + newQuestionNum, answersQuantity);\r\n            newQuestions[newQuestions.length] = newQuestion;\r\n        }\r\n\r\n        // Вставка новых вопросов в body\r\n        if (newQuestions.length > 0) {\r\n            let questionsDom;\r\n\r\n            for (let question of newQuestions) {\r\n                if (questionsDom === undefined) {\r\n                    questionsDom = question;\r\n                }\r\n                else {\r\n                    questionsDom = questionsDom + question;\r\n                }\r\n            }\r\n\r\n            this.page.content.getElementsByClassName('js-test-questions')[0].insertAdjacentHTML('beforeend', questionsDom);\r\n\r\n            // Вешает обработчики событий\r\n            this.setHandlers();\r\n\r\n            // Вешает все необходимые обработчики на select\r\n            this.page.selectCl.setHandlers();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Возвращает сформированный DOMString вопроса.\r\n     * \r\n     * @param {*} answerType тип ответа.\r\n     * @param {*} questionNum номер формируемого вопроса.\r\n     * @param {*} answersQuantity количество вариантов ответа в добавляемом вопросе.\r\n     * @param {*} answersQuantityMaxLimit ограничение на максимальное количество вариантов ответа в добавляемом вопросе.\r\n     */\r\n    getQuestionItem(answerType, questionNum, answersQuantity, answersQuantityMaxLimit = 6) {\r\n        let answers = this.getAnswersForAddingQuestion(answersQuantity, answerType, questionNum),\r\n            answersString,\r\n            answerAddBtn;\r\n\r\n        for (let answer of answers) {\r\n            if (answersString === undefined) {\r\n                answersString = answer;\r\n            }\r\n            else {\r\n                answersString += answer;\r\n            }\r\n        }\r\n\r\n        if (answers.length >= answersQuantityMaxLimit ||\r\n            answerType === '3' || answerType === '4') {\r\n            answerAddBtn = this.contentCl.getAnswerAddBtn(true);\r\n        }\r\n        else {\r\n            answerAddBtn = this.contentCl.getAnswerAddBtn(false);\r\n        }\r\n\r\n        return this.contentCl.getQuestion(questionNum, answerType, answerAddBtn, answersString, this.contentCl.getAnswerTypeSelect(answerType));\r\n    }\r\n\r\n    /**\r\n     * Возвращает массив с DOMString вариантами ответов у нового вопроса.\r\n     * \r\n     * @param {number} answersQuantity количество вариантов ответа в новом вопросе.\r\n     * @param {string} answerType тип вариантов ответа в добавляемом вопросе.\r\n     * @param {string} questionNum порядковый номер добавляемого вопроса.\r\n     */\r\n    getAnswersForAddingQuestion(answersQuantity = 1, answerType = '1', questionNum) {\r\n        let answers = [];\r\n\r\n        if (answerType === '1' || answerType === '2') {\r\n            for (let answerNum = 0; answerNum < Number(answersQuantity); answerNum++) {\r\n                if (answerNum >= 6) {\r\n                    break;\r\n                }\r\n                answers[answers.length] = this.answerCl.getAnswerItem(answerType, questionNum, answerNum);\r\n            }\r\n        }\r\n        else {\r\n            if (answerType === '3' || answerType === '4') {\r\n                answers[0] = this.answerCl.getAnswerItem(answerType, questionNum);\r\n            }\r\n        }\r\n\r\n        return answers;\r\n    }\r\n\r\n    /**\r\n     * Показывает окно с дополнительными параметрами при добавлении вопроса.\r\n     */\r\n    showOrCloseQuestionAddParams() {\r\n        const addBtnWrapper = this.page.content.getElementsByClassName('js-test-question-add-btn-wrapper')[0];\r\n        addBtnWrapper.classList.toggle('test_create_bd-question-add-btn--more-active');\r\n    }\r\n\r\n    /**\r\n     * Удаляет вопрос, заменяя его на сообщение с возможностью восстановления.\r\n     * \r\n     * @param {object} question вопрос.\r\n     */\r\n    deleteQuestion(target) {\r\n        let question = this.surfacingToQuestion(target);\r\n\r\n        if (!question.classList.contains('test_create_bd-question-deleted')) {\r\n            question.classList.add('test_create_bd-question-deleted');\r\n        }\r\n\r\n        question.insertAdjacentHTML('beforeEnd', this.contentCl.getQuestionDeleteMessage());\r\n\r\n        this.updateQuestionDeleteTime(question, 7);\r\n    }\r\n\r\n    /**\r\n     * Стирает блок вопроса с DOM и перезаписывает системные атрибуты у оставшихся элементов.\r\n     * \r\n     * @param {*} question вопрос.\r\n     */\r\n    removeQuestion(question) {\r\n        question.remove();\r\n\r\n        let questionNum = 1;\r\n        for (let question of this.questions) {\r\n\r\n            question.dataset.questionNum = questionNum;\r\n            question.getElementsByClassName('js-test-create-question-title')[0].placeholder = `Вопрос №${questionNum}`;\r\n\r\n            let answerNum = 1;\r\n            for (let answer of question.getElementsByClassName('js-test-question-answer')) {\r\n\r\n                if (question.dataset.answersType === '1' || question.dataset.answersType === '2') {\r\n                    answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].id = `answer${questionNum}${answerNum}`;\r\n                    answer.getElementsByClassName('js-test-question-answer-choice-label')[0].setAttribute('for', `answer${questionNum}${answerNum}`);\r\n\r\n                    if (question.dataset.answersType === '1') {\r\n                        answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].name = `answerCheck${questionNum}`;\r\n                    }\r\n                    if (question.dataset.answersType === '2') {\r\n                        answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].name = `answerRadio${questionNum}`;\r\n                    }\r\n                }\r\n\r\n                answerNum++;\r\n            }\r\n\r\n            questionNum++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Обновляет значение таймера в блоке удаления вопроса.\r\n     * Когда результат будет равен 0, вопрос удаляется.\r\n     * \r\n     * @param {*} question вопрос.\r\n     * @param {number} time оставшееся время на восстановление вопроса.\r\n     */\r\n    updateQuestionDeleteTime(question, time) {\r\n        let timer = new _timer__WEBPACK_IMPORTED_MODULE_1__[\"Timer\"](),\r\n            result = question.getElementsByClassName('js-test-create-question-deleted-message-time')[0];\r\n\r\n        if (question.classList.contains('test_create_bd-question-deleted')) {\r\n            time = timer.countDown(time, 0);\r\n            result.innerText = time;\r\n\r\n            setTimeout(() => this.updateQuestionDeleteTime(question, time), 1000);\r\n\r\n            if (time === 0) {\r\n                this.removeQuestion(question);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Восстанавливает удалённый вопрос.\r\n     * \r\n     * @param {object} target элемент на котором произошло событие.\r\n     */\r\n    restoreQuestion(target) {\r\n        let question = this.surfacingToQuestion(target);\r\n\r\n        question.getElementsByClassName('js-test-create-question-deleted-message')[0].remove()\r\n\r\n        if (question.classList.contains('test_create_bd-question-deleted')) {\r\n            question.classList.remove('test_create_bd-question-deleted');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Отвечает за обработку введенного значения в поле.\r\n     * \r\n     * @param {object} event событие.\r\n     */\r\n    inputToQuestion(event) {\r\n        this.page.fieldCl.autoHeightChange(event, 10, 10, '36px');\r\n\r\n        let inp = event.target,\r\n            inpWrapper = inp.parentElement;\r\n\r\n        this.page.fieldCl.checkValueLengthAndTakeAction(event, inpWrapper);\r\n    }\r\n\r\n    /**\r\n     * Вслытие с element до вопроса.\r\n     * \r\n     * @param {object} element элемент с которого произвоидтся всплытие.\r\n     */\r\n    surfacingToQuestion(element) {\r\n        while (element !== document) {\r\n            if (element !== null) {\r\n                if (element.classList.contains('js-test-question')) {\r\n                    return element;\r\n                }\r\n                element = element.parentNode;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n        for (let question of this.questions) {\r\n\r\n            // Вешает обработчик события на поле для вопроса, для обработки ввода\r\n            const questionInp = question.getElementsByClassName('js-test-create-question-title')[0];\r\n            questionInp.oninput = (event) => this.inputToQuestion(event);\r\n\r\n            // Вешает обработчик события input на соответствующий тег у селекта\r\n            let answerTypeSelectValueInp = question.getElementsByClassName('select_hd-value--inp')[0];\r\n            answerTypeSelectValueInp.oninput = () => this.answerCl.changeAnswerType(question);\r\n\r\n            // Вешает обработчик кнопки выбора правильного варианта ответа\r\n            let answerChooseInp = question.getElementsByClassName('js-test-question-answer-choice-inp')[0];\r\n            if (answerChooseInp !== undefined) {\r\n                answerChooseInp.onchange = () => this.answerCl.chooseAnAnswer(question.getElementsByClassName('js-test-question-answer')[0], question);\r\n            }\r\n\r\n            // Вешает обработчик события метода загрзуки изображения вопроса\r\n            question.getElementsByClassName('js-test-create-question-image-inp')[0].onchange = (event) => this.loadImage(event);\r\n\r\n            // Вешает обработчик события click на вопрос для делегирования\r\n            question.onclick = (event) => this.delegationQuestionCl.callAction(event);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/question/question.js?");

/***/ }),

/***/ "./src/js/question/questionContent.js":
/*!********************************************!*\
  !*** ./src/js/question/questionContent.js ***!
  \********************************************/
/*! exports provided: QuestionContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QuestionContent\", function() { return QuestionContent; });\nclass QuestionContent {\r\n\r\n    /**\r\n     * Возвращает DOMString сформированного вопроса.\r\n     * \r\n     * @param {number} questionNum номер вопроса.\r\n     * @param {string} answerType тип варианта ответа.\r\n     * @param {string} answerAddBtn кнопка добавления ответа. \r\n     * @param {string} answersString строка с добавлямыми вместе с вопросом вариантами ответов.\r\n     * @param {string} answerTypeSelect кнопка для выбора варианта ответа (select) у вопроса.\r\n     */\r\n    getQuestion(questionNum, answerType, answerAddBtn, answersString, answerTypeSelect) {\r\n        return `<div class=\"test_create_bd-question js-test-question\" data-question-num=\"${questionNum}\" data-answers-type=\"${answerType}\">\r\n        <div class=\"test_create_bd-question_bd js-test-question-body\">\r\n            <div class=\"test_create_bd-question-col1\">\r\n                <div class=\"test_create_bd-question-col1-row\">\r\n                    <button class=\"test_create_bd-question-col1-row--btn btn i-cross js-test-create-question-del-btn\" data-question-action=\"deleteQuestion\"></button>\r\n                    <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"false\">\r\n                        <textarea class=\"test_create_bd-question-title--inp inp js-inp js-test-create-question-title\" name=\"question\" type=\"text\" data-characters-max-limit-value=\"250\" placeholder=\"Вопрос №${questionNum}\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-image\">\r\n                    <div class=\"test_create_bd-question-col1-image\">\r\n                        <button class=\"test_create_bd-question-img--del-btn i-cross btn js-test-question-img-del-btn\" data-question-action=\"deleteImage\"></button>\r\n                        <img class=\"test_create_bd-question--img js-test-question-img\" data-action=\"show\" data-run-in-frame=\"photoFrame\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"test_create_bd-question-col1-row test_create_bd-question-answers js-test-question-answers\">${answersString}</div>\r\n                <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-add-answer\">${answerAddBtn}</div>\r\n            </div>\r\n            <div class=\"test_create_bd-question-col2\">\r\n                <label class=\"test_create_bd-question-col2--btn btn i-image\">\r\n                    <input class=\"test_create_bd-question-col2--inp js-test-create-question-image-inp\" type=\"file\" accept=\"image/*\">\r\n                </label>\r\n                ${answerTypeSelect}\r\n            </div>\r\n        </div>\r\n    </div>`;\r\n    }\r\n\r\n    /**\r\n     * Возвращает DOMString кнопки выбора (select) варианта ответа.\r\n     * \r\n     * @param {string} answerType тип варианта ответа.\r\n     */\r\n    getAnswerTypeSelect(answerType) {\r\n        let selectValue;\r\n\r\n        switch (answerType) {\r\n            case '1':\r\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\r\n                </div>\r\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\r\n                break;\r\n\r\n            case '2':\r\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-radiobox\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Одиночный выбор</div>\r\n                </div>\r\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\r\n                break;\r\n\r\n            case '3':\r\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-text\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Текстовый ответ</div>\r\n                </div>\r\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\r\n                break;\r\n\r\n            case '4':\r\n                selectValue = `<div class=\"select_hd-value js-select-value\" data-select-option-value=\"${answerType}\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-number\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Числовой ответ</div>\r\n                </div>\r\n                <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"${answerType}\">`;\r\n                break;\r\n        }\r\n\r\n        let select =\r\n            `<div class=\"test_create_bd-question--select select js-select js-test-create-answer-type-select\">\r\n            <button class=\"test_create_bd-question--select_hd select_hd js-select-head\">\r\n                ${selectValue}\r\n                <div class=\"select_hd--icon i-down-arrow\"></div>\r\n            </button>\r\n            <div class=\"select_bd\">\r\n            <button class=\"select_bd-option\" data-select-option=\"1\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\r\n            </button>\r\n            <button class=\"select_bd-option\" data-select-option=\"2\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-radiobox\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Одиночный выбор</div>\r\n            </button>\r\n            <button class=\"select_bd-option\" data-select-option=\"3\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-text\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Текстовый ответ</div>\r\n            </button>\r\n            <button class=\"select_bd-option\" data-select-option=\"4\">\r\n                <div class=\"test_create_bd-question--select-option--icon i-number\"></div>\r\n                <div class=\"test_create_bd-question--select-option--txt\">Числовой ответ</div>\r\n            </button>\r\n            </div>\r\n            </div>`;\r\n\r\n        return select;\r\n    }\r\n\r\n    /**\r\n     * Возвращает DOMString сообщения об удалении вопроса.\r\n     */\r\n    getQuestionDeleteMessage() {\r\n        return `<div class=\"test_create_bd-question-deleted-mess js-test-create-question-deleted-message\">\r\n        <p>Вопрос будет удалён через <span class=\"test_create_bd-question-deleted-mess--time js-test-create-question-deleted-message-time\">7</span>.</p>\r\n        <button class=\"test_create_bd-question-deleted-mess--btn btn-icon js-test-create-question-restore-btn\" data-question-action=\"restoreQuestion\">Восстановить</button>\r\n        </div>`;\r\n    }\r\n\r\n    /**\r\n     * Возвращает DOMString кнпоки добавления варианта ответа. \r\n     * \r\n     * @param {boolean} isDisabled опредеяет является ли кнопки кликабельной. true - отключена, false - включена.\r\n     */\r\n    getAnswerAddBtn(isDisabled) {\r\n        if (isDisabled) {\r\n            return `<button class=\"test_create_bd-question-answer-add--btn btn btn-2 btn-disable js-test-create-answer-add-btn\" disabled>\r\n            <span class=\"i-plus\"></span>\r\n            <span class=\"txt\">Вариант</span>\r\n            </button>`;\r\n        }\r\n        else {\r\n            return `<button class=\"test_create_bd-question-answer-add--btn btn btn-2 js-test-create-answer-add-btn\" data-answer-action=\"addAnswer\">\r\n            <span class=\"i-plus\"></span>\r\n            <span class=\"txt\">Вариант</span>\r\n            </button>`;\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/question/questionContent.js?");

/***/ }),

/***/ "./src/js/search/search.js":
/*!*********************************!*\
  !*** ./src/js/search/search.js ***!
  \*********************************/
/*! exports provided: Search */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Search\", function() { return Search; });\n/* harmony import */ var _searchContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./searchContent */ \"./src/js/search/searchContent.js\");\n\r\n\r\nclass Search {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.contentCl = new _searchContent__WEBPACK_IMPORTED_MODULE_0__[\"SearchContent\"]();\r\n    }\r\n\r\n    /**\r\n     * Сбрасывает заполненные фильтры.\r\n     */\r\n    discardFilter() {\r\n        let subject = this.page.content.getElementsByClassName('js-search-filter-subject')[0],\r\n            date = this.page.content.getElementsByClassName('js-search-filter-date')[0];\r\n\r\n        subject.getElementsByClassName('js-select-value')[0].innerHTML = '';\r\n        subject.getElementsByClassName('js-select-value')[0].dataset.selectOptionValue = 0;\r\n\r\n        date.value = '';\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку страницы.\r\n     * \r\n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n     */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n\r\n        this.setHandlers();\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n        let discardBtn = this.page.content.getElementsByClassName('js-search-filter-discard')[0];\r\n        discardBtn.onclick = () => this.discardFilter();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/search/search.js?");

/***/ }),

/***/ "./src/js/search/searchContent.js":
/*!****************************************!*\
  !*** ./src/js/search/searchContent.js ***!
  \****************************************/
/*! exports provided: SearchContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SearchContent\", function() { return SearchContent; });\nclass SearchContent {\r\n    getPage() {\r\n        return `<div class=\"cnt_bd-search\">\r\n        <div class=\"search_hd\">\r\n          <div class=\"search_hd-inp_wr inp_wr js-inp-wrapper\" data-characters-limit=\"true\"\r\n            data-auto-hang-handler=\"true\">\r\n            <input class=\"search_hd--inp inp js-inp\" name=\"search\" data-characters-max-limit-value=\"100\" type=\"text\"\r\n              placeholder=\"Поиск\">\r\n            <button class=\"search_hd-inp--btn btn btn-1\">\r\n              <span class=\"i-search\"></span>\r\n            </button>\r\n            <span class=\"inp-limit--value js-inp-limit-value\">100</span>\r\n          </div>\r\n          <div class=\"search_hd-filter\">\r\n            <button class=\"search_hd-filter--discard btn btn-2 js-search-filter-discard\">Сбросить</button>\r\n            <div class=\"search_hd-filter-subject select js-select js-search-filter-subject\" title=\"Предмет теста\">\r\n              <button class=\"test-create_bd-select_hd js-select-head select_hd\">\r\n                <div class=\"select_hd-value js-select-value\" data-select-option-value=\"0\"></div>\r\n                <div class=\"select_hd--icon i-down-arrow\"></div>\r\n              </button>\r\n              <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"0\">\r\n              <div class=\"select_bd\">\r\n                <button class=\"select_bd-option\" data-select-option=\"1\">\r\n                  <div class=\"select-subject-option--square subject-bcg-1\"></div>\r\n                  <div>Математика</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"2\">\r\n                  <div class=\"select-subject-option--square subject-bcg-1-1\"></div>\r\n                  <div>Алгебра</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"3\">\r\n                  <div class=\"select-subject-option--square subject-bcg-1-2\"></div>\r\n                  <div>Геометрия</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"4\">\r\n                  <div class=\"select-subject-option--square subject-bcg-1-3\"></div>\r\n                  <div>Информатика</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"5\">\r\n                  <div class=\"select-subject-option--square subject-bcg-2\"></div>\r\n                  <div>Родной язык</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"6\">\r\n                  <div class=\"select-subject-option--square subject-bcg-2-1\"></div>\r\n                  <div>Литература</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"7\">\r\n                  <div class=\"select-subject-option--square subject-bcg-2-2\"></div>\r\n                  <div>Иностранный язык</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"8\">\r\n                  <div class=\"select-subject-option--square subject-bcg-3\"></div>\r\n                  <div>География</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"9\">\r\n                  <div class=\"select-subject-option--square subject-bcg-3-1\"></div>\r\n                  <div>Биология</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"10\">\r\n                  <div class=\"select-subject-option--square subject-bcg-3-2\"></div>\r\n                  <div>Физика</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"11\">\r\n                  <div class=\"select-subject-option--square subject-bcg-3-3\"></div>\r\n                  <div>Химия</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"12\">\r\n                  <div class=\"select-subject-option--square subject-bcg-3-4\"></div>\r\n                  <div>Астрономия</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"13\">\r\n                  <div class=\"select-subject-option--square subject-bcg-4\"></div>\r\n                  <div>История</div>\r\n                </button>\r\n                <button class=\"select_bd-option\" data-select-option=\"14\">\r\n                  <div class=\"select-subject-option--square subject-bcg-4-1\"></div>\r\n                  <div>Обществознание</div>\r\n                </button>\r\n                <button class=\"select_bd-option select_bd-option-last\" data-select-option=\"0\">\r\n                  <div class=\"select-subject-option--square subject-bcg-0\"></div>\r\n                  <div>Другой</div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"search_hd-filter-date date-inp_wr\">\r\n              <span class=\"date-inp--icon inp--icon i-calendar\"></span>\r\n              <input class=\"inp date--inp js-date-inp js-search-filter-date\" type=\"text\" placeholder=\"03.07.2020\"\r\n                title=\"Дата создания теста\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"search_bd\">\r\n          <div class=\"cnt-block\">\r\n            <div class=\"cnt-block_hd\">\r\n              <div class=\"cnt-block_hd-title\">Результаты поиска</div>\r\n            </div>\r\n            <div class=\"cnt-block_bd search-result_bd\">\r\n              <span class=\"cnt-block_bd--mess\">Ничего не найдено.</span>\r\n              <div class=\"search-result-users\"></div>\r\n              <div class=\"search-result-tests\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/search/searchContent.js?");

/***/ }),

/***/ "./src/js/select.js":
/*!**************************!*\
  !*** ./src/js/select.js ***!
  \**************************/
/*! exports provided: Select */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Select\", function() { return Select; });\nclass Select {\r\n    constructor() {\r\n        this.items = document.getElementsByClassName('js-select');\r\n    }\r\n\r\n    openOrClose(currentSelect) {\r\n        currentSelect.classList.toggle('active');\r\n    }\r\n\r\n    selectItem(currentSelect, currentOption, isLoading = true) {\r\n        let optionValue = currentOption.innerHTML;\r\n        currentSelect.getElementsByClassName('select_hd-value')[0].innerHTML = optionValue;\r\n        currentSelect.getElementsByClassName('select_hd-value')[0].dataset.selectOptionValue = currentOption.dataset.selectOption;\r\n\r\n        let valueInp = currentSelect.getElementsByClassName('js-select-value-inp')[0],\r\n            event = new Event('input');\r\n\r\n        valueInp.value = currentOption.dataset.selectOption;\r\n        valueInp.dispatchEvent(event);\r\n\r\n        if (!isLoading) {\r\n            this.openOrClose(currentSelect);\r\n        }\r\n    }\r\n\r\n    setHandlers() {\r\n        for (let item of this.items) {\r\n            item.getElementsByClassName('js-select-head')[0].onclick = () => this.openOrClose(item);\r\n\r\n            for (let option of item.getElementsByClassName('select_bd-option')) {\r\n                option.addEventListener('click', () => this.selectItem(item, option, false));\r\n\r\n                if (option.classList.contains('option-choice')) {\r\n                    this.selectItem(item, option, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/select.js?");

/***/ }),

/***/ "./src/js/service-settings/delegationServiceSettings.js":
/*!**************************************************************!*\
  !*** ./src/js/service-settings/delegationServiceSettings.js ***!
  \**************************************************************/
/*! exports provided: DelegationServiceSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DelegationServiceSettings\", function() { return DelegationServiceSettings; });\nclass DelegationServiceSettings {\r\n    constructor (serviceSettingsCl) {\r\n        this.serviceSettingsCl = serviceSettingsCl;\r\n    }\r\n\r\n    /**\r\n     * Возвращает ближайший target от клика с data-settings-service-action атрибутом.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    getDesiredTarget(event) {\r\n        let target = event.target;\r\n\r\n        // Поиск элемента с data-атрибутами\r\n        while (target !== event.currentTarget) {\r\n\r\n            // Если target == null, значит был удалён элемент из DOM дерева.\r\n            if (target !== null) {\r\n                if (target.hasAttribute('data-settings-service-action')) {\r\n                    return target;\r\n                }\r\n                target = target.parentNode;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Вызывает метод указанный в data-settings-service-action-action атрибуте из класса settingsService.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    callAction(event) {\r\n        const target = this.getDesiredTarget(event);\r\n\r\n        if (target) {\r\n            const settingsServiceAction = target.dataset.settingsServiceAction;\r\n\r\n            if (settingsServiceAction) {\r\n                this.serviceSettingsCl[settingsServiceAction](target, event);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/service-settings/delegationServiceSettings.js?");

/***/ }),

/***/ "./src/js/service-settings/serviceSettings.js":
/*!****************************************************!*\
  !*** ./src/js/service-settings/serviceSettings.js ***!
  \****************************************************/
/*! exports provided: ServiceSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceSettings\", function() { return ServiceSettings; });\n/* harmony import */ var _serviceSettingsContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serviceSettingsContent */ \"./src/js/service-settings/serviceSettingsContent.js\");\n/* harmony import */ var _delegationServiceSettings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./delegationServiceSettings */ \"./src/js/service-settings/delegationServiceSettings.js\");\n\r\n\r\n\r\n\r\nclass ServiceSettings {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.contentCl = new _serviceSettingsContent__WEBPACK_IMPORTED_MODULE_0__[\"ServiceSettingsContent\"]();\r\n        this.delegationServiceSettingsCl = new _delegationServiceSettings__WEBPACK_IMPORTED_MODULE_1__[\"DelegationServiceSettings\"](this);\r\n    }\r\n\r\n    /**\r\n     * Изменяет состояние тумблеров, в зависимости от примененных ранее настроек.\r\n     */\r\n    setSwitchStates() {\r\n        let bcgSolidColorToggle = this.page.content.getElementsByClassName('js-settings-service-appearance-img-solid-color-toggle')[0];\r\n        if (!this.page.backgroundImg.classList.contains('bd_bcg-active')) {\r\n            this.page.controlsCl.switchToggle(bcgSolidColorToggle);\r\n        }\r\n\r\n        let bcgBlurToggle = this.page.content.getElementsByClassName('js-settings-service-appearance-img-blur-toggle')[0];\r\n        if (this.page.backgroundImg.classList.contains('bd_bcg-blur')) {\r\n            this.page.controlsCl.switchToggle(bcgBlurToggle);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Изменяет фоновое изображение.\r\n     * \r\n     * @param {object} target элемент на котором сработало событие (родительский блок выбранного изображения).\r\n     */\r\n    changeBackgroundImage(target) {\r\n        const imgNum = target.dataset.backgroundImgNum;\r\n\r\n        let bcgSelector = `bd_bcg-${imgNum}`;\r\n\r\n        for (let num = 1; 6 >= num; num++) {\r\n            if (this.page.backgroundImg.classList.contains(`bd_bcg-${num}`)) {\r\n                this.page.backgroundImg.classList.remove(`bd_bcg-${num}`);\r\n            }\r\n        }\r\n\r\n        this.page.backgroundImg.classList.add(bcgSelector);\r\n\r\n        if (!this.page.backgroundImg.classList.contains('bd_bcg-active')) {\r\n            this.page.backgroundImg.classList.add('bd_bcg-active');\r\n\r\n            let solidColorToggle = this.page.content.getElementsByClassName('js-settings-service-appearance-img-solid-color-toggle')[0];\r\n            if (solidColorToggle.classList.contains('toggle-active')) {\r\n                this.page.controlsCl.switchToggle(solidColorToggle);\r\n            }\r\n        }\r\n\r\n        // ToDo: Реализовать отправку изменений на сервер.\r\n    }\r\n\r\n    /**\r\n     * Выбирает размыто ли фоновое изображение.\r\n     * \r\n     * @param {object} target элемент на котором сработало событие (тумблер).\r\n     */\r\n    toggleBackgroundBlur(target) {\r\n        let toggleValue = target.getElementsByClassName('js-toggle-btn')[0].dataset.toggleValue;\r\n\r\n        if (toggleValue === 'true') {\r\n            if (!this.page.backgroundImg.classList.contains('bd_bcg-blur')) {\r\n                this.page.backgroundImg.classList.add('bd_bcg-blur');\r\n            }\r\n        }\r\n        else {\r\n            if (this.page.backgroundImg.classList.contains('bd_bcg-blur')) {\r\n                this.page.backgroundImg.classList.remove('bd_bcg-blur');\r\n            }\r\n        }\r\n\r\n        // ToDo: Реализовать отправку изменений на сервер.\r\n    }\r\n\r\n    /**\r\n     * Выбирает является ли сплошной цвет фоном.\r\n     * \r\n     * @param {object} target элемент на котором сработало событие (тумблер).\r\n     */\r\n    toggleBackgroundSolidColor(target) {\r\n        let toggleValue = target.getElementsByClassName('js-toggle-btn')[0].dataset.toggleValue;\r\n\r\n        if (toggleValue === 'true') {\r\n            if (this.page.backgroundImg.classList.contains('bd_bcg-active')) {\r\n                this.page.backgroundImg.classList.remove('bd_bcg-active');\r\n            }\r\n        }\r\n        else {\r\n            if (!this.page.backgroundImg.classList.contains('bd_bcg-active')) {\r\n                this.page.backgroundImg.classList.add('bd_bcg-active');\r\n            }\r\n        }\r\n\r\n        // ToDo: Реализовать отправку изменений на сервер.\r\n    }\r\n\r\n    /**\r\n    * Отвечает за загрузку страницы.\r\n    * \r\n    * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n    */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n\r\n        this.setHandlers();\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n\r\n        // Вешает обработчик события click на оберточный элемент страницы\r\n        this.page.content.getElementsByClassName('js-settings-bd')[0].onclick = (event) => this.delegationServiceSettingsCl.callAction(event);\r\n\r\n        // Изменяет состояние тумблеров, в зависимости от примененных ранее настроек\r\n        this.setSwitchStates();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/service-settings/serviceSettings.js?");

/***/ }),

/***/ "./src/js/service-settings/serviceSettingsContent.js":
/*!***********************************************************!*\
  !*** ./src/js/service-settings/serviceSettingsContent.js ***!
  \***********************************************************/
/*! exports provided: ServiceSettingsContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServiceSettingsContent\", function() { return ServiceSettingsContent; });\nclass ServiceSettingsContent {\r\n\r\n\tgetPage() {\r\n\t\treturn `<div class=\"cnt_bd-settings js-settings-bd\">\r\n    <div class=\"settings_hd\">\r\n      <div class=\"settings_hd-menu pivot-menu\">\r\n        <button class=\"settings_hd-menu--btn btn pivot-menu--btn js-link-btn\" data-link=\"/acconut/settings\"\r\n          data-link-page-num=\"6\" data-action=\"goToPage\" data-run-in-frame=\"true\">Аккаунт</button>\r\n        <button class=\"settings_hd-menu--btn btn pivot-menu--btn js-link-btn pivot-menu--btn-active\"\r\n          data-link=\"/acconut/settings\" data-link-page-num=\"7\" data-action=\"goToPage\"\r\n          data-run-in-frame=\"true\">Сервис</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"settings_bd\">\r\n      <div class=\"cnt-block\">\r\n        <div class=\"cnt-block_hd\">\r\n          <div class=\"cnt-block_hd-title\">Внешний вид</div>\r\n        </div>\r\n        <div class=\"settings-service-appearance-block_bd cnt-block_bd\">\r\n          <div class=\"settings-service-appearance-label\">\r\n            <span class=\"label-txt\">Фон</span>\r\n            <div class=\"settings-service-appearance-bcgds\">\r\n              <div class=\"settings-service-appearance-bcg\"\r\n                data-background-img-num=\"1\" data-settings-service-action=\"changeBackgroundImage\">\r\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\r\n                  src=\"./img/background1.jpg\">\r\n              </div>\r\n              <div class=\"settings-service-appearance-bcg\"\r\n                data-background-img-num=\"2\" data-settings-service-action=\"changeBackgroundImage\">\r\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\r\n                  src=\"./img/background2.jpg\">\r\n              </div>\r\n              <div class=\"settings-service-appearance-bcg\"\r\n                data-background-img-num=\"3\" data-settings-service-action=\"changeBackgroundImage\">\r\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\r\n                  src=\"./img/background3.jpg\">\r\n              </div>\r\n              <div class=\"settings-service-appearance-bcg\"\r\n                data-background-img-num=\"4\" data-settings-service-action=\"changeBackgroundImage\">\r\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\r\n                  src=\"./img/background4.jpg\">\r\n              </div>\r\n              <div class=\"settings-service-appearance-bcg\"\r\n                data-background-img-num=\"5\" data-settings-service-action=\"changeBackgroundImage\">\r\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\r\n                  src=\"./img/background5.jpg\">\r\n              </div>\r\n              <div class=\"settings-service-appearance-bcg\"\r\n                data-background-img-num=\"6\" data-settings-service-action=\"changeBackgroundImage\">\r\n                <img class=\"settings-service-appearance-bcg--img js-settings-service-appearance-img\"\r\n                  src=\"./img/background6.jpg\">\r\n              </div>\r\n            </div>\r\n            <label\r\n              class=\"settings-service-appearance-bcg-toggle toggle js-toggle js-settings-service-appearance-img-solid-color-toggle\"\r\n              data-settings-service-action=\"toggleBackgroundSolidColor\">\r\n              <button class=\"toggle--btn js-toggle-btn\" data-toggle-value=\"false\">\r\n                <div class=\"toggle--lever js-toggle-lever\"></div>\r\n              </button>\r\n              <span class=\"toggle--txt js-toggle-txt\">Сплошной цвет</span>\r\n            </label>\r\n            <label\r\n              class=\"settings-service-appearance-bcg-toggle toggle js-toggle js-settings-service-appearance-img-blur-toggle\"\r\n              data-settings-service-action=\"toggleBackgroundBlur\">\r\n              <button class=\"toggle--btn js-toggle-btn\" data-toggle-value=\"true\">\r\n                <div class=\"toggle--lever js-toggle-lever\"></div>\r\n              </button>\r\n              <span class=\"toggle--txt js-toggle-txt\">Размытие</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>`;\r\n\t}\r\n}\n\n//# sourceURL=webpack:///./src/js/service-settings/serviceSettingsContent.js?");

/***/ }),

/***/ "./src/js/sidebar.js":
/*!***************************!*\
  !*** ./src/js/sidebar.js ***!
  \***************************/
/*! exports provided: Sidebar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sidebar\", function() { return Sidebar; });\nclass Sidebar {\r\n    constructor() {\r\n        this.body = document.getElementById('body');\r\n        this.menu = this.body.getElementsByClassName('sidebar')[0];\r\n    }\r\n\r\n    openOrClose() {\r\n        this.body.classList.toggle('sidebar-active');\r\n\r\n        let btn = this.menu.getElementsByClassName('sidebar_hd--btn')[0];\r\n        btn.classList.toggle('i-arrow-right');\r\n        btn.classList.toggle('i-arrow-left');\r\n    }\r\n\r\n    darkThemeToggle() {\r\n        this.body.classList.toggle('dark-theme');\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/sidebar.js?");

/***/ }),

/***/ "./src/js/subject.js":
/*!***************************!*\
  !*** ./src/js/subject.js ***!
  \***************************/
/*! exports provided: Subject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Subject\", function() { return Subject; });\nclass Subject {\r\n    constructor() {\r\n        this.list = [\r\n            {\r\n                num: '0',\r\n                name: 'Другой',\r\n                color: 'subject-bcg-0'\r\n            },\r\n            {\r\n                num: '1',\r\n                name: 'Математика',\r\n                color: 'subject-bcg-1'\r\n            },\r\n            {\r\n                num: '2',\r\n                name: 'Алгебра',\r\n                color: 'subject-bcg-1-1'\r\n            },\r\n            {\r\n                num: '3',\r\n                name: 'Геометрия',\r\n                color: 'subject-bcg-1-2'\r\n            },\r\n            {\r\n                num: '4',\r\n                name: 'Информатика',\r\n                color: 'subject-bcg-1-3'\r\n            },\r\n            {\r\n                num: '5',\r\n                name: 'Родной язык',\r\n                color: 'subject-bcg-2'\r\n            },\r\n            {\r\n                num: '6',\r\n                name: 'Литература',\r\n                color: 'subject-bcg-2-1'\r\n            },\r\n            {\r\n                num: '7',\r\n                name: 'Иностранный язык',\r\n                color: 'subject-bcg-2-2'\r\n            },\r\n            {\r\n                num: '8',\r\n                name: 'География',\r\n                color: 'subject-bcg-3'\r\n            },\r\n            {\r\n                num: '9',\r\n                name: 'Биология',\r\n                color: 'subject-bcg-3-1'\r\n            },\r\n            {\r\n                num: '10',\r\n                name: 'Физика',\r\n                color: 'subject-bcg-3-2'\r\n            },\r\n            {\r\n                num: '11',\r\n                name: 'Химия',\r\n                color: 'subject-bcg-3-3'\r\n            },\r\n            {\r\n                num: '12',\r\n                name: 'Астрономия',\r\n                color: 'subject-bcg-3-4'\r\n            },\r\n            {\r\n                num: '13',\r\n                name: 'История',\r\n                color: 'subject-bcg-4'\r\n            },\r\n            {\r\n                num: '14',\r\n                name: 'Обществознание',\r\n                color: 'subject-bcg-4-1'\r\n            }\r\n        ];\r\n    }\r\n\r\n    getShortName(subjectNum) {\r\n        let result = '';\r\n\r\n        if (subjectNum !== '0') {\r\n            for (let subject of this.list) {\r\n                if (subject.num === subjectNum) {\r\n                    let subjectNameWords = subject.name.split(' ');\r\n\r\n                    result = subjectNameWords[0].split('')[0];\r\n\r\n                    if (subjectNameWords.length > 1) {\r\n                        result += subjectNameWords[1].split('')[0];\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/subject.js?");

/***/ }),

/***/ "./src/js/test-result-for-creator/testResultForCreator.js":
/*!****************************************************************!*\
  !*** ./src/js/test-result-for-creator/testResultForCreator.js ***!
  \****************************************************************/
/*! exports provided: TestResultForCreator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForCreator\", function() { return TestResultForCreator; });\n/* harmony import */ var _testResultForCreatorContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./testResultForCreatorContent */ \"./src/js/test-result-for-creator/testResultForCreatorContent.js\");\n\r\n\r\nclass TestResultForCreator {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.contentCl = new _testResultForCreatorContent__WEBPACK_IMPORTED_MODULE_0__[\"TestResultForCreatorContent\"]();\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку страницы.\r\n     * \r\n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n     */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-creator/testResultForCreator.js?");

/***/ }),

/***/ "./src/js/test-result-for-creator/testResultForCreatorContent.js":
/*!***********************************************************************!*\
  !*** ./src/js/test-result-for-creator/testResultForCreatorContent.js ***!
  \***********************************************************************/
/*! exports provided: TestResultForCreatorContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForCreatorContent\", function() { return TestResultForCreatorContent; });\nclass TestResultForCreatorContent {\r\n    getPage() {\r\n        return ``;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-creator/testResultForCreatorContent.js?");

/***/ }),

/***/ "./src/js/test-result-for-user/testResultForUser.js":
/*!**********************************************************!*\
  !*** ./src/js/test-result-for-user/testResultForUser.js ***!
  \**********************************************************/
/*! exports provided: TestResultForUser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForUser\", function() { return TestResultForUser; });\n/* harmony import */ var _testResultForUserContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./testResultForUserContent */ \"./src/js/test-result-for-user/testResultForUserContent.js\");\n\r\n\r\nclass TestResultForUser {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.contentCl = new _testResultForUserContent__WEBPACK_IMPORTED_MODULE_0__[\"TestResultForUserContent\"]();\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку страницы.\r\n     * \r\n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n     */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-user/testResultForUser.js?");

/***/ }),

/***/ "./src/js/test-result-for-user/testResultForUserContent.js":
/*!*****************************************************************!*\
  !*** ./src/js/test-result-for-user/testResultForUserContent.js ***!
  \*****************************************************************/
/*! exports provided: TestResultForUserContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestResultForUserContent\", function() { return TestResultForUserContent; });\nclass TestResultForUserContent {\r\n    getPage() {\r\n        return `<div class=\"cnt_bd-test\">\r\n        <div class=\"test_hd js-test-head\">\r\n          <div class=\"test_hd-info\">\r\n            <div class=\"test-subject-logo_wr\">\r\n              <div class=\"test-subject-logo js-test-subject-logo\"></div>\r\n            </div>\r\n            <div class=\"test_hd-title\">\r\n              <h3 class=\"test_hd-title--heading\">\r\n                <a class=\"link js-test-title\" href=\"#\"></a>\r\n              </h3>\r\n              <p class=\"test_hd-title--description js-test-description\"></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"test_hd-author\">\r\n            <a class=\"link js-test-author\" href=\"#\"></a>\r\n          </div>\r\n          <div class=\"test_hd-dsc\">\r\n            <div class=\"test_hd-dsc-subject-name js-test-subject\" data-test-subcject-num=\"1\"></div>\r\n            <div class=\"test_hd-dsc-time\">\r\n              <span class=\"test_hd-dsc-time--txt\">Время на прохождение:</span>\r\n              <span class=\"test_hd-dsc-time--value js-test-time\"></span>\r\n            </div>\r\n            <div class=\"raiting\">\r\n              <div class=\"raiting-stars\">\r\n                <div class=\"raiting-stars--scale\"></div>\r\n                <div class=\"raiting-star star-1\"><span class=\"i-star2\"></span></div>\r\n                <div class=\"raiting-star star-2\"><span class=\"i-star2\"></span></div>\r\n                <div class=\"raiting-star star-3\"><span class=\"i-star2\"></span></div>\r\n                <div class=\"raiting-star star-4\"><span class=\"i-star2\"></span></div>\r\n                <div class=\"raiting-star star-5\"><span class=\"i-star2\"></span></div>\r\n              </div>\r\n              <div class=\"raiting-star--voted js-test-raiting-voted\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"test_bd test-result_bd\">\r\n          <div class=\"test-result-short\">\r\n            <div class=\"test-result-short_bd\">\r\n              <div class=\"test-result-short-row\">\r\n                <span>Количество вопросов:</span>\r\n                <span class=\"test-result-short-row--value\"></span>\r\n              </div>\r\n              <div class=\"test-result-short-row\">\r\n                <span>Верно отвеченных вопросов:</span>\r\n                <span class=\"test-result-short-row--value\"></span>\r\n              </div>\r\n              <div class=\"test-result-short-row\">\r\n                <span>Неверно отвеченных вопросов:</span>\r\n                <span class=\"test-result-short-row--value\"></span>\r\n              </div>\r\n              <div class=\"test-result-short-row\">\r\n                <span>Вопросы без ответа:</span>\r\n                <span class=\"test-result-short-row--value\"></span>\r\n              </div>\r\n              <div class=\"test-result-short-row\">\r\n                <span>Время прохождения:</span>\r\n                <span class=\"test-result-short-row--value\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"test-attachments test-result-attachments js-test-attachments\">\r\n            <div class=\"test-attachments-file js-test-attachment\">\r\n              <img class=\"test-attachments-file--img js-test-attachment-img\"\r\n                src=\"https://reshenie.club/ulp/matematika/5klass/a_merzljak_i_dr/zadanie_287_efr.png\">\r\n              <div class=\"test-attachments-file-info\">\r\n                <a class=\"link js-test-attachment-name\" href=\"#\"\r\n                  title=\"image_2020-05-06_22-01-53.png\">image_2020-05-06_22-01-53.png</a>\r\n                <span class=\"size\">27.264 KB</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"test-attachments-file js-test-attachment\">\r\n              <span class=\"i-file icon\"></span>\r\n              <div class=\"test-attachments-file-info\">\r\n                <a class=\"link js-test-attachment-name\" href=\"#\" title=\"HASP_LM_setup.zip\">HASP_LM_setup.zip</a>\r\n                <span class=\"size\">16725.998 KB</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"test-questions\">\r\n            <div class=\"test-question\" data-question-num=\"1\" data-answers-type=\"1\">\r\n              <div class=\"test-question_hd test-result-question_hd test-question-incorrect\">\r\n                <h4 class=\"test-question_hd--title\">Найти неизвестный множитель уравнения y · 4 = 12.</h4>\r\n              </div>\r\n              <img class=\"test-question--img js-test-question-img\"\r\n                src=\"https://reshenie.club/ulp/matematika/5klass/a_merzljak_i_dr/zadanie_287_efr.png\">\r\n              <div class=\"test-question-answers\">\r\n                <div class=\"test-question-answer test-result-answer-correct\" data-answer-num=\"1\"\r\n                  title=\"Правильный ответ\">\r\n                  <div class=\"test-question-answer-checkbox\">\r\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer11\" name=\"answerCheck1\" type=\"checkbox\"\r\n                      disabled checked>\r\n                    <label for=\"answer11\"></label>\r\n                  </div>\r\n                  <label class=\"test-question-answer--txt\" for=\"answer11\">3</label>\r\n                </div>\r\n                <div class=\"test-question-answer\" data-answer-num=\"2\">\r\n                  <div class=\"test-question-answer-checkbox\">\r\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer12\" name=\"answerCheck1\" type=\"checkbox\"\r\n                      disabled>\r\n                    <label for=\"answer12\"></label>\r\n                  </div>\r\n                  <label class=\"test-question-answer--txt\" for=\"answer12\">16</label>\r\n                </div>\r\n                <div class=\"test-question-answer\" data-answer-num=\"3\" title=\"Ваш ответ\">\r\n                  <div class=\"test-question-answer-checkbox\">\r\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer13\" name=\"answerCheck1\" type=\"checkbox\"\r\n                      disabled checked>\r\n                    <label for=\"answer13\"></label>\r\n                  </div>\r\n                  <label class=\"test-question-answer--txt\" for=\"answer13\">8</label>\r\n                </div>\r\n                <div class=\"test-question-answer\" data-answer-num=\"4\">\r\n                  <div class=\"test-question-answer-checkbox\">\r\n                    <input class=\"test-question-answer-checkbox--inp\" id=\"answer14\" name=\"answerCheck1\" type=\"checkbox\"\r\n                      disabled>\r\n                    <label for=\"answer14\"></label>\r\n                  </div>\r\n                  <label class=\"test-question-answer--txt\" for=\"answer14\">10</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"test-question\" data-question-num=\"2\" data-answers-type=\"2\">\r\n              <div class=\"test-question_hd test-result-question_hd test-question-correct\">\r\n                <h4 class=\"test-question_hd--title\">Чтобы умножить десятичную дробь на 10, 100, 1000 и т.д., надо ...\r\n                </h4>\r\n              </div>\r\n              <div class=\"test-question-answers\">\r\n                <div class=\"test-question-answer\" data-answer-num=\"1\">\r\n                  <div class=\"test-question-answer-radio\">\r\n                    <input class=\"test-question-answer-radio--inp\" id=\"answer21\" name=\"answerCheck2\" type=\"radio\"\r\n                      disabled>\r\n                    <label for=\"answer21\"></label>\r\n                  </div>\r\n                  <label class=\"test-question-answer--txt\" for=\"answer21\"> в этой дроби перенести запятую на столько\r\n                    цифр вправо, сколько чисел после запятой у первого множителя.</label>\r\n                </div>\r\n                <div class=\"test-question-answer test-result-answer-correct\" data-answer-num=\"2\"\r\n                  title=\"Вы ответили верно\">\r\n                  <div class=\"test-question-answer-radio\">\r\n                    <input class=\"test-question-answer-radio--inp\" id=\"answer22\" name=\"answerCheck2\" type=\"radio\"\r\n                      disabled checked>\r\n                    <label for=\"answer22\"></label>\r\n                  </div>\r\n                  <label class=\"test-question-answer--txt\" for=\"answer22\"> в этой дроби перенести запятую на столько\r\n                    цифр вправо, сколько нулей стоит в множителе после единицы</label>\r\n                </div>\r\n                <div class=\"test-question-answer\" data-answer-num=\"3\">\r\n                  <div class=\"test-question-answer-radio\">\r\n                    <input class=\"test-question-answer-radio--inp\" id=\"answer23\" name=\"answerCheck2\" type=\"radio\"\r\n                      disabled>\r\n                    <label for=\"answer23\"></label>\r\n                  </div>\r\n                  <label class=\"test-question-answer--txt\" for=\"answer23\">в этой дроби перенести запятую на столько цифр\r\n                    влево, сколько нулей стоит в множителе после единицы</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>`;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/test-result-for-user/testResultForUserContent.js?");

/***/ }),

/***/ "./src/js/test-сreate/testCreate.js":
/*!******************************************!*\
  !*** ./src/js/test-сreate/testCreate.js ***!
  \******************************************/
/*! exports provided: TestCreate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestCreate\", function() { return TestCreate; });\n/* harmony import */ var _subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../subject */ \"./src/js/subject.js\");\n/* harmony import */ var _fileLoad__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../fileLoad */ \"./src/js/fileLoad.js\");\n/* harmony import */ var _question_question__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../question/question */ \"./src/js/question/question.js\");\n/* harmony import */ var _testCreateContent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./testCreateContent */ \"./src/js/test-сreate/testCreateContent.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Класс создания теста.\r\n */\r\nclass TestCreate {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.attachments = [];\r\n\r\n        this.contentCl = new _testCreateContent__WEBPACK_IMPORTED_MODULE_3__[\"TestCreateContent\"]();\r\n        this.questionCl = new _question_question__WEBPACK_IMPORTED_MODULE_2__[\"Question\"](page);\r\n    }\r\n\r\n    /**\r\n     * Отвечает за выбор основного предмета теста.\r\n     * \r\n     * @param {object} select кнопка выбора (select) предмета теста.\r\n     */\r\n    selectSubject(select) {\r\n        let selectOptionData = select.getElementsByClassName('select_hd-value')[0].dataset.selectOptionValue,\r\n            logo = this.page.content.getElementsByClassName('js-test-subject-logo')[0],\r\n            subjectCl = new _subject__WEBPACK_IMPORTED_MODULE_0__[\"Subject\"]();\r\n\r\n        for (let subject of subjectCl.list) {\r\n            if (subject.num === selectOptionData) {\r\n                if (!logo.classList.contains(subject.color)) {\r\n                    logo.classList.add(subject.color);\r\n                    logo.innerText = subjectCl.getShortName(subject.num);\r\n                }\r\n            }\r\n            else {\r\n                if (logo.classList.contains(subject.color)) {\r\n                    logo.classList.remove(subject.color);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Выделяет ключевое слово.\r\n     * Написанное слово выделяется после нажатия клавиш \"Tab\", \"Space\", \"Enter\".\r\n     * \r\n     * @param {object} event объект события.\r\n     * @param {object} input поле для ввода.\r\n     */\r\n    highlightKeyword(event, input) {\r\n\r\n        // Проверят наличие ключевых слов в поле\r\n        if (!this.checkKeywordsQuantity(input)) {\r\n            if (event.code !== 'Backspace' && event.code !== 'Delete') {\r\n                event.preventDefault();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (event.code === 'Space' ||\r\n            event.code === 'Tab' ||\r\n            event.code === 'Semicolon' ||\r\n            event.code === 'Enter') {\r\n\r\n            if (event.code === 'Space' || event.code === 'Enter' || event.code === 'Semicolon') {\r\n                event.preventDefault();\r\n            }\r\n\r\n            let inputWords = input.textContent.split(';');\r\n\r\n            input.innerHTML = '';\r\n\r\n            for (let wordWithSemicolon of inputWords) {\r\n                for (let word of wordWithSemicolon.split(';')) {\r\n                    word = word.replace(/\\s+/g, '');\r\n\r\n                    if (word !== \";\" && word !== \"\") {\r\n                        input.insertAdjacentHTML('beforeend', `<span class=\"keyword js-test-create-keyword\" data-test-keyword-value=\"${word}\">${word};</span>`);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (input.textContent.trim().length > 0) {\r\n                let range = new Range();\r\n                range.setStartAfter(input.lastElementChild);\r\n                range.collapse(true);\r\n\r\n                let selection = document.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Проверяет наличие ключевых слов в поле для ввода.\r\n     * Возвращает true - если количество слов меньше 5 и false, если больше или равно. \r\n     * \r\n     * @param {object} input поле для ввода.\r\n     */\r\n    checkKeywordsQuantity(input) {\r\n        if (input.getElementsByClassName('js-test-create-keyword').length >= 5) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Добавляет вложения.\r\n     * \r\n     * @param {object} event объект события.\r\n     */\r\n    uploadAttachment(event) {\r\n        let fileLoadCl = new _fileLoad__WEBPACK_IMPORTED_MODULE_1__[\"FileLoad\"](),\r\n            files = fileLoadCl.readFile(event),\r\n            wrapper = document.getElementsByClassName('js-test-create-attachments-files')[0];\r\n\r\n        for (let file of files) {\r\n            if (this.attachments.length >= 5) {\r\n                this.page.messageCl.show('Ошибка! Количество вложений не может быть больше 5.');\r\n                return;\r\n            }\r\n\r\n            this.attachments[this.attachments.length] = file;\r\n\r\n            // Если вложенный файл является изображеним, то выводится его превью,\r\n            // если нет, то иконка\r\n            let attachmentLogo;\r\n            if (file.type && file.type.indexOf('image') !== -1) {\r\n                attachmentLogo = `<img class=\"test-attachments-file--img js-test-create-attachment-img\" data-action=\"show\" data-run-in-frame=\"photoFrame\">`;\r\n            }\r\n            else {\r\n                attachmentLogo = `<span class=\"i-file icon\"></span>`;\r\n            }\r\n\r\n            wrapper.insertAdjacentHTML('afterbegin',\r\n                `<div class=\"test-attachments-file test-create-attachments-file js-test-create-attachment\">\r\n                    ${attachmentLogo}\r\n                    <div class=\"test-attachments-file-info\">\r\n                        <a class=\"link js-test-create-attachment-name\" title=\"${file.name}\">${file.name}</a>\r\n                        <span class=\"size\">${fileLoadCl.convertBytesToKilobytes(file.size)} KB</span>\r\n                    </div>\r\n                    <button class=\"i-cross btn delete js-test-create-attachment-delete-btn\" data-action=\"deleteAttachment\"></button>\r\n                </div>`);\r\n\r\n\r\n            let attachment = wrapper.getElementsByClassName('js-test-create-attachment')[0],\r\n                delBtn = attachment.getElementsByClassName('js-test-create-attachment-delete-btn')[0];\r\n\r\n            // Если прикрепленный файл является изображением, вешается обработчик события загрузки файла \r\n            if (file.type && file.type.indexOf('image') !== -1) {\r\n                fileLoadCl.readImage(file, this.showImage, {\r\n                    attachmentTag: attachment\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Выводит превью изображения вложения и вешает обработчик.\r\n     * Срабатывает после загрузки файла.\r\n     * \r\n     * @param {string} path путь к загруженному изображению.\r\n     * @param {object} params передаваемые параметры.\r\n     */\r\n    showImage(path, params) {\r\n        const img = params.attachmentTag.getElementsByClassName('js-test-create-attachment-img')[0];\r\n\r\n        img.src = path;\r\n    }\r\n\r\n    /**\r\n     * Удаляет вложение.\r\n     * \r\n     * @param {object} attachment вложение, необходимое для удаления.\r\n     */\r\n    deleteAttachment(target) {\r\n\r\n        // Поиск вложения, необходимого для удаления\r\n        let attachment;\r\n        while ((target = target.parentElement) && target.classList.contains('js-test-create-attachment')) {\r\n            attachment = target;\r\n        }\r\n\r\n        let i = 0;\r\n        for (let file of this.attachments) {\r\n            let attachmentName = attachment.getElementsByClassName('js-test-create-attachment-name')[0].innerText;\r\n\r\n            if (file.name === attachmentName) {\r\n                attachment.remove();\r\n                this.attachments.splice(i, 1);\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n\r\n    addQuestion() {\r\n        this.questionCl.addQuestion();\r\n    }\r\n\r\n    /**\r\n     * Собирает варианты ответов вопроса.\r\n     * \r\n     * @param {object} question вопрос, в котором производится поиск.\r\n     */\r\n    collectAnswers(question) {\r\n        let answersData = [],\r\n            answers = question.getElementsByClassName('js-test-question-answer'),\r\n            answerNum = 1;\r\n\r\n        for (let answer of answers) {\r\n\r\n            // Проверка на то, выбран ли вариант ответа в качестве верного\r\n            let answerIsTrue = false;\r\n            if (question.dataset.answersType === '3' ||\r\n                question.dataset.answersType === '4') {\r\n                answerIsTrue = true;\r\n            }\r\n            else {\r\n                if (answer.getElementsByClassName('js-test-question-answer-choice-inp')[0].checked) {\r\n                    answerIsTrue = true;\r\n                }\r\n            }\r\n\r\n            answersData[answersData.length] = {\r\n                num: answerNum,\r\n                text: answer.getElementsByClassName('js-test-question-answer-inp')[0].value,\r\n                isTrue: answerIsTrue\r\n            };\r\n\r\n            answerNum++;\r\n        }\r\n\r\n        return answersData;\r\n    }\r\n\r\n    /**\r\n     * Собирает вопрос и сопуствующие данные.\r\n     */\r\n    collectQuestions() {\r\n        const questions = this.page.content.getElementsByClassName('js-test-question');\r\n\r\n        let questionsData = [],\r\n            questionNum = 1;\r\n        for (let question of questions) {\r\n\r\n            let questionImg = question.getElementsByClassName('js-test-create-question-image-inp')[0].files[0];\r\n            if (questionImg === undefined) {\r\n                questionImg = null;\r\n            }\r\n\r\n            questionsData[questionsData.length] = {\r\n                num: questionNum,\r\n                title: question.getElementsByClassName('js-test-create-question-title')[0].value,\r\n                answersType: question.dataset.answersType,\r\n                image: questionImg,\r\n                answers: this.collectAnswers(question)\r\n            }\r\n\r\n            questionNum++;\r\n        }\r\n\r\n        return questionsData;\r\n    }\r\n\r\n    /**\r\n     * Собирает данные теста.\r\n     */\r\n    collectData() {\r\n        const form = this.page.content.getElementsByClassName('js-test-bd-form')[0],\r\n            titleInp = form.getElementsByClassName('js-test-create-title')[0],\r\n            descriptionInp = form.getElementsByClassName('js-test-create-title')[0],\r\n            subjectInp = form.getElementsByClassName('js-test-create-subject-select')[0].getElementsByClassName('js-select-value-inp')[0],\r\n            timeToPassInp = form.getElementsByClassName('js-test-create-time-to-pass-select')[0].getElementsByClassName('js-select-value-inp')[0],\r\n            keywordsInp = form.getElementsByClassName('js-test-create-kewords-inp')[0],\r\n            attachmentsInp = form.getElementsByClassName('js-test-create-attachments-inp')[0];\r\n\r\n\r\n        let data = {\r\n            title: titleInp.value,\r\n            description: descriptionInp.value,\r\n            subject: subjectInp.value,\r\n            time: timeToPassInp.value,\r\n            keyWords: keywordsInp.value,\r\n            attachments: attachmentsInp.files,\r\n            questions: this.collectQuestions()\r\n        };\r\n\r\n        console.log(data);\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку страницы.\r\n     * \r\n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n     */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n\r\n        this.setHandlers();\r\n    }\r\n\r\n    setHandlers() {\r\n        this.questionCl.setHandlers();\r\n\r\n        // Вешает обработчик на кнопку выбора предмета теста\r\n        const testCreateSubjectSelect = this.page.content.getElementsByClassName('js-test-create-subject-select')[0],\r\n            testCreateSubjectSelectInp = testCreateSubjectSelect.getElementsByClassName('js-select-value-inp')[0];\r\n        if (testCreateSubjectSelect !== undefined) {\r\n            testCreateSubjectSelectInp.oninput = () => this.selectSubject(testCreateSubjectSelect);\r\n        }\r\n\r\n        // Вешает обработчик на поле для ввода ключевых слов\r\n        const testCreateKeywordsInput = this.page.content.getElementsByClassName('js-test-create-kewords-inp')[0];\r\n        if (testCreateKeywordsInput !== undefined) {\r\n            testCreateKeywordsInput.onkeyup = (event) => this.highlightKeyword(event, testCreateKeywordsInput);\r\n            testCreateKeywordsInput.onkeydown = (event) => this.highlightKeyword(event, testCreateKeywordsInput);\r\n        }\r\n\r\n        // Вешает обработчик на кнопку прикрепления вложений\r\n        const testCreateAttchmentsInput = this.page.content.getElementsByClassName('js-test-create-attachments-inp')[0];\r\n        if (testCreateAttchmentsInput !== undefined) {\r\n            testCreateAttchmentsInput.onchange = (event) => this.uploadAttachment(event, testCreateAttchmentsInput);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/test-%D1%81reate/testCreate.js?");

/***/ }),

/***/ "./src/js/test-сreate/testCreateContent.js":
/*!*************************************************!*\
  !*** ./src/js/test-сreate/testCreateContent.js ***!
  \*************************************************/
/*! exports provided: TestCreateContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestCreateContent\", function() { return TestCreateContent; });\nclass TestCreateContent {\r\n  getPage() {\r\n    return `<div class=\"cnt_bd-test js-test-bd-form\">\r\n    <div class=\"test_hd test-create_hd\">\r\n      <div class=\"test_hd-info test-create_hd-info\">\r\n        <div class=\"test-subject-logo_wr\">\r\n          <div class=\"test-subject-logo subject-bcg-0 js-test-subject-logo\"></div>\r\n        </div>\r\n        <div class=\"test_hd-title\">\r\n          <label class=\"test-create_hd-title-label first\">\r\n            <span class=\"label-txt\">Название</span>\r\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\r\n              data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp js-test-create-title\" name=\"testTitle\" data-characters-max-limit-value=\"100\" type=\"text\">\r\n              <span class=\"inp-limit--value js-inp-limit-value\">100</span>\r\n            </div>\r\n          </label>\r\n          <label class=\"test-create_hd-title-label\">\r\n            <span class=\"label-txt\">Описание</span>\r\n            <div class=\"inp_wr inp-limit-value-visisble js-inp-wrapper\" data-characters-limit=\"true\"\r\n              data-auto-hang-handler=\"true\">\r\n              <input class=\"inp js-inp js-test-create-description\" name=\"testDescription\" data-characters-max-limit-value=\"120\" type=\"text\">\r\n              <span class=\"inp-limit--value js-inp-limit-value\">120</span>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"test_bd test-create_bd\">\r\n      <div class=\"test_hd-row test-create_bd-subject\">\r\n        <label class=\"test-create_bd-label_select\">\r\n          <span class=\"label-txt\">Предмет</span>\r\n          <div class=\"test-create_bd-select select js-select js-test-create-subject-select\"\r\n            title=\"Основной предмет теста\">\r\n            <button class=\"test-create_bd-select_hd js-select-head select_hd\">\r\n              <div class=\"select_hd-value js-select-value\" data-select-option-value=\"0\"></div>\r\n              <div class=\"select_hd--icon i-down-arrow\"></div>\r\n            </button>\r\n            <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"0\">\r\n            <div class=\"select_bd\">\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"1\">\r\n                <div class=\"select-subject-option--square subject-bcg-1\"></div>\r\n                <div>Математика</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"2\">\r\n                <div class=\"select-subject-option--square subject-bcg-1-1\"></div>\r\n                <div>Алгебра</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"3\">\r\n                <div class=\"select-subject-option--square subject-bcg-1-2\"></div>\r\n                <div>Геометрия</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"4\">\r\n                <div class=\"select-subject-option--square subject-bcg-1-3\"></div>\r\n                <div>Информатика</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"5\">\r\n                <div class=\"select-subject-option--square subject-bcg-2\"></div>\r\n                <div>Родной язык</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"6\">\r\n                <div class=\"select-subject-option--square subject-bcg-2-1\"></div>\r\n                <div>Литература</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"7\">\r\n                <div class=\"select-subject-option--square subject-bcg-2-2\"></div>\r\n                <div>Иностранный язык</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"8\">\r\n                <div class=\"select-subject-option--square subject-bcg-3\"></div>\r\n                <div>География</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"9\">\r\n                <div class=\"select-subject-option--square subject-bcg-3-1\"></div>\r\n                <div>Биология</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"10\">\r\n                <div class=\"select-subject-option--square subject-bcg-3-2\"></div>\r\n                <div>Физика</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"11\">\r\n                <div class=\"select-subject-option--square subject-bcg-3-3\"></div>\r\n                <div>Химия</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"12\">\r\n                <div class=\"select-subject-option--square subject-bcg-3-4\"></div>\r\n                <div>Астрономия</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"13\">\r\n                <div class=\"select-subject-option--square subject-bcg-4\"></div>\r\n                <div>История</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"14\">\r\n                <div class=\"select-subject-option--square subject-bcg-4-1\"></div>\r\n                <div>Обществознание</div>\r\n              </button>\r\n              <button\r\n                class=\"select_bd-option js-test-create-subject-select-option select_bd-option js-test-create-subject-select-option-last\"\r\n                data-select-option=\"0\">\r\n                <div class=\"select-subject-option--square subject-bcg-0\"></div>\r\n                <div>Другой</div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div class=\"test_hd-row test-create_bd-time\">\r\n        <label class=\"test-create_bd-label_select\">\r\n          <span class=\"label-txt\">Время на прохождение</span>\r\n          <div class=\"test-create_bd-select select js-select js-test-create-time-to-pass-select\">\r\n            <button class=\"test-create_bd-select_hd select_hd js-select-head\">\r\n              <div class=\"select_hd-value js-select-value\" data-select-option-value=\"0\">\r\n                <div>Нет</div>\r\n              </div>\r\n              <div class=\"select_hd--icon i-down-arrow\"></div>\r\n            </button>\r\n            <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"0\">\r\n            <div class=\"select_bd\">\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"1\">\r\n                <div>5 минут</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"2\">\r\n                <div>15 минут</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"3\">\r\n                <div>30 минут</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"4\">\r\n                <div>1 час</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"5\">\r\n                <div>2 часа</div>\r\n              </button>\r\n              <button class=\"select_bd-option js-test-create-subject-select-option\" data-select-option=\"6\">\r\n                <div>Нет</div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div class=\"test_hd-row test-create_bd-keywords\">\r\n        <label class=\"test-create_bd-keywords-label\">\r\n          <span class=\"label-txt\">Ключевые слова</span>\r\n          <div class=\"test-create_bd-keywords-label--inp inp js-test-create-kewords-inp\" name=\"testKeywords\" contenteditable=\"true\">\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div class=\"test_hd-row test-attachments test-create_bd-attachments\">\r\n        <span class=\"label-txt\">Вложения</span>\r\n        <div class=\"test-create_bd-attachments-files js-test-create-attachments-files\">\r\n          <label class=\"test-create_bd-attachments-label btn\">\r\n            <span class=\"i-clip\"></span>\r\n            <span>Прикрепить</span>\r\n            <input class=\"test-create_bd-attachments-label--inp js-test-create-attachments-inp inp\" type=\"file\"\r\n              multiple>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"test_create_bd-questions test-questions js-test-questions\">\r\n        <div class=\"test_create_bd-question js-test-question\" data-question-num=\"1\" data-answers-type=\"1\">\r\n          <div class=\"test_create_bd-question_bd js-test-question-body\">\r\n            <div class=\"test_create_bd-question-col1\">\r\n              <div class=\"test_create_bd-question-col1-row\">\r\n                <button class=\"test_create_bd-question-col1-row--btn btn i-cross js-test-create-question-del-btn\" data-question-action=\"deleteQuestion\"></button>\r\n                <div class=\"inp_wr js-inp-wrapper\" data-characters-limit=\"true\" data-auto-hang-handler=\"false\">\r\n                  <textarea class=\"test_create_bd-question-title--inp inp js-inp js-test-create-question-title\"\r\n                    name=\"question\" type=\"text\" data-characters-max-limit-value=\"250\"\r\n                    placeholder=\"Вопрос №1\"></textarea>\r\n                </div>\r\n              </div>\r\n              <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-image\">\r\n                <div class=\"test_create_bd-question-col1-image\">\r\n                  <button\r\n                    class=\"test_create_bd-question-img--del-btn i-cross btn js-test-question-img-del-btn\" data-question-action=\"deleteImage\"></button>\r\n                  <img class=\"test_create_bd-question--img js-test-question-img\" data-action=\"show\" data-run-in-frame=\"photoFrame\">\r\n                </div>\r\n              </div>\r\n              <div\r\n                class=\"test_create_bd-question-col1-row test_create_bd-question-answers js-test-question-answers\">\r\n                <div class=\"test_create_bd-question-answer js-test-question-answer\" data-answer-num=\"1\">\r\n                  <div class=\"test-question-answer-checkbox js-test-question-answer-choice-btn\">\r\n                    <input class=\"test-question-answer-checkbox--inp js-test-question-answer-choice-inp\"\r\n                      id=\"answer11\" name=\"answerCheck1\" type=\"checkbox\">\r\n                    <label class=\"js-test-question-answer-choice-label\" for=\"answer11\"></label>\r\n                  </div>\r\n                  <input class=\"inp test_create_bd-question-answer--inp js-test-question-answer-inp\" name=\"answer\"\r\n                    type=\"text\" placeholder=\"Ответ №1\">\r\n                  <button\r\n                    class=\"test_create_bd-question-answer--btn btn i-cross js-test-create-question-answer-delete-btn\" data-answer-action=\"deleteAnswer\"></button>\r\n                </div>\r\n              </div>\r\n              <div class=\"test_create_bd-question-col1-row test_create_bd-question-col1-row-add-answer\">\r\n                <button class=\"test_create_bd-question-answer-add--btn btn btn-2 js-test-create-answer-add-btn\" data-answer-action=\"addAnswer\">\r\n                  <span class=\"i-plus\"></span>\r\n                  <span class=\"txt\">Вариант</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"test_create_bd-question-col2\">\r\n              <label class=\"test_create_bd-question-col2--btn btn i-image\">\r\n                <input class=\"test_create_bd-question-col2--inp js-test-create-question-image-inp\" type=\"file\"\r\n                  accept=\"image/*\">\r\n              </label>\r\n              <div class=\"test_create_bd-question--select select js-select js-test-create-answer-type-select\">\r\n                <button class=\"test_create_bd-question--select_hd select_hd js-select-head\">\r\n                  <div class=\"select_hd-value js-select-value\" data-select-option-value=\"1\">\r\n                    <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\r\n                    <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\r\n                  </div>\r\n                  <input class=\"select_hd-value--inp js-select-value-inp\" type=\"text\" value=\"1\">\r\n                  <div class=\"select_hd--icon i-down-arrow\"></div>\r\n                </button>\r\n                <div class=\"select_bd\">\r\n                  <button class=\"select_bd-option\" data-select-option=\"1\">\r\n                    <div class=\"test_create_bd-question--select-option--icon i-checkbox\"></div>\r\n                    <div class=\"test_create_bd-question--select-option--txt\">Множественный выбор</div>\r\n                  </button>\r\n                  <button class=\"select_bd-option\" data-select-option=\"2\">\r\n                    <div class=\"test_create_bd-question--select-option--icon i-radiobox\"></div>\r\n                    <div class=\"test_create_bd-question--select-option--txt\">Одиночный выбор</div>\r\n                  </button>\r\n                  <button class=\"select_bd-option\" data-select-option=\"3\">\r\n                    <div class=\"test_create_bd-question--select-option--icon i-text\"></div>\r\n                    <div class=\"test_create_bd-question--select-option--txt\">Текстовый ответ</div>\r\n                  </button>\r\n                  <button class=\"select_bd-option\" data-select-option=\"4\">\r\n                    <div class=\"test_create_bd-question--select-option--icon i-number\"></div>\r\n                    <div class=\"test_create_bd-question--select-option--txt\">Числовой ответ</div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"test_create_bd-question-add js-test-create-question-add\">\r\n        <div class=\"test_create_bd-question-add\">\r\n          <div class=\"test_create_bd-question-add-button more-menu js-more-menu\">\r\n            <button class=\"test_create_bd-question-add--btn btn btn-2 js-test-question-add-btn\" data-action=\"addQuestion\">\r\n              <span class=\"txt\">Добавить вопрос</span>\r\n            </button>\r\n            <button class=\"test_create_bd-question-add--btn-more btn i-more js-more-menu-btn\"></button>\r\n            <div class=\"test_create_bd-question-add--btn-more-list more-menu-list js-test-question-add-btn-params\">\r\n              <div class=\"question-add--btn-more-list-item more-menu-list--btn first\">\r\n                <span>Вопросы:</span>\r\n                <input class=\"question-add-btn-more--inp inp js-test-question-add-btn-params-questions\"\r\n                  type=\"number\" value=\"1\" min=\"1\" max=\"30\">\r\n              </div>\r\n              <div class=\"question-add--btn-more-list-item more-menu-list--btn\">\r\n                <span>Ответы:</span>\r\n                <input class=\"question-add-btn-more--inp inp js-test-question-add-btn-params-answers\" type=\"number\"\r\n                  value=\"1\" min=\"1\" max=\"6\">\r\n              </div>\r\n              <div class=\"question-add--btn-more-list-item more-menu-list--btn last\">\r\n                <span>Тип ответа:</span>\r\n                <div class=\"question-add-btn-more--select select js-select\" title=\"Сортировка по предмету\">\r\n                  <button class=\"question-add-btn-more--select_hd js-select-head select_hd\">\r\n                    <div class=\"question-add-btn-more--select-value select_hd-value js-select-value\"\r\n                      data-select-option-value=\"1\">\r\n                      <div class=\"question-add-btn-more--select-option--icon i-checkbox\"></div>\r\n                    </div>\r\n                    <input class=\"select_hd-value--inp js-select-value-inp js-test-question-add-btn-params-type\"\r\n                      type=\"text\" value=\"1\">\r\n                  </button>\r\n                  <div class=\"select_bd\">\r\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"1\">\r\n                      <div class=\"question-add-btn-more--select-option--icon i-checkbox\"></div>\r\n                    </button>\r\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"2\">\r\n                      <div class=\"question-add-btn-more--select-option--icon i-radiobox\"></div>\r\n                    </button>\r\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"3\">\r\n                      <div class=\"question-add-btn-more--select-option--icon i-text\"></div>\r\n                    </button>\r\n                    <button class=\"question-add-btn-more--select-option select_bd-option\" data-select-option=\"4\">\r\n                      <div class=\"question-add-btn-more--select-option--icon i-number\"></div>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"test_ft\">\r\n      <button class=\"test_ft--btn btn btn-1\" data-action=\"collectData\">Сохранить</button>\r\n    </div>\r\n  </div>`;\r\n  }\r\n}\n\n//# sourceURL=webpack:///./src/js/test-%D1%81reate/testCreateContent.js?");

/***/ }),

/***/ "./src/js/test/test.js":
/*!*****************************!*\
  !*** ./src/js/test/test.js ***!
  \*****************************/
/*! exports provided: Test */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Test\", function() { return Test; });\n/* harmony import */ var _testContent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./testContent */ \"./src/js/test/testContent.js\");\n\r\n\r\nclass Test {\r\n    constructor(page) {\r\n        this.page = page;\r\n\r\n        this.contentCl = new _testContent__WEBPACK_IMPORTED_MODULE_0__[\"TestContent\"]();\r\n    }\r\n\r\n    /**\r\n     * Отвечает за загрузку страницы.\r\n     * \r\n     * @param {object} contentBd DOM элемент, в которое должно вставляться основное содержимое.\r\n     */\r\n    runPage(contentBd) {\r\n        contentBd.innerHTML = this.contentCl.getPage();\r\n\r\n        this.setHandlers();\r\n    }\r\n\r\n    /**\r\n     * Устанавливает обработчики событий.\r\n     */\r\n    setHandlers() {\r\n\r\n        // Устанавливает обработчики событий на вложения, которые являются изображения, для возможности увеличенного просмотра\r\n        const attachments = this.page.content.getElementsByClassName('js-test-attachment');\r\n        for (let attachment of attachments) {\r\n            let img = attachment.getElementsByClassName('js-test-attachment-img')[0];\r\n            if (img !== undefined) {\r\n                img.onclick = () => this.page.photoFrameCl.showOrCloseFrame(img.src);\r\n            }\r\n        }\r\n\r\n        const questionImgs = this.page.content.getElementsByClassName('js-test-question-img');\r\n        for (let questionImg of questionImgs) {\r\n            questionImg.onclick = () => this.page.photoFrameCl.showOrCloseFrame(questionImg.src);\r\n        }\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/test/test.js?");

/***/ }),

/***/ "./src/js/test/testContent.js":
/*!************************************!*\
  !*** ./src/js/test/testContent.js ***!
  \************************************/
/*! exports provided: TestContent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TestContent\", function() { return TestContent; });\nclass TestContent {\r\n    getPage() {\r\n        return `<div class=\"cnt_bd-test\">\r\n    <div class=\"test_hd test-result_hd subject-bcg-1-opacity\">\r\n      <div class=\"test_hd-info\">\r\n        <div class=\"test-subject-logo_wr\">\r\n          <div class=\"test-subject-logo subject-bcg-1 js-test-subject-logo\">М</div>\r\n        </div>\r\n        <div class=\"test_hd-title\">\r\n          <h3 class=\"test_hd-title--heading\">Умножение десятичных дробей №2</h3>\r\n          <p class=\"test_hd-title--description\">Самостоятельная работа для 5 класса на тему \"Умножение деятичных\r\n            дробей\"</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"test_hd-dsc\">\r\n        <div class=\"test_hd-dsc-subject-name\" data-test-subcject-num=\"1\">Математика</div>\r\n        <div class=\"test_hd-dsc-time\">\r\n          <span class=\"test_hd-dsc-time--txt\">Время на прохождение:</span>\r\n          <span class=\"test_hd-dsc-time--value\">30:00</span>\r\n        </div>\r\n        <div class=\"raiting\">\r\n          <div class=\"raiting-stars\">\r\n            <div class=\"raiting-stars--scale\"></div>\r\n            <div class=\"raiting-star star-1\"><span class=\"i-star2\"></span></div>\r\n            <div class=\"raiting-star star-2\"><span class=\"i-star2\"></span></div>\r\n            <div class=\"raiting-star star-3\"><span class=\"i-star2\"></span></div>\r\n            <div class=\"raiting-star star-4\"><span class=\"i-star2\"></span></div>\r\n            <div class=\"raiting-star star-5\"><span class=\"i-star2\"></span></div>\r\n          </div>\r\n          <div class=\"raiting-star--voted\">626</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"test_bd\">\r\n      <div class=\"test-attachments js-test-attachments\">\r\n        <div class=\"test-attachments-file js-test-attachment\">\r\n          <img class=\"test-attachments-file--img js-test-attachment-img\"\r\n            src=\"https://reshenie.club/ulp/matematika/5klass/a_merzljak_i_dr/zadanie_287_efr.png\">\r\n          <div class=\"test-attachments-file-info\">\r\n            <a class=\"link js-test-attachment-name\" href=\"#\"\r\n              title=\"image_2020-05-06_22-01-53.png\">image_2020-05-06_22-01-53.png</a>\r\n            <span class=\"size\">27.264 KB</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"test-attachments-file js-test-attachment\">\r\n          <span class=\"i-file icon\"></span>\r\n          <div class=\"test-attachments-file-info\">\r\n            <a class=\"link js-test-attachment-name\" href=\"#\" title=\"HASP_LM_setup.zip\">HASP_LM_setup.zip</a>\r\n            <span class=\"size\">16725.998 KB</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"test-questions\"></div>\r\n    </div>\r\n\r\n    <div class=\"test_ft\">\r\n      <button class=\"test_ft--btn btn btn-1\">Начать</button>\r\n    </div>\r\n  </div>`;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/test/testContent.js?");

/***/ }),

/***/ "./src/js/timer.js":
/*!*************************!*\
  !*** ./src/js/timer.js ***!
  \*************************/
/*! exports provided: Timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Timer\", function() { return Timer; });\n/**\r\n * Класс содержащий методы для работы с таймерами.\r\n */\r\nclass Timer {\r\n    countDown(initialValue, finishValue = 0) {\r\n        if (initialValue === finishValue) {\r\n            return initialValue;\r\n        }\r\n\r\n        initialValue -= 1;\r\n\r\n        return initialValue;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/js/timer.js?");

/***/ })

/******/ });